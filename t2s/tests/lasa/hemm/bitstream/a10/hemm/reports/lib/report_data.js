var areaJSON='{"columns":["", "ALUTs", "FFs", "RAMs", "DSPs", "MLABs", "Details"], "debug_enabled":"true", "type":"module", "total_percent":[47.8876, 28.5874, 21.6518, 70.328, 85.5731], "total":[219391, 369986, 1908, 1299, 1243], "name":"Kernel System", "max_resources":[854400, 1708800, 2713, 1518, 42720], "children":[{"name":"Static Partition", "type":"partition", "children":[{"name":"Board interface", "type":"resource", "data":[134500, 172452, 397, 0, 0], "details":[{"type":"text", "text":"Platform interface logic."}]}]}, {"name":"Global interconnect", "type":"resource", "data":[8779, 12545, 78, 0, 0], "details":[{"type":"text", "text":"Global interconnect for 2 global loads and 1 global store. Reduce number of global loads and stores to simplify global interconnect."}, {"type":"brief", "text":"For 2 global loads and 1 global store."}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Global Memory Interconnect", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#hnj1476724450050"}]}]}, {"name":"System description ROM", "type":"resource", "data":[0, 67, 2, 0, 0], "details":[{"type":"text", "text":"This read-only memory contains information for the host about the system and about each kernel in the system, including kernel names, arguments, and attributes. The system description ROM ensures that the binary image on the FPGA is compatible with the host program."}, {"type":"brief", "text":"Contains information for the host."}]}, {"name":"Pipe and channel resources", "type":"group", "children":[{"name":"hemm.cl:73 (aLoader_aFeeder_channel)", "type":"resource", "data":[11, 1542, 13, 0, 0], "debug":[[{"filename":"hemm.cl", "line":73}]], "details":[{"type":"text", "text":"Channel is implemented 512 bits wide by 256 deep."}, {"type":"brief", "text":"512b wide by 256 deep."}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Channels", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#qah1476410829821"}]}]}, {"name":"hemm.cl:74 (aFeeder_X_channel)", "type":"resource", "data":[11, 15366, 128, 0, 0], "debug":[[{"filename":"hemm.cl", "line":74}]], "details":[{"type":"text", "text":"Channel is implemented 5120 bits wide by 256 deep."}, {"type":"brief", "text":"5120b wide by 256 deep."}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Channels", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#qah1476410829821"}]}]}, {"name":"hemm.cl:75 (bLoader_bFeeder_channel)", "type":"resource", "data":[11, 1542, 13, 0, 0], "debug":[[{"filename":"hemm.cl", "line":75}]], "details":[{"type":"text", "text":"Channel is implemented 512 bits wide by 256 deep."}, {"type":"brief", "text":"512b wide by 256 deep."}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Channels", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#qah1476410829821"}]}]}, {"name":"hemm.cl:76 (bFeeder_Y_channel)", "type":"resource", "data":[11, 6150, 52, 0, 0], "debug":[[{"filename":"hemm.cl", "line":76}]], "details":[{"type":"text", "text":"Channel is implemented 2048 bits wide by 256 deep."}, {"type":"brief", "text":"2048b wide by 256 deep."}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Channels", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#qah1476410829821"}]}]}, {"name":"hemm.cl:77 (Out_unloader_channel)", "type":"resource", "data":[11, 774, 7, 0, 0], "debug":[[{"filename":"hemm.cl", "line":77}]], "details":[{"type":"text", "text":"Channel is implemented 256 bits wide by 256 deep."}, {"type":"brief", "text":"256b wide by 256 deep."}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Channels", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#qah1476410829821"}]}]}]}, {"name":"Intel_Internal_Collect_Autorun_Profiling", "compute_units":1, "type":"function", "total_percent":[0.30677, 0.180009, 0.141093, 0, 0], "total_kernel_resources":[1338, 2411, 0, 0, 10], "details":[{"type":"text", "text":"Number of compute units: 1"}, {"type":"text", "text":"Kernel attribute \'uses_global_work_offset\' not specified. Add \'__attribute__((uses_global_work_offset(0)))\' to reduce area utilization if the kernel will always be enqueued with a 0 or NULL global_work_offset argument in clEnqueueNDRangeKernel. Add \'__attribute__((uses_global_work_offset(1)))\' to hide this suggestion without affecting kernel functionality."}, {"type":"brief", "text":"1 compute unit.\\nKernel attribute \'uses_global_work_offset\' not specified. Add \'__attribute__((uses_global_work_offset(0)))\' to reduce area utilization if the kernel will always be enqueued with a 0 or NULL global_work_offset argument in clEnqueueNDRangeKernel. Add \'__attribute__((uses_global_work_offset(1)))\' to hide this suggestion without affecting kernel functionality."}], "children":[{"name":"Function overhead", "type":"resource", "data":[1338, 2411, 0, 0, 10], "details":[{"type":"text", "text":"Kernel dispatch logic."}, {"type":"brief", "text":"Kernel dispatch logic."}]}]}, {"name":"kernel_Out", "compute_units":1, "type":"function", "total_percent":[8.75928, 4.99427, 4.1401, 11.6108, 84.5191], "total_kernel_resources":[28391, 70746, 315, 1283, 714], "details":[{"type":"text", "text":"Number of compute units: 1"}, {"type":"text", "text":"Kernel attribute \'uses_global_work_offset\' not specified. Add \'__attribute__((uses_global_work_offset(0)))\' to reduce area utilization if the kernel will always be enqueued with a 0 or NULL global_work_offset argument in clEnqueueNDRangeKernel. Add \'__attribute__((uses_global_work_offset(1)))\' to hide this suggestion without affecting kernel functionality."}, {"type":"brief", "text":"1 compute unit.\\nKernel attribute \'uses_global_work_offset\' not specified. Add \'__attribute__((uses_global_work_offset(0)))\' to reduce area utilization if the kernel will always be enqueued with a 0 or NULL global_work_offset argument in clEnqueueNDRangeKernel. Add \'__attribute__((uses_global_work_offset(1)))\' to hide this suggestion without affecting kernel functionality."}], "children":[{"name":"Function overhead", "type":"resource", "data":[1338, 2411, 0, 0, 10], "details":[{"type":"text", "text":"Kernel dispatch logic."}, {"type":"brief", "text":"Kernel dispatch logic."}]}, {"name":"Coalesced Private Variables: \\n - \'X_shreg\' (hemm.cl:229)\\n - \'aFeeder_X_channel_array\' (hemm.cl:231)", "type":"resource", "data":[1171, 5955, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":229}], [{"filename":"hemm.cl", "line":231}]], "details":[{"type":"text", "text":"Type: Shift Register (160 or fewer tap points)"}, {"type":"text", "text":"160 registers of width 32 and depth 1"}, {"type":"brief", "text":"Shift Register,\\n160 regs, 32 width by 1 depth"}]}, {"name":"Coalesced Private Variables: \\n - \'Y_shreg\' (hemm.cl:227)\\n - \'bFeeder_Y_channel_array\' (hemm.cl:230)", "type":"resource", "data":[448, 2304, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":227}], [{"filename":"hemm.cl", "line":230}]], "details":[{"type":"text", "text":"Type: Shift Register (64 or fewer tap points)"}, {"type":"text", "text":"64 registers of width 32 and depth 1"}, {"type":"brief", "text":"Shift Register,\\n64 regs, 32 width by 1 depth"}]}, {"name":"Coalesced Private Variables: \\n - \'Z_shreg\' (hemm.cl:225)\\n - \'Z_pipe_shreg\' (hemm.cl:226)", "type":"resource", "data":[7, 15, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":225}], [{"filename":"hemm.cl", "line":226}]], "details":[{"type":"text", "text":"Type: Shift Register (1 or fewer tap point)"}, {"type":"text", "text":"1 register of width 11 and depth 1"}, {"type":"brief", "text":"Shift Register,\\n1 reg, 11 width by 1 depth"}]}, {"name":"Private Variable: \\n - \'Z_pipe_base\' (hemm.cl:234)", "type":"resource", "data":[7, 36, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":234}]], "details":[{"type":"text", "text":"Type: Shift Register (1 or fewer tap point)"}, {"type":"text", "text":"1 register of width 32 and depth 1"}, {"type":"brief", "text":"Shift Register,\\n1 reg, 32 width by 1 depth"}]}, {"name":"Private Variable: \\n - \'Z_pipe_iter\' (hemm.cl:233)", "type":"resource", "data":[14, 72, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":233}]], "details":[{"type":"text", "text":"Type: Register"}, {"type":"text", "text":"2 registers of width 32 and depth 1"}, {"type":"brief", "text":"Register,\\n2 regs, 32 width by 1 depth"}]}, {"name":"Private Variable: \\n - \'Z_pipe_shreg\' (hemm.cl:226)", "type":"resource", "data":[0, 0, 144, 0, 0], "debug":[[{"filename":"hemm.cl", "line":226}]], "details":[{"type":"text", "text":"Type: Shift Register (36 or fewer tap points)"}, {"type":"text", "text":"36 registers of width 64 and depth 1024"}, {"type":"brief", "text":"Shift Register,\\n36 regs, 64 width by 1024 depth"}]}, {"name":"Private Variable: \\n - \'Z_shreg\' (hemm.cl:225)", "type":"resource", "data":[0, 0, 160, 0, 0], "debug":[[{"filename":"hemm.cl", "line":225}]], "details":[{"type":"text", "text":"Type: Shift Register (40 or fewer tap points)"}, {"type":"text", "text":"40 registers of width 64 and depth 1024"}, {"type":"brief", "text":"Shift Register,\\n40 regs, 64 width by 1024 depth"}]}, {"name":"Private Variable: \\n - \'i_j_k\' (hemm.cl:237)", "type":"resource", "data":[14, 73, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":237}]], "details":[{"type":"text", "text":"Type: Register"}, {"type":"text", "text":"1 register of width 32 and depth 1"}, {"type":"text", "text":"1 register of width 33 and depth 1"}, {"type":"brief", "text":"Register,\\n1 reg, 32 width by 1 depth,\\n1 reg, 33 width by 1 depth"}]}, {"name":"Private Variable: \\n - \'kk_ii_jj\' (hemm.cl:238)", "type":"resource", "data":[14, 56, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":238}]], "details":[{"type":"text", "text":"Type: Register"}, {"type":"text", "text":"1 register of width 16 and depth 1"}, {"type":"text", "text":"1 register of width 32 and depth 1"}, {"type":"brief", "text":"Register,\\n1 reg, 16 width by 1 depth,\\n1 reg, 32 width by 1 depth"}]}, {"name":"kernel_Out.B0", "type":"basicblock", "children":[{"name":"State", "type":"resource", "data":[8, 212, 0, 0, 0], "details":[{"type":"brief", "text":"Live values and control logic"}, {"type":"text", "text":"Resources for live values and control logic. To reduce this area:", "details":[{"type":"text", "text":"reduce size of local variables"}, {"type":"text", "text":"reduce scope of local variables, localizing them as much as possible"}, {"type":"text", "text":"reduce number of nested loops"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[8, 114, 0, 0, 0]}, {"name":"hemm.cl:237", "type":"resource", "data":[0, 98, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":237}]]}]}, {"name":"Feedback", "type":"resource", "data":[7, 2, 0, 0, 0], "details":[{"type":"brief", "text":"Loop-carried dependencies"}, {"type":"text", "text":"Resources for loop-carried dependencies. To reduce this area:", "details":[{"type":"text", "text":"reduce number and size of loop-carried variables"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[7, 2, 0, 0, 0]}]}, {"name":"Cluster logic", "type":"resource", "data":[7, 5, 0, 0, 1], "details":[{"type":"brief", "text":"Logic required to efficiently support sets of operations that do not stall"}, {"type":"text", "text":"Logic required to efficiently support sets of operations that do not stall. This area cannot be affected directly."}]}, {"name":"Computation", "type":"resource", "children":[{"name":"hemm.cl:237", "type":"resource", "data":[456, 56, 0, 3, 0], "debug":[[{"filename":"hemm.cl", "line":237}]], "children":[{"name":"32-bit Integer Compare", "type":"resource", "count":2, "data":[35, 1, 0, 0, 0]}, {"name":"32-bit Integer Divide", "type":"resource", "count":1, "data":[308, 55, 0, 0, 0]}, {"name":"32-bit Integer Multiply", "type":"resource", "count":2, "data":[64, 0, 0, 3, 0]}, {"name":"32-bit Select", "type":"resource", "count":1, "data":[16, 0, 0, 0, 0]}, {"name":"33-bit Integer Add", "type":"resource", "count":1, "data":[33, 0, 0, 0, 0]}], "replace_name":"true"}]}]}, {"name":"kernel_Out.B1", "type":"basicblock", "children":[{"name":"State", "type":"resource", "data":[0, 2, 0, 0, 0], "details":[{"type":"brief", "text":"Live values and control logic"}, {"type":"text", "text":"Resources for live values and control logic. To reduce this area:", "details":[{"type":"text", "text":"reduce size of local variables"}, {"type":"text", "text":"reduce scope of local variables, localizing them as much as possible"}, {"type":"text", "text":"reduce number of nested loops"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[0, 2, 0, 0, 0]}]}, {"name":"Feedback", "type":"resource", "data":[10, 7, 0, 0, 0], "details":[{"type":"brief", "text":"Loop-carried dependencies"}, {"type":"text", "text":"Resources for loop-carried dependencies. To reduce this area:", "details":[{"type":"text", "text":"reduce number and size of loop-carried variables"}]}], "children":[{"name":"hemm.cl:226", "type":"resource", "data":[1, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":226}]]}, {"name":"hemm.cl:233", "type":"resource", "data":[1, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":233}]]}, {"name":"hemm.cl:237", "type":"resource", "data":[1, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":237}]]}, {"name":"hemm.cl:251", "type":"resource", "data":[7, 7, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":251}]]}]}, {"name":"Cluster logic", "type":"resource", "data":[6, 4, 0, 0, 4], "details":[{"type":"brief", "text":"Logic required to efficiently support sets of operations that do not stall"}, {"type":"text", "text":"Logic required to efficiently support sets of operations that do not stall. This area cannot be affected directly."}]}, {"name":"Computation", "type":"resource", "children":[{"name":"hemm.cl:226", "type":"resource", "data":[27, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":226}]], "children":[{"name":"33-bit Select", "type":"resource", "count":1, "data":[27, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"hemm.cl:237", "type":"resource", "data":[76, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":237}]], "children":[{"name":"32-bit Integer Add", "type":"resource", "count":1, "data":[32, 0, 0, 0, 0]}, {"name":"33-bit Integer Add", "type":"resource", "count":1, "data":[33, 0, 0, 0, 0]}, {"name":"33-bit Integer Compare", "type":"resource", "count":1, "data":[11, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"hemm.cl:238", "type":"resource", "data":[32, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":238}]], "children":[{"name":"32-bit Integer Add", "type":"resource", "count":1, "data":[32, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"hemm.cl:251", "type":"resource", "data":[1, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":251}]], "children":[{"name":"1-bit And", "type":"resource", "count":1, "data":[1, 0, 0, 0, 0]}], "replace_name":"true"}]}]}, {"name":"kernel_Out.B2", "type":"basicblock", "children":[{"name":"Feedback", "type":"resource", "data":[5, 8, 0, 0, 0], "details":[{"type":"brief", "text":"Loop-carried dependencies"}, {"type":"text", "text":"Resources for loop-carried dependencies. To reduce this area:", "details":[{"type":"text", "text":"reduce number and size of loop-carried variables"}]}], "children":[{"name":"hemm.cl:309", "type":"resource", "data":[5, 8, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":309}]]}]}]}, {"name":"kernel_Out.B3", "type":"basicblock", "children":[{"name":"State", "type":"resource", "data":[6746, 55090, 2, 0, 699], "details":[{"type":"brief", "text":"Live values and control logic"}, {"type":"text", "text":"Resources for live values and control logic. To reduce this area:", "details":[{"type":"text", "text":"reduce size of local variables"}, {"type":"text", "text":"reduce scope of local variables, localizing them as much as possible"}, {"type":"text", "text":"reduce number of nested loops"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[6746, 55090, 2, 0, 699]}]}, {"name":"Feedback", "type":"resource", "data":[2332, 1665, 0, 0, 0], "details":[{"type":"brief", "text":"Loop-carried dependencies"}, {"type":"text", "text":"Resources for loop-carried dependencies. To reduce this area:", "details":[{"type":"text", "text":"reduce number and size of loop-carried variables"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[637.333, 332.667, 0, 0, 0]}, {"name":"hemm.cl:225", "type":"resource", "data":[306.667, 146.667, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":225}]]}, {"name":"hemm.cl:226", "type":"resource", "data":[290, 144.667, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":226}]]}, {"name":"hemm.cl:230", "type":"resource", "data":[85.3334, 85.3334, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":230}]]}, {"name":"hemm.cl:231", "type":"resource", "data":[256, 256, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":231}]]}, {"name":"hemm.cl:233", "type":"resource", "data":[0.333333, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":233}]]}, {"name":"hemm.cl:234", "type":"resource", "data":[2, 2, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":234}]]}, {"name":"hemm.cl:237", "type":"resource", "data":[16, 41, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":237}]]}, {"name":"hemm.cl:238", "type":"resource", "data":[25, 22, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":238}]]}, {"name":"hemm.cl:251", "type":"resource", "data":[16, 10, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":251}]]}, {"name":"hemm.cl:252", "type":"resource", "data":[21.3333, 21.3333, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":252}]]}, {"name":"hemm.cl:253", "type":"resource", "data":[32, 32, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":253}]]}, {"name":"hemm.cl:268", "type":"resource", "data":[310.667, 150.667, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":268}]]}, {"name":"hemm.cl:274", "type":"resource", "data":[56, 288, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":274}]]}, {"name":"hemm.cl:303", "type":"resource", "data":[277, 132.667, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":303}]]}, {"name":"hemm.cl:306", "type":"resource", "data":[0.333333, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":306}]]}]}, {"name":"Cluster logic", "type":"resource", "data":[18, 14, 9, 0, 0], "details":[{"type":"brief", "text":"Logic required to efficiently support sets of operations that do not stall"}, {"type":"text", "text":"Logic required to efficiently support sets of operations that do not stall. This area cannot be affected directly."}]}, {"name":"Computation", "type":"resource", "children":[{"name":"No Source Line", "type":"resource", "data":[2, 0, 0, 0, 0], "debug":[[{"filename":"", "line":0}]], "children":[{"name":"1-bit And", "type":"resource", "count":1, "data":[1, 0, 0, 0, 0]}, {"name":"1-bit Or", "type":"resource", "count":1, "data":[1, 0, 0, 0, 0]}]}, {"name":"No Source Line", "type":"resource", "data":[1111.53, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":0}]], "children":[{"name":"11-bit Integer Subtract", "type":"resource", "count":1, "data":[2.2, 0, 0, 0, 0]}, {"name":"32-bit Select", "type":"resource", "count":112, "data":[1109.33, 0, 0, 0, 0]}]}, {"name":"hemm.cl:225", "type":"resource", "data":[2.2, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":225}]], "children":[{"name":"11-bit Integer Subtract", "type":"resource", "count":1, "data":[2.2, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"hemm.cl:226", "type":"resource", "data":[2.2, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":226}]], "children":[{"name":"11-bit Integer Subtract", "type":"resource", "count":1, "data":[2.2, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"hemm.cl:230", "type":"resource", "data":[693.333, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":230}]], "children":[{"name":"32-bit Select", "type":"resource", "count":64, "data":[693.333, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"hemm.cl:231", "type":"resource", "data":[1881, 48, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":231}]], "children":[{"name":"32-bit Select", "type":"resource", "count":160, "data":[1881, 48, 0, 0, 0]}], "replace_name":"true"}, {"name":"hemm.cl:237", "type":"resource", "data":[1.66667, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":237}]], "children":[{"name":"1-bit Or", "type":"resource", "count":4, "data":[1.66667, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"hemm.cl:238", "type":"resource", "data":[58.6667, 1, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":238}]], "children":[{"name":"1-bit And", "type":"resource", "count":3, "data":[2, 1, 0, 0, 0]}, {"name":"1-bit Or", "type":"resource", "count":4, "data":[1.66667, 0, 0, 0, 0]}, {"name":"16-bit Integer Add", "type":"resource", "count":1, "data":[16, 0, 0, 0, 0]}, {"name":"16-bit Integer Compare", "type":"resource", "count":1, "data":[5, 0, 0, 0, 0]}, {"name":"2-bit Select", "type":"resource", "count":1, "data":[2, 0, 0, 0, 0]}, {"name":"32-bit Integer Add", "type":"resource", "count":1, "data":[32, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"hemm.cl:251", "type":"resource", "data":[35.8333, 1, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":251}]], "children":[{"name":"1-bit Or", "type":"resource", "count":2, "data":[0.833333, 0, 0, 0, 0]}, {"name":"32-bit Integer Compare", "type":"resource", "count":1, "data":[35, 1, 0, 0, 0]}], "replace_name":"true"}, {"name":"hemm.cl:252", "type":"resource", "data":[486.333, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":252}]], "children":[{"name":"32-bit Select", "type":"resource", "count":48, "data":[485.333, 0, 0, 0, 0]}, {"name":"Channel Read", "type":"resource", "count":1, "data":[1, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"hemm.cl:253", "type":"resource", "data":[1674, 48, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":253}]], "children":[{"name":"32-bit Select", "type":"resource", "count":144, "data":[1673, 48, 0, 0, 0]}, {"name":"Channel Read", "type":"resource", "count":1, "data":[1, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"hemm.cl:263", "type":"resource", "data":[7430, 2657, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":263}]], "children":[{"name":"32-bit Integer Compare", "type":"resource", "count":1, "data":[11, 1, 0, 0, 0]}, {"name":"32-bit Integer Remainder", "type":"resource", "count":1, "data":[4827, 96, 0, 0, 0], "details":[{"type":"text", "text":"Implemented using inlined soft-IP."}]}, {"name":"32-bit Or", "type":"resource", "count":1, "data":[32, 0, 0, 0, 0]}, {"name":"32-bit Select", "type":"resource", "count":80, "data":[2560, 2560, 0, 0, 0]}], "replace_name":"true"}, {"name":"hemm.cl:266", "type":"resource", "data":[0, 0, 0, 1280, 0], "debug":[[{"filename":"hemm.cl", "line":266}]], "children":[{"name":"Hardened Dot Product of Size 8", "type":"resource", "count":480, "data":[0, 0, 0, 1280, 0]}], "replace_name":"true"}, {"name":"hemm.cl:268", "type":"resource", "data":[2.2, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":268}]], "children":[{"name":"11-bit Integer Subtract", "type":"resource", "count":1, "data":[2.2, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"hemm.cl:274", "type":"resource", "data":[2131, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":274}]], "children":[{"name":"1-bit And", "type":"resource", "count":1, "data":[1, 0, 0, 0, 0]}, {"name":"32-bit Integer Add", "type":"resource", "count":1, "data":[32, 0, 0, 0, 0]}, {"name":"32-bit Integer Compare", "type":"resource", "count":2, "data":[18, 0, 0, 0, 0]}, {"name":"32-bit Select", "type":"resource", "count":80, "data":[2080, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"hemm.cl:280", "type":"resource", "data":[30, 1, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":280}]], "children":[{"name":"1-bit And", "type":"resource", "count":1, "data":[1, 0, 0, 0, 0]}, {"name":"32-bit Integer Compare", "type":"resource", "count":1, "data":[3, 1, 0, 0, 0]}, {"name":"32-bit Select", "type":"resource", "count":1, "data":[26, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"hemm.cl:292", "type":"resource", "data":[67.8333, 1, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":292}]], "children":[{"name":"1-bit Or", "type":"resource", "count":2, "data":[0.833333, 0, 0, 0, 0]}, {"name":"32-bit Integer Add", "type":"resource", "count":1, "data":[32, 0, 0, 0, 0]}, {"name":"32-bit Integer Compare", "type":"resource", "count":1, "data":[35, 1, 0, 0, 0]}], "replace_name":"true"}, {"name":"hemm.cl:293", "type":"resource", "data":[3, 2, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":293}]], "children":[{"name":"Channel Write", "type":"resource", "count":1, "data":[3, 2, 0, 0, 0]}], "replace_name":"true"}, {"name":"hemm.cl:303", "type":"resource", "data":[2.2, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":303}]], "children":[{"name":"11-bit Integer Subtract", "type":"resource", "count":1, "data":[2.2, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"hemm.cl:306", "type":"resource", "data":[32, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":306}]], "children":[{"name":"32-bit Integer Add", "type":"resource", "count":1, "data":[32, 0, 0, 0, 0]}], "replace_name":"true"}]}]}]}, {"name":"kernel_aFeeder", "compute_units":1, "type":"function", "total_percent":[4.6358, 2.53324, 2.27528, 23.9219, 0.329381], "total_kernel_resources":[16884, 38880, 649, 4.5, 238], "details":[{"type":"text", "text":"Number of compute units: 1"}, {"type":"text", "text":"Max global work dimension: 0"}, {"type":"brief", "text":"1 compute unit.\\nMax global work dimension: 0"}], "children":[{"name":"Coalesced Private Variables: \\n - \'aFeeder_value_shreg\' (hemm.cl:107)\\n - \'aFeeder_in_v\' (hemm.cl:109)", "type":"resource", "data":[180, 836, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":107}], [{"filename":"hemm.cl", "line":109}]], "details":[{"type":"text", "text":"Type: Register"}, {"type":"text", "text":"16 registers of width 32 and depth 1"}, {"type":"brief", "text":"Register,\\n16 regs, 32 width by 1 depth"}]}, {"name":"Private Variable: \\n - \'aFeeder_X_channel_array\' (hemm.cl:106)", "type":"resource", "data":[3466, 14730, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":106}]], "details":[{"type":"text", "text":"Type: Register"}, {"type":"text", "text":"160 registers of width 32 and depth 1"}, {"type":"brief", "text":"Register,\\n160 regs, 32 width by 1 depth"}]}, {"name":"Private Variable: \\n - \'aFeeder_cycle\' (hemm.cl:110)", "type":"resource", "data":[7, 36, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":110}]], "details":[{"type":"text", "text":"Type: Register"}, {"type":"text", "text":"1 register of width 32 and depth 1"}, {"type":"brief", "text":"Register,\\n1 reg, 32 width by 1 depth"}]}, {"name":"hemm.cl:111 (DB)", "type":"resource", "data":[0, 0, 520, 0, 0], "debug":[[{"filename":"hemm.cl", "line":111}]], "details":[{"type":"table", "Private memory":"Stall-Free", "Requested size":"2097152 bytes", "Implemented size":"2097152 bytes", "Number of banks":"16 (banked on bits 6, 7, 8, 9)", "Bank width":"512 bits", "Bank depth":"2048 words", "Total replication":"1", "Additional information":[{"type":"text", "text":"Requested size 2097152 bytes, implemented size 2097152 bytes, stall-free, 10 reads and 10 writes. "}, {"type":"text", "text":"Banked on bits 6, 7, 8, 9 into 16 separate banks."}, {"type":"text", "text":"Reducing accesses to exactly one read and one write for all on-chip memory systems may increase overall system performance."}, {"type":"text", "text":"Private memory implemented in on-chip block RAM."}], "Reference":[{"type":"text", "text":"See %L for more information.", "links":[{"guide":"Best Practices Guide : Local Memory", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#chn1469549457114"}]}]}, {"type":"brief", "text":"Stall-Free,\\n2097152B requested,\\n2097152B implemented."}]}, {"name":"kernel_aFeeder.B0", "type":"basicblock", "children":[{"name":"Feedback", "type":"resource", "data":[13, 7, 0, 0, 0], "details":[{"type":"brief", "text":"Loop-carried dependencies"}, {"type":"text", "text":"Resources for loop-carried dependencies. To reduce this area:", "details":[{"type":"text", "text":"reduce number and size of loop-carried variables"}]}], "children":[{"name":"hemm.cl:111", "type":"resource", "data":[8, 2, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":111}]]}, {"name":"hemm.cl:118", "type":"resource", "data":[5, 5, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":118}]]}]}]}, {"name":"kernel_aFeeder.B1", "type":"basicblock", "children":[{"name":"State", "type":"resource", "data":[2501, 12934, 0, 0, 236], "details":[{"type":"brief", "text":"Live values and control logic"}, {"type":"text", "text":"Resources for live values and control logic. To reduce this area:", "details":[{"type":"text", "text":"reduce size of local variables"}, {"type":"text", "text":"reduce scope of local variables, localizing them as much as possible"}, {"type":"text", "text":"reduce number of nested loops"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[2501, 12934, 0, 0, 236]}]}, {"name":"Feedback", "type":"resource", "data":[184, 7, 0, 0, 0], "details":[{"type":"brief", "text":"Loop-carried dependencies"}, {"type":"text", "text":"Resources for loop-carried dependencies. To reduce this area:", "details":[{"type":"text", "text":"reduce number and size of loop-carried variables"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[1, 0, 0, 0, 0]}, {"name":"hemm.cl:106", "type":"resource", "data":[160, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":106}]]}, {"name":"hemm.cl:109", "type":"resource", "data":[23, 7, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":109}]]}]}, {"name":"Cluster logic", "type":"resource", "data":[15, 11, 129, 0, 2], "details":[{"type":"brief", "text":"Logic required to efficiently support sets of operations that do not stall"}, {"type":"text", "text":"Logic required to efficiently support sets of operations that do not stall. This area cannot be affected directly."}]}, {"name":"Computation", "type":"resource", "children":[{"name":"No Source Line", "type":"resource", "data":[144, 0, 0, 4.5, 0], "debug":[[{"filename":"", "line":0}]], "children":[{"name":"16-bit Integer Add", "type":"resource", "count":9, "data":[144, 0, 0, 0, 0]}, {"name":"llvm.fpga.dot.product", "type":"resource", "count":9, "data":[0, 0, 0, 4.5, 0]}]}, {"name":"No Source Line", "type":"resource", "data":[4988, 4416, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":0}]], "children":[{"name":"32-bit Select", "type":"resource", "count":160, "data":[4988, 4416, 0, 0, 0]}]}, {"name":"hemm.cl:109", "type":"resource", "data":[440, 128, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":109}]], "children":[{"name":"32-bit Select", "type":"resource", "count":16, "data":[440, 128, 0, 0, 0]}], "replace_name":"true"}, {"name":"hemm.cl:119", "type":"resource", "data":[35, 1, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":119}]], "children":[{"name":"32-bit Integer Compare", "type":"resource", "count":1, "data":[35, 1, 0, 0, 0]}], "replace_name":"true"}, {"name":"hemm.cl:120", "type":"resource", "data":[1, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":120}]], "children":[{"name":"Channel Read", "type":"resource", "count":1, "data":[1, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"hemm.cl:134", "type":"resource", "data":[350, 10, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":134}]], "children":[{"name":"32-bit Integer Compare", "type":"resource", "count":10, "data":[350, 10, 0, 0, 0]}], "replace_name":"true"}, {"name":"hemm.cl:135", "type":"resource", "data":[227.5, 2, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":135}]], "children":[{"name":"1-bit Or", "type":"resource", "count":10, "data":[10, 1, 0, 0, 0]}, {"name":"16-bit Integer Add", "type":"resource", "count":11, "data":[167.5, 0, 0, 0, 0]}, {"name":"16-bit Integer Compare", "type":"resource", "count":10, "data":[50, 1, 0, 0, 0]}], "replace_name":"true"}, {"name":"hemm.cl:136", "type":"resource", "data":[1287.5, 540, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":136}]], "children":[{"name":"16-bit Integer Add", "type":"resource", "count":1, "data":[7.5, 0, 0, 0, 0]}, {"name":"16-bit Integer Divide", "type":"resource", "count":20, "data":[940, 300, 0, 0, 0]}, {"name":"Store", "type":"resource", "count":10, "data":[340, 240, 0, 0, 0], "details":[{"type":"text", "text":"Store uses a Pipelined never-stall LSU"}, {"type":"brief", "text":"Pipelined never-stall LSU"}, {"type":"text", "text":"Stall-free write to memory declared on %L.", "links":[{"filename":"hemm.cl", "line":"111"}]}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}], "replace_name":"true"}, {"name":"hemm.cl:139", "type":"resource", "data":[350, 10, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":139}]], "children":[{"name":"32-bit Integer Compare", "type":"resource", "count":10, "data":[350, 10, 0, 0, 0]}], "replace_name":"true"}, {"name":"hemm.cl:140", "type":"resource", "data":[2660, 5210, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":140}]], "children":[{"name":"Load", "type":"resource", "count":10, "data":[2660, 5210, 0, 0, 0], "details":[{"type":"text", "text":"Load uses a Pipelined never-stall LSU"}, {"type":"brief", "text":"Pipelined never-stall LSU"}, {"type":"text", "text":"Stall-free read from memory declared on %L.", "links":[{"filename":"hemm.cl", "line":"111"}]}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}], "replace_name":"true"}, {"name":"hemm.cl:144", "type":"resource", "data":[3, 2, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":144}]], "children":[{"name":"Channel Write", "type":"resource", "count":1, "data":[3, 2, 0, 0, 0]}], "replace_name":"true"}, {"name":"hemm.cl:146", "type":"resource", "data":[32, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":146}]], "children":[{"name":"32-bit Integer Add", "type":"resource", "count":1, "data":[32, 0, 0, 0, 0]}], "replace_name":"true"}]}]}]}, {"name":"kernel_aLoader", "compute_units":1, "type":"function", "total_percent":[2.02941, 1.3386, 0.820283, 0.921489, 0.658762], "total_kernel_resources":[10757, 14017, 25, 10, 34], "details":[{"type":"text", "text":"Number of compute units: 1"}, {"type":"text", "text":"Kernel attribute \'uses_global_work_offset\' not specified. Add \'__attribute__((uses_global_work_offset(0)))\' to reduce area utilization if the kernel will always be enqueued with a 0 or NULL global_work_offset argument in clEnqueueNDRangeKernel. Add \'__attribute__((uses_global_work_offset(1)))\' to hide this suggestion without affecting kernel functionality."}, {"type":"text", "text":"The following loop is nested at depth greater than 3. Reducing the depth of this nested loop will save area:", "details":[{"type":"text", "text":"%L with depth 4", "links":[{"filename":"hemm.cl", "line":"90"}]}]}, {"type":"brief", "text":"1 compute unit.\\nKernel attribute \'uses_global_work_offset\' not specified. Add \'__attribute__((uses_global_work_offset(0)))\' to reduce area utilization if the kernel will always be enqueued with a 0 or NULL global_work_offset argument in clEnqueueNDRangeKernel. Add \'__attribute__((uses_global_work_offset(1)))\' to hide this suggestion without affecting kernel functionality.\\n1 loop nested 3 levels deep or more."}], "children":[{"name":"Function overhead", "type":"resource", "data":[1338, 2411, 0, 0, 10], "details":[{"type":"text", "text":"Kernel dispatch logic."}, {"type":"brief", "text":"Kernel dispatch logic."}]}, {"name":"Private Variable: \\n - \'addr\' (hemm.cl:85)", "type":"resource", "data":[14, 72, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":85}]], "details":[{"type":"text", "text":"Type: Register"}, {"type":"text", "text":"2 registers of width 32 and depth 1"}, {"type":"brief", "text":"Register,\\n2 regs, 32 width by 1 depth"}]}, {"name":"Private Variable: \\n - \'i\' (hemm.cl:87)", "type":"resource", "data":[14, 73, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":87}]], "details":[{"type":"text", "text":"Type: Register"}, {"type":"text", "text":"1 register of width 32 and depth 1"}, {"type":"text", "text":"1 register of width 33 and depth 1"}, {"type":"brief", "text":"Register,\\n1 reg, 32 width by 1 depth,\\n1 reg, 33 width by 1 depth"}]}, {"name":"Private Variable: \\n - \'j\' (hemm.cl:88)", "type":"resource", "data":[14, 73, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":88}]], "details":[{"type":"text", "text":"Type: Register"}, {"type":"text", "text":"1 register of width 32 and depth 1"}, {"type":"text", "text":"1 register of width 33 and depth 1"}, {"type":"brief", "text":"Register,\\n1 reg, 32 width by 1 depth,\\n1 reg, 33 width by 1 depth"}]}, {"name":"Private Variable: \\n - \'k\' (hemm.cl:89)", "type":"resource", "data":[14, 73, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":89}]], "details":[{"type":"text", "text":"Type: Register"}, {"type":"text", "text":"1 register of width 32 and depth 1"}, {"type":"text", "text":"1 register of width 33 and depth 1"}, {"type":"brief", "text":"Register,\\n1 reg, 32 width by 1 depth,\\n1 reg, 33 width by 1 depth"}]}, {"name":"Private Variable: \\n - \'kk_ii_iii\' (hemm.cl:90)", "type":"resource", "data":[7, 19, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":90}]], "details":[{"type":"text", "text":"Type: Register"}, {"type":"text", "text":"1 register of width 15 and depth 1"}, {"type":"brief", "text":"Register,\\n1 reg, 15 width by 1 depth"}]}, {"name":"kernel_aLoader.B0", "type":"basicblock", "children":[{"name":"State", "type":"resource", "data":[2, 323, 0, 0, 0], "details":[{"type":"brief", "text":"Live values and control logic"}, {"type":"text", "text":"Resources for live values and control logic. To reduce this area:", "details":[{"type":"text", "text":"reduce size of local variables"}, {"type":"text", "text":"reduce scope of local variables, localizing them as much as possible"}, {"type":"text", "text":"reduce number of nested loops"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[2, 147, 0, 0, 0]}, {"name":"hemm.cl:87", "type":"resource", "data":[0, 132, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":87}]]}, {"name":"hemm.cl:88", "type":"resource", "data":[0, 1, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":88}]]}, {"name":"hemm.cl:89", "type":"resource", "data":[0, 11.5, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":89}]]}, {"name":"hemm.cl:92", "type":"resource", "data":[0, 31.5, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":92}]]}]}, {"name":"Feedback", "type":"resource", "data":[7, 2, 0, 0, 0], "details":[{"type":"brief", "text":"Loop-carried dependencies"}, {"type":"text", "text":"Resources for loop-carried dependencies. To reduce this area:", "details":[{"type":"text", "text":"reduce number and size of loop-carried variables"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[7, 2, 0, 0, 0]}]}, {"name":"Cluster logic", "type":"resource", "data":[7, 5, 0, 0, 1], "details":[{"type":"brief", "text":"Logic required to efficiently support sets of operations that do not stall"}, {"type":"text", "text":"Logic required to efficiently support sets of operations that do not stall. This area cannot be affected directly."}]}, {"name":"Computation", "type":"resource", "children":[{"name":"hemm.cl:87", "type":"resource", "data":[659, 85, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":87}]], "children":[{"name":"32-bit Integer Add", "type":"resource", "count":2, "data":[64, 0, 0, 0, 0]}, {"name":"32-bit Integer Compare", "type":"resource", "count":4, "data":[140, 4, 0, 0, 0]}, {"name":"32-bit Integer Divide", "type":"resource", "count":1, "data":[308, 81, 0, 0, 0]}, {"name":"32-bit Select", "type":"resource", "count":3, "data":[48, 0, 0, 0, 0]}, {"name":"33-bit Integer Add", "type":"resource", "count":3, "data":[99, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"hemm.cl:88", "type":"resource", "data":[35, 1, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":88}]], "children":[{"name":"32-bit Integer Compare", "type":"resource", "count":1, "data":[35, 1, 0, 0, 0]}], "replace_name":"true"}, {"name":"hemm.cl:89", "type":"resource", "data":[45.5, 1, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":89}]], "children":[{"name":"32-bit Integer Add", "type":"resource", "count":1, "data":[10.5, 0, 0, 0, 0]}, {"name":"32-bit Integer Compare", "type":"resource", "count":1, "data":[35, 1, 0, 0, 0]}], "replace_name":"true"}, {"name":"hemm.cl:92", "type":"resource", "data":[31.5, 0, 0, 1.5, 0], "debug":[[{"filename":"hemm.cl", "line":92}]], "children":[{"name":"32-bit Integer Add", "type":"resource", "count":1, "data":[10.5, 0, 0, 0, 0]}, {"name":"32-bit Integer Multiply", "type":"resource", "count":1, "data":[21, 0, 0, 1.5, 0]}], "replace_name":"true"}]}]}, {"name":"kernel_aLoader.B1", "type":"basicblock", "children":[{"name":"State", "type":"resource", "data":[0, 2, 0, 0, 0], "details":[{"type":"brief", "text":"Live values and control logic"}, {"type":"text", "text":"Resources for live values and control logic. To reduce this area:", "details":[{"type":"text", "text":"reduce size of local variables"}, {"type":"text", "text":"reduce scope of local variables, localizing them as much as possible"}, {"type":"text", "text":"reduce number of nested loops"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[0, 2, 0, 0, 0]}]}, {"name":"Feedback", "type":"resource", "data":[9, 7, 0, 0, 0], "details":[{"type":"brief", "text":"Loop-carried dependencies"}, {"type":"text", "text":"Resources for loop-carried dependencies. To reduce this area:", "details":[{"type":"text", "text":"reduce number and size of loop-carried variables"}]}], "children":[{"name":"hemm.cl:85", "type":"resource", "data":[1, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":85}]]}, {"name":"hemm.cl:87", "type":"resource", "data":[8, 7, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":87}]]}]}, {"name":"Cluster logic", "type":"resource", "data":[6, 4, 0, 0, 1], "details":[{"type":"brief", "text":"Logic required to efficiently support sets of operations that do not stall"}, {"type":"text", "text":"Logic required to efficiently support sets of operations that do not stall. This area cannot be affected directly."}]}, {"name":"Computation", "type":"resource", "children":[{"name":"hemm.cl:85", "type":"resource", "data":[27, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":85}]], "children":[{"name":"33-bit Select", "type":"resource", "count":1, "data":[27, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"hemm.cl:87", "type":"resource", "data":[77, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":87}]], "children":[{"name":"1-bit And", "type":"resource", "count":1, "data":[1, 0, 0, 0, 0]}, {"name":"32-bit Integer Add", "type":"resource", "count":1, "data":[32, 0, 0, 0, 0]}, {"name":"33-bit Integer Add", "type":"resource", "count":1, "data":[33, 0, 0, 0, 0]}, {"name":"33-bit Integer Compare", "type":"resource", "count":1, "data":[11, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"hemm.cl:88", "type":"resource", "data":[1, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":88}]], "children":[{"name":"1-bit And", "type":"resource", "count":1, "data":[1, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"hemm.cl:89", "type":"resource", "data":[1, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":89}]], "children":[{"name":"1-bit And", "type":"resource", "count":1, "data":[1, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"hemm.cl:91", "type":"resource", "data":[35, 1, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":91}]], "children":[{"name":"32-bit Integer Compare", "type":"resource", "count":1, "data":[35, 1, 0, 0, 0]}], "replace_name":"true"}]}]}, {"name":"kernel_aLoader.B2", "type":"basicblock", "children":[{"name":"Feedback", "type":"resource", "data":[5, 8, 0, 0, 0], "details":[{"type":"brief", "text":"Loop-carried dependencies"}, {"type":"text", "text":"Resources for loop-carried dependencies. To reduce this area:", "details":[{"type":"text", "text":"reduce number and size of loop-carried variables"}]}], "children":[{"name":"hemm.cl:99", "type":"resource", "data":[5, 8, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":99}]]}]}]}, {"name":"kernel_aLoader.B3", "type":"basicblock", "children":[{"name":"State", "type":"resource", "data":[0, 9, 0, 0, 0], "details":[{"type":"brief", "text":"Live values and control logic"}, {"type":"text", "text":"Resources for live values and control logic. To reduce this area:", "details":[{"type":"text", "text":"reduce size of local variables"}, {"type":"text", "text":"reduce scope of local variables, localizing them as much as possible"}, {"type":"text", "text":"reduce number of nested loops"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[0, 9, 0, 0, 0]}]}, {"name":"Feedback", "type":"resource", "data":[57, 37, 0, 0, 0], "details":[{"type":"brief", "text":"Loop-carried dependencies"}, {"type":"text", "text":"Resources for loop-carried dependencies. To reduce this area:", "details":[{"type":"text", "text":"reduce number and size of loop-carried variables"}]}], "children":[{"name":"hemm.cl:85", "type":"resource", "data":[1, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":85}]]}, {"name":"hemm.cl:87", "type":"resource", "data":[24, 15, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":87}]]}, {"name":"hemm.cl:88", "type":"resource", "data":[16, 12, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":88}]]}, {"name":"hemm.cl:89", "type":"resource", "data":[8, 5, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":89}]]}, {"name":"hemm.cl:91", "type":"resource", "data":[8, 5, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":91}]]}]}, {"name":"Cluster logic", "type":"resource", "data":[6, 4, 0, 0, 3], "details":[{"type":"brief", "text":"Logic required to efficiently support sets of operations that do not stall"}, {"type":"text", "text":"Logic required to efficiently support sets of operations that do not stall. This area cannot be affected directly."}]}, {"name":"Computation", "type":"resource", "children":[{"name":"hemm.cl:85", "type":"resource", "data":[27, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":85}]], "children":[{"name":"33-bit Select", "type":"resource", "count":1, "data":[27, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"hemm.cl:88", "type":"resource", "data":[77, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":88}]], "children":[{"name":"1-bit And", "type":"resource", "count":1, "data":[1, 0, 0, 0, 0]}, {"name":"32-bit Integer Add", "type":"resource", "count":1, "data":[32, 0, 0, 0, 0]}, {"name":"33-bit Integer Add", "type":"resource", "count":1, "data":[33, 0, 0, 0, 0]}, {"name":"33-bit Integer Compare", "type":"resource", "count":1, "data":[11, 0, 0, 0, 0]}], "replace_name":"true"}]}]}, {"name":"kernel_aLoader.B5", "type":"basicblock", "children":[{"name":"State", "type":"resource", "data":[31, 102, 0, 0, 0], "details":[{"type":"brief", "text":"Live values and control logic"}, {"type":"text", "text":"Resources for live values and control logic. To reduce this area:", "details":[{"type":"text", "text":"reduce size of local variables"}, {"type":"text", "text":"reduce scope of local variables, localizing them as much as possible"}, {"type":"text", "text":"reduce number of nested loops"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[31, 102, 0, 0, 0]}]}, {"name":"Feedback", "type":"resource", "data":[90, 88, 0, 0, 0], "details":[{"type":"brief", "text":"Loop-carried dependencies"}, {"type":"text", "text":"Resources for loop-carried dependencies. To reduce this area:", "details":[{"type":"text", "text":"reduce number and size of loop-carried variables"}]}], "children":[{"name":"hemm.cl:85", "type":"resource", "data":[1, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":85}]]}, {"name":"hemm.cl:87", "type":"resource", "data":[24, 15, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":87}]]}, {"name":"hemm.cl:88", "type":"resource", "data":[40, 56, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":88}]]}, {"name":"hemm.cl:89", "type":"resource", "data":[16, 12, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":89}]]}, {"name":"hemm.cl:91", "type":"resource", "data":[8, 5, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":91}]]}, {"name":"hemm.cl:94", "type":"resource", "data":[1, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":94}]]}]}, {"name":"Cluster logic", "type":"resource", "data":[6, 4, 0, 0, 8], "details":[{"type":"brief", "text":"Logic required to efficiently support sets of operations that do not stall"}, {"type":"text", "text":"Logic required to efficiently support sets of operations that do not stall. This area cannot be affected directly."}]}, {"name":"Computation", "type":"resource", "children":[{"name":"No Source Line", "type":"resource", "data":[4, 0, 0, 0, 0], "debug":[[{"filename":"", "line":0}]], "children":[{"name":"1-bit And", "type":"resource", "count":2, "data":[2, 0, 0, 0, 0]}, {"name":"1-bit Or", "type":"resource", "count":2, "data":[2, 0, 0, 0, 0]}]}, {"name":"hemm.cl:85", "type":"resource", "data":[13.5, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":85}]], "children":[{"name":"33-bit Select", "type":"resource", "count":1, "data":[13.5, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"hemm.cl:89", "type":"resource", "data":[77.5, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":89}]], "children":[{"name":"1-bit And", "type":"resource", "count":2, "data":[1.5, 0, 0, 0, 0]}, {"name":"32-bit Integer Add", "type":"resource", "count":1, "data":[32, 0, 0, 0, 0]}, {"name":"33-bit Integer Add", "type":"resource", "count":1, "data":[33, 0, 0, 0, 0]}, {"name":"33-bit Integer Compare", "type":"resource", "count":1, "data":[11, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"hemm.cl:90", "type":"resource", "data":[32, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":90}]], "children":[{"name":"32-bit Integer Add", "type":"resource", "count":1, "data":[32, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"hemm.cl:91", "type":"resource", "data":[44.5, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":91}]], "children":[{"name":"1-bit And", "type":"resource", "count":1, "data":[0.5, 0, 0, 0, 0]}, {"name":"1-bit Or", "type":"resource", "count":1, "data":[1, 0, 0, 0, 0]}, {"name":"32-bit Integer Compare", "type":"resource", "count":1, "data":[11, 0, 0, 0, 0]}, {"name":"32-bit Or", "type":"resource", "count":1, "data":[32, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"hemm.cl:94", "type":"resource", "data":[13.5, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":94}]], "children":[{"name":"33-bit Select", "type":"resource", "count":1, "data":[13.5, 0, 0, 0, 0]}], "replace_name":"true"}]}]}, {"name":"kernel_aLoader.B8", "type":"basicblock", "children":[{"name":"State", "type":"resource", "data":[990, 7717, 3, 0, 11], "details":[{"type":"brief", "text":"Live values and control logic"}, {"type":"text", "text":"Resources for live values and control logic. To reduce this area:", "details":[{"type":"text", "text":"reduce size of local variables"}, {"type":"text", "text":"reduce scope of local variables, localizing them as much as possible"}, {"type":"text", "text":"reduce number of nested loops"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[990, 7717, 3, 0, 11]}]}, {"name":"Feedback", "type":"resource", "data":[133, 158, 0, 0, 0], "details":[{"type":"brief", "text":"Loop-carried dependencies"}, {"type":"text", "text":"Resources for loop-carried dependencies. To reduce this area:", "details":[{"type":"text", "text":"reduce number and size of loop-carried variables"}]}], "children":[{"name":"hemm.cl:85", "type":"resource", "data":[1, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":85}]]}, {"name":"hemm.cl:87", "type":"resource", "data":[25, 18, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":87}]]}, {"name":"hemm.cl:88", "type":"resource", "data":[41, 59, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":88}]]}, {"name":"hemm.cl:89", "type":"resource", "data":[21, 15.5, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":89}]]}, {"name":"hemm.cl:90", "type":"resource", "data":[32, 58, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":90}]]}, {"name":"hemm.cl:91", "type":"resource", "data":[12, 7.5, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":91}]]}, {"name":"hemm.cl:94", "type":"resource", "data":[1, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":94}]]}]}, {"name":"Cluster logic", "type":"resource", "data":[9, 7, 3, 0, 0], "details":[{"type":"brief", "text":"Logic required to efficiently support sets of operations that do not stall"}, {"type":"text", "text":"Logic required to efficiently support sets of operations that do not stall. This area cannot be affected directly."}]}, {"name":"Computation", "type":"resource", "children":[{"name":"hemm.cl:89", "type":"resource", "data":[0.333333, 0.333333, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":89}]], "children":[{"name":"1-bit Or", "type":"resource", "count":1, "data":[0.333333, 0.333333, 0, 0, 0]}], "replace_name":"true"}, {"name":"hemm.cl:90", "type":"resource", "data":[25.8333, 1.83333, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":90}]], "children":[{"name":"1-bit And", "type":"resource", "count":3, "data":[2, 1, 0, 0, 0]}, {"name":"1-bit Or", "type":"resource", "count":4, "data":[1.83333, 0.833333, 0, 0, 0]}, {"name":"15-bit Integer Add", "type":"resource", "count":1, "data":[15, 0, 0, 0, 0]}, {"name":"15-bit Integer Compare", "type":"resource", "count":1, "data":[5, 0, 0, 0, 0]}, {"name":"2-bit Select", "type":"resource", "count":1, "data":[2, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"hemm.cl:91", "type":"resource", "data":[0.333333, 0.333333, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":91}]], "children":[{"name":"1-bit Or", "type":"resource", "count":1, "data":[0.333333, 0.333333, 0, 0, 0]}], "replace_name":"true"}, {"name":"hemm.cl:92", "type":"resource", "data":[6738.5, 2728.5, 19, 8.5, 0], "debug":[[{"filename":"hemm.cl", "line":92}]], "children":[{"name":"1-bit And", "type":"resource", "count":1, "data":[1, 0, 0, 0, 0]}, {"name":"1-bit Or", "type":"resource", "count":1, "data":[0.5, 0.5, 0, 0, 0]}, {"name":"32-bit Integer Add", "type":"resource", "count":1, "data":[32, 0, 0, 0, 0]}, {"name":"32-bit Integer Divide", "type":"resource", "count":1, "data":[742, 160, 4, 7, 0]}, {"name":"32-bit Integer Multiply", "type":"resource", "count":1, "data":[32, 0, 0, 1.5, 0]}, {"name":"32-bit Integer Remainder", "type":"resource", "count":1, "data":[4827, 96, 0, 0, 0], "details":[{"type":"text", "text":"Implemented using inlined soft-IP."}]}, {"name":"32-bit Select", "type":"resource", "count":16, "data":[416, 0, 0, 0, 0]}, {"name":"Channel Write", "type":"resource", "count":1, "data":[4, 2, 0, 0, 0]}, {"name":"Load", "type":"resource", "count":1, "data":[684, 2470, 15, 0, 0], "details":[{"type":"text", "text":"Load uses a Burst-coalesced LSU"}, {"type":"brief", "text":"Burst-coalesced LSU"}]}], "replace_name":"true"}, {"name":"hemm.cl:94", "type":"resource", "data":[32, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":94}]], "children":[{"name":"32-bit Integer Add", "type":"resource", "count":1, "data":[32, 0, 0, 0, 0]}], "replace_name":"true"}]}]}]}, {"name":"kernel_bFeeder", "compute_units":1, "type":"function", "total_percent":[1.89116, 1.12371, 0.859082, 7.66679, 0], "total_kernel_resources":[6201, 14680, 208, 0, 170], "details":[{"type":"text", "text":"Number of compute units: 1"}, {"type":"text", "text":"Max global work dimension: 0"}, {"type":"brief", "text":"1 compute unit.\\nMax global work dimension: 0"}], "children":[{"name":"Coalesced Private Variables: \\n - \'bFeeder_value_shreg\' (hemm.cl:178)\\n - \'bFeeder_in_v\' (hemm.cl:180)", "type":"resource", "data":[180, 836, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":178}], [{"filename":"hemm.cl", "line":180}]], "details":[{"type":"text", "text":"Type: Register"}, {"type":"text", "text":"16 registers of width 32 and depth 1"}, {"type":"brief", "text":"Register,\\n16 regs, 32 width by 1 depth"}]}, {"name":"Private Variable: \\n - \'bFeeder_Y_channel_array\' (hemm.cl:177)", "type":"resource", "data":[1264, 5424, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":177}]], "details":[{"type":"text", "text":"Type: Register"}, {"type":"text", "text":"64 registers of width 32 and depth 1"}, {"type":"brief", "text":"Register,\\n64 regs, 32 width by 1 depth"}]}, {"name":"Private Variable: \\n - \'bFeeder_cycle\' (hemm.cl:181)", "type":"resource", "data":[7, 36, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":181}]], "details":[{"type":"text", "text":"Type: Register"}, {"type":"text", "text":"1 register of width 32 and depth 1"}, {"type":"brief", "text":"Register,\\n1 reg, 32 width by 1 depth"}]}, {"name":"hemm.cl:182 (DB)", "type":"resource", "data":[0, 0, 208, 0, 0], "debug":[[{"filename":"hemm.cl", "line":182}]], "details":[{"type":"table", "Private memory":"Stall-Free", "Requested size":"524288 bytes", "Implemented size":"524288 bytes", "Number of banks":"4 (banked on bits 6, 7)", "Bank width":"512 bits", "Bank depth":"2048 words", "Total replication":"1", "Additional information":[{"type":"text", "text":"Requested size 524288 bytes, implemented size 524288 bytes, stall-free, 4 reads and 4 writes. "}, {"type":"text", "text":"Banked on bits 6, 7 into 4 separate banks."}, {"type":"text", "text":"Reducing accesses to exactly one read and one write for all on-chip memory systems may increase overall system performance."}, {"type":"text", "text":"Private memory implemented in on-chip block RAM."}], "Reference":[{"type":"text", "text":"See %L for more information.", "links":[{"guide":"Best Practices Guide : Local Memory", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#chn1469549457114"}]}]}, {"type":"brief", "text":"Stall-Free,\\n524288B requested,\\n524288B implemented."}]}, {"name":"kernel_bFeeder.B0", "type":"basicblock", "children":[{"name":"Feedback", "type":"resource", "data":[13, 7, 0, 0, 0], "details":[{"type":"brief", "text":"Loop-carried dependencies"}, {"type":"text", "text":"Resources for loop-carried dependencies. To reduce this area:", "details":[{"type":"text", "text":"reduce number and size of loop-carried variables"}]}], "children":[{"name":"hemm.cl:182", "type":"resource", "data":[8, 2, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":182}]]}, {"name":"hemm.cl:189", "type":"resource", "data":[5, 5, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":189}]]}]}]}, {"name":"kernel_bFeeder.B1", "type":"basicblock", "children":[{"name":"State", "type":"resource", "data":[441, 4494, 0, 0, 64], "details":[{"type":"brief", "text":"Live values and control logic"}, {"type":"text", "text":"Resources for live values and control logic. To reduce this area:", "details":[{"type":"text", "text":"reduce size of local variables"}, {"type":"text", "text":"reduce scope of local variables, localizing them as much as possible"}, {"type":"text", "text":"reduce number of nested loops"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[441, 4494, 0, 0, 64]}]}, {"name":"Feedback", "type":"resource", "data":[88, 7, 0, 0, 0], "details":[{"type":"brief", "text":"Loop-carried dependencies"}, {"type":"text", "text":"Resources for loop-carried dependencies. To reduce this area:", "details":[{"type":"text", "text":"reduce number and size of loop-carried variables"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[1, 0, 0, 0, 0]}, {"name":"hemm.cl:177", "type":"resource", "data":[64, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":177}]]}, {"name":"hemm.cl:180", "type":"resource", "data":[23, 7, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":180}]]}]}, {"name":"Cluster logic", "type":"resource", "data":[19, 13, 0, 0, 106], "details":[{"type":"brief", "text":"Logic required to efficiently support sets of operations that do not stall"}, {"type":"text", "text":"Logic required to efficiently support sets of operations that do not stall. This area cannot be affected directly."}]}, {"name":"Computation", "type":"resource", "children":[{"name":"No Source Line", "type":"resource", "data":[1952, 1536, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":0}]], "children":[{"name":"32-bit Select", "type":"resource", "count":64, "data":[1952, 1536, 0, 0, 0]}]}, {"name":"hemm.cl:180", "type":"resource", "data":[440, 128, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":180}]], "children":[{"name":"32-bit Select", "type":"resource", "count":16, "data":[440, 128, 0, 0, 0]}], "replace_name":"true"}, {"name":"hemm.cl:190", "type":"resource", "data":[1, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":190}]], "children":[{"name":"32-bit Integer Compare", "type":"resource", "count":1, "data":[1, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"hemm.cl:191", "type":"resource", "data":[1, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":191}]], "children":[{"name":"Channel Read", "type":"resource", "count":1, "data":[1, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"hemm.cl:205", "type":"resource", "data":[140, 4, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":205}]], "children":[{"name":"32-bit Integer Compare", "type":"resource", "count":4, "data":[140, 4, 0, 0, 0]}], "replace_name":"true"}, {"name":"hemm.cl:206", "type":"resource", "data":[136, 4, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":206}]], "children":[{"name":"1-bit Or", "type":"resource", "count":4, "data":[4, 4, 0, 0, 0]}, {"name":"32-bit Integer Add", "type":"resource", "count":4, "data":[128, 0, 0, 0, 0]}, {"name":"32-bit Integer Compare", "type":"resource", "count":4, "data":[4, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"hemm.cl:207", "type":"resource", "data":[280, 101, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":207}]], "children":[{"name":"1-bit And", "type":"resource", "count":4, "data":[4, 1, 0, 0, 0]}, {"name":"32-bit Integer Add", "type":"resource", "count":4, "data":[128, 0, 0, 0, 0]}, {"name":"32-bit Integer Compare", "type":"resource", "count":8, "data":[12, 4, 0, 0, 0]}, {"name":"Store", "type":"resource", "count":4, "data":[136, 96, 0, 0, 0], "details":[{"type":"text", "text":"Store uses a Pipelined never-stall LSU"}, {"type":"brief", "text":"Pipelined never-stall LSU"}, {"type":"text", "text":"Stall-free write to memory declared on %L.", "links":[{"filename":"hemm.cl", "line":"182"}]}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}], "replace_name":"true"}, {"name":"hemm.cl:210", "type":"resource", "data":[140, 4, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":210}]], "children":[{"name":"32-bit Integer Compare", "type":"resource", "count":4, "data":[140, 4, 0, 0, 0]}], "replace_name":"true"}, {"name":"hemm.cl:211", "type":"resource", "data":[1064, 2084, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":211}]], "children":[{"name":"Load", "type":"resource", "count":4, "data":[1064, 2084, 0, 0, 0], "details":[{"type":"text", "text":"Load uses a Pipelined never-stall LSU"}, {"type":"brief", "text":"Pipelined never-stall LSU"}, {"type":"text", "text":"Stall-free read from memory declared on %L.", "links":[{"filename":"hemm.cl", "line":"182"}]}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}], "replace_name":"true"}, {"name":"hemm.cl:215", "type":"resource", "data":[3, 2, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":215}]], "children":[{"name":"Channel Write", "type":"resource", "count":1, "data":[3, 2, 0, 0, 0]}], "replace_name":"true"}, {"name":"hemm.cl:217", "type":"resource", "data":[32, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":217}]], "children":[{"name":"32-bit Integer Add", "type":"resource", "count":1, "data":[32, 0, 0, 0, 0]}], "replace_name":"true"}]}]}]}, {"name":"kernel_bLoader", "compute_units":1, "type":"function", "total_percent":[1.85682, 1.19394, 0.77411, 0.774051, 0.131752], "total_kernel_resources":[9741, 13228, 21, 1.5, 23], "details":[{"type":"text", "text":"Number of compute units: 1"}, {"type":"text", "text":"Kernel attribute \'uses_global_work_offset\' not specified. Add \'__attribute__((uses_global_work_offset(0)))\' to reduce area utilization if the kernel will always be enqueued with a 0 or NULL global_work_offset argument in clEnqueueNDRangeKernel. Add \'__attribute__((uses_global_work_offset(1)))\' to hide this suggestion without affecting kernel functionality."}, {"type":"text", "text":"The following loop is nested at depth greater than 3. Reducing the depth of this nested loop will save area:", "details":[{"type":"text", "text":"%L with depth 4", "links":[{"filename":"hemm.cl", "line":"161"}]}]}, {"type":"brief", "text":"1 compute unit.\\nKernel attribute \'uses_global_work_offset\' not specified. Add \'__attribute__((uses_global_work_offset(0)))\' to reduce area utilization if the kernel will always be enqueued with a 0 or NULL global_work_offset argument in clEnqueueNDRangeKernel. Add \'__attribute__((uses_global_work_offset(1)))\' to hide this suggestion without affecting kernel functionality.\\n1 loop nested 3 levels deep or more."}], "children":[{"name":"Function overhead", "type":"resource", "data":[1338, 2411, 0, 0, 10], "details":[{"type":"text", "text":"Kernel dispatch logic."}, {"type":"brief", "text":"Kernel dispatch logic."}]}, {"name":"Private Variable: \\n - \'addr\' (hemm.cl:156)", "type":"resource", "data":[14, 72, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":156}]], "details":[{"type":"text", "text":"Type: Register"}, {"type":"text", "text":"2 registers of width 32 and depth 1"}, {"type":"brief", "text":"Register,\\n2 regs, 32 width by 1 depth"}]}, {"name":"Private Variable: \\n - \'i\' (hemm.cl:158)", "type":"resource", "data":[14, 73, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":158}]], "details":[{"type":"text", "text":"Type: Register"}, {"type":"text", "text":"1 register of width 32 and depth 1"}, {"type":"text", "text":"1 register of width 33 and depth 1"}, {"type":"brief", "text":"Register,\\n1 reg, 32 width by 1 depth,\\n1 reg, 33 width by 1 depth"}]}, {"name":"Private Variable: \\n - \'j\' (hemm.cl:159)", "type":"resource", "data":[14, 73, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":159}]], "details":[{"type":"text", "text":"Type: Register"}, {"type":"text", "text":"1 register of width 32 and depth 1"}, {"type":"text", "text":"1 register of width 33 and depth 1"}, {"type":"brief", "text":"Register,\\n1 reg, 32 width by 1 depth,\\n1 reg, 33 width by 1 depth"}]}, {"name":"Private Variable: \\n - \'k\' (hemm.cl:160)", "type":"resource", "data":[14, 73, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":160}]], "details":[{"type":"text", "text":"Type: Register"}, {"type":"text", "text":"1 register of width 32 and depth 1"}, {"type":"text", "text":"1 register of width 33 and depth 1"}, {"type":"brief", "text":"Register,\\n1 reg, 32 width by 1 depth,\\n1 reg, 33 width by 1 depth"}]}, {"name":"Private Variable: \\n - \'kk_jj_jjj\' (hemm.cl:161)", "type":"resource", "data":[7, 17, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":161}]], "details":[{"type":"text", "text":"Type: Register"}, {"type":"text", "text":"1 register of width 13 and depth 1"}, {"type":"brief", "text":"Register,\\n1 reg, 13 width by 1 depth"}]}, {"name":"kernel_bLoader.B0", "type":"basicblock", "children":[{"name":"State", "type":"resource", "data":[2, 301, 0, 0, 0], "details":[{"type":"brief", "text":"Live values and control logic"}, {"type":"text", "text":"Resources for live values and control logic. To reduce this area:", "details":[{"type":"text", "text":"reduce size of local variables"}, {"type":"text", "text":"reduce scope of local variables, localizing them as much as possible"}, {"type":"text", "text":"reduce number of nested loops"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[2, 147, 0, 0, 0]}, {"name":"hemm.cl:158", "type":"resource", "data":[0, 132, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":158}]]}, {"name":"hemm.cl:159", "type":"resource", "data":[0, 1, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":159}]]}, {"name":"hemm.cl:160", "type":"resource", "data":[0, 1, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":160}]]}, {"name":"hemm.cl:163", "type":"resource", "data":[0, 20, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":163}]]}]}, {"name":"Feedback", "type":"resource", "data":[7, 2, 0, 0, 0], "details":[{"type":"brief", "text":"Loop-carried dependencies"}, {"type":"text", "text":"Resources for loop-carried dependencies. To reduce this area:", "details":[{"type":"text", "text":"reduce number and size of loop-carried variables"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[7, 2, 0, 0, 0]}]}, {"name":"Cluster logic", "type":"resource", "data":[7, 5, 0, 0, 1], "details":[{"type":"brief", "text":"Logic required to efficiently support sets of operations that do not stall"}, {"type":"text", "text":"Logic required to efficiently support sets of operations that do not stall. This area cannot be affected directly."}]}, {"name":"Computation", "type":"resource", "children":[{"name":"hemm.cl:158", "type":"resource", "data":[659, 85, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":158}]], "children":[{"name":"32-bit Integer Add", "type":"resource", "count":2, "data":[64, 0, 0, 0, 0]}, {"name":"32-bit Integer Compare", "type":"resource", "count":4, "data":[140, 4, 0, 0, 0]}, {"name":"32-bit Integer Divide", "type":"resource", "count":1, "data":[308, 81, 0, 0, 0]}, {"name":"32-bit Select", "type":"resource", "count":3, "data":[48, 0, 0, 0, 0]}, {"name":"33-bit Integer Add", "type":"resource", "count":3, "data":[99, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"hemm.cl:159", "type":"resource", "data":[35, 1, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":159}]], "children":[{"name":"32-bit Integer Compare", "type":"resource", "count":1, "data":[35, 1, 0, 0, 0]}], "replace_name":"true"}, {"name":"hemm.cl:160", "type":"resource", "data":[35, 1, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":160}]], "children":[{"name":"32-bit Integer Compare", "type":"resource", "count":1, "data":[35, 1, 0, 0, 0]}], "replace_name":"true"}, {"name":"hemm.cl:163", "type":"resource", "data":[20, 0, 0, 1.5, 0], "debug":[[{"filename":"hemm.cl", "line":163}]], "children":[{"name":"32-bit Integer Multiply", "type":"resource", "count":1, "data":[20, 0, 0, 1.5, 0]}], "replace_name":"true"}]}]}, {"name":"kernel_bLoader.B1", "type":"basicblock", "children":[{"name":"State", "type":"resource", "data":[0, 2, 0, 0, 0], "details":[{"type":"brief", "text":"Live values and control logic"}, {"type":"text", "text":"Resources for live values and control logic. To reduce this area:", "details":[{"type":"text", "text":"reduce size of local variables"}, {"type":"text", "text":"reduce scope of local variables, localizing them as much as possible"}, {"type":"text", "text":"reduce number of nested loops"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[0, 2, 0, 0, 0]}]}, {"name":"Feedback", "type":"resource", "data":[9, 7, 0, 0, 0], "details":[{"type":"brief", "text":"Loop-carried dependencies"}, {"type":"text", "text":"Resources for loop-carried dependencies. To reduce this area:", "details":[{"type":"text", "text":"reduce number and size of loop-carried variables"}]}], "children":[{"name":"hemm.cl:156", "type":"resource", "data":[1, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":156}]]}, {"name":"hemm.cl:158", "type":"resource", "data":[8, 7, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":158}]]}]}, {"name":"Cluster logic", "type":"resource", "data":[6, 4, 0, 0, 1], "details":[{"type":"brief", "text":"Logic required to efficiently support sets of operations that do not stall"}, {"type":"text", "text":"Logic required to efficiently support sets of operations that do not stall. This area cannot be affected directly."}]}, {"name":"Computation", "type":"resource", "children":[{"name":"hemm.cl:156", "type":"resource", "data":[27, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":156}]], "children":[{"name":"33-bit Select", "type":"resource", "count":1, "data":[27, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"hemm.cl:158", "type":"resource", "data":[77, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":158}]], "children":[{"name":"1-bit And", "type":"resource", "count":1, "data":[1, 0, 0, 0, 0]}, {"name":"32-bit Integer Add", "type":"resource", "count":1, "data":[32, 0, 0, 0, 0]}, {"name":"33-bit Integer Add", "type":"resource", "count":1, "data":[33, 0, 0, 0, 0]}, {"name":"33-bit Integer Compare", "type":"resource", "count":1, "data":[11, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"hemm.cl:159", "type":"resource", "data":[1, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":159}]], "children":[{"name":"1-bit And", "type":"resource", "count":1, "data":[1, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"hemm.cl:160", "type":"resource", "data":[1, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":160}]], "children":[{"name":"1-bit And", "type":"resource", "count":1, "data":[1, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"hemm.cl:162", "type":"resource", "data":[35, 1, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":162}]], "children":[{"name":"32-bit Integer Compare", "type":"resource", "count":1, "data":[35, 1, 0, 0, 0]}], "replace_name":"true"}]}]}, {"name":"kernel_bLoader.B2", "type":"basicblock", "children":[{"name":"Feedback", "type":"resource", "data":[5, 8, 0, 0, 0], "details":[{"type":"brief", "text":"Loop-carried dependencies"}, {"type":"text", "text":"Resources for loop-carried dependencies. To reduce this area:", "details":[{"type":"text", "text":"reduce number and size of loop-carried variables"}]}], "children":[{"name":"hemm.cl:170", "type":"resource", "data":[5, 8, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":170}]]}]}]}, {"name":"kernel_bLoader.B3", "type":"basicblock", "children":[{"name":"State", "type":"resource", "data":[0, 9, 0, 0, 0], "details":[{"type":"brief", "text":"Live values and control logic"}, {"type":"text", "text":"Resources for live values and control logic. To reduce this area:", "details":[{"type":"text", "text":"reduce size of local variables"}, {"type":"text", "text":"reduce scope of local variables, localizing them as much as possible"}, {"type":"text", "text":"reduce number of nested loops"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[0, 9, 0, 0, 0]}]}, {"name":"Feedback", "type":"resource", "data":[57, 37, 0, 0, 0], "details":[{"type":"brief", "text":"Loop-carried dependencies"}, {"type":"text", "text":"Resources for loop-carried dependencies. To reduce this area:", "details":[{"type":"text", "text":"reduce number and size of loop-carried variables"}]}], "children":[{"name":"hemm.cl:156", "type":"resource", "data":[1, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":156}]]}, {"name":"hemm.cl:158", "type":"resource", "data":[24, 15, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":158}]]}, {"name":"hemm.cl:159", "type":"resource", "data":[16, 12, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":159}]]}, {"name":"hemm.cl:160", "type":"resource", "data":[8, 5, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":160}]]}, {"name":"hemm.cl:162", "type":"resource", "data":[8, 5, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":162}]]}]}, {"name":"Cluster logic", "type":"resource", "data":[6, 4, 0, 0, 3], "details":[{"type":"brief", "text":"Logic required to efficiently support sets of operations that do not stall"}, {"type":"text", "text":"Logic required to efficiently support sets of operations that do not stall. This area cannot be affected directly."}]}, {"name":"Computation", "type":"resource", "children":[{"name":"hemm.cl:156", "type":"resource", "data":[27, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":156}]], "children":[{"name":"33-bit Select", "type":"resource", "count":1, "data":[27, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"hemm.cl:159", "type":"resource", "data":[77, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":159}]], "children":[{"name":"1-bit And", "type":"resource", "count":1, "data":[1, 0, 0, 0, 0]}, {"name":"32-bit Integer Add", "type":"resource", "count":1, "data":[32, 0, 0, 0, 0]}, {"name":"33-bit Integer Add", "type":"resource", "count":1, "data":[33, 0, 0, 0, 0]}, {"name":"33-bit Integer Compare", "type":"resource", "count":1, "data":[11, 0, 0, 0, 0]}], "replace_name":"true"}]}]}, {"name":"kernel_bLoader.B5", "type":"basicblock", "children":[{"name":"State", "type":"resource", "data":[31, 102, 0, 0, 0], "details":[{"type":"brief", "text":"Live values and control logic"}, {"type":"text", "text":"Resources for live values and control logic. To reduce this area:", "details":[{"type":"text", "text":"reduce size of local variables"}, {"type":"text", "text":"reduce scope of local variables, localizing them as much as possible"}, {"type":"text", "text":"reduce number of nested loops"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[31, 102, 0, 0, 0]}]}, {"name":"Feedback", "type":"resource", "data":[90, 88, 0, 0, 0], "details":[{"type":"brief", "text":"Loop-carried dependencies"}, {"type":"text", "text":"Resources for loop-carried dependencies. To reduce this area:", "details":[{"type":"text", "text":"reduce number and size of loop-carried variables"}]}], "children":[{"name":"hemm.cl:156", "type":"resource", "data":[1, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":156}]]}, {"name":"hemm.cl:158", "type":"resource", "data":[24, 15, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":158}]]}, {"name":"hemm.cl:159", "type":"resource", "data":[40, 56, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":159}]]}, {"name":"hemm.cl:160", "type":"resource", "data":[16, 12, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":160}]]}, {"name":"hemm.cl:162", "type":"resource", "data":[8, 5, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":162}]]}, {"name":"hemm.cl:165", "type":"resource", "data":[1, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":165}]]}]}, {"name":"Cluster logic", "type":"resource", "data":[6, 4, 0, 0, 8], "details":[{"type":"brief", "text":"Logic required to efficiently support sets of operations that do not stall"}, {"type":"text", "text":"Logic required to efficiently support sets of operations that do not stall. This area cannot be affected directly."}]}, {"name":"Computation", "type":"resource", "children":[{"name":"No Source Line", "type":"resource", "data":[4, 0, 0, 0, 0], "debug":[[{"filename":"", "line":0}]], "children":[{"name":"1-bit And", "type":"resource", "count":2, "data":[2, 0, 0, 0, 0]}, {"name":"1-bit Or", "type":"resource", "count":2, "data":[2, 0, 0, 0, 0]}]}, {"name":"hemm.cl:156", "type":"resource", "data":[13.5, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":156}]], "children":[{"name":"33-bit Select", "type":"resource", "count":1, "data":[13.5, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"hemm.cl:160", "type":"resource", "data":[77.5, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":160}]], "children":[{"name":"1-bit And", "type":"resource", "count":2, "data":[1.5, 0, 0, 0, 0]}, {"name":"32-bit Integer Add", "type":"resource", "count":1, "data":[32, 0, 0, 0, 0]}, {"name":"33-bit Integer Add", "type":"resource", "count":1, "data":[33, 0, 0, 0, 0]}, {"name":"33-bit Integer Compare", "type":"resource", "count":1, "data":[11, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"hemm.cl:161", "type":"resource", "data":[32, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":161}]], "children":[{"name":"32-bit Integer Add", "type":"resource", "count":1, "data":[32, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"hemm.cl:162", "type":"resource", "data":[44.5, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":162}]], "children":[{"name":"1-bit And", "type":"resource", "count":1, "data":[0.5, 0, 0, 0, 0]}, {"name":"1-bit Or", "type":"resource", "count":1, "data":[1, 0, 0, 0, 0]}, {"name":"32-bit Integer Compare", "type":"resource", "count":1, "data":[11, 0, 0, 0, 0]}, {"name":"32-bit Or", "type":"resource", "count":1, "data":[32, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"hemm.cl:165", "type":"resource", "data":[13.5, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":165}]], "children":[{"name":"33-bit Select", "type":"resource", "count":1, "data":[13.5, 0, 0, 0, 0]}], "replace_name":"true"}]}]}, {"name":"kernel_bLoader.B8", "type":"basicblock", "children":[{"name":"State", "type":"resource", "data":[805, 7112, 3, 0, 0], "details":[{"type":"brief", "text":"Live values and control logic"}, {"type":"text", "text":"Resources for live values and control logic. To reduce this area:", "details":[{"type":"text", "text":"reduce size of local variables"}, {"type":"text", "text":"reduce scope of local variables, localizing them as much as possible"}, {"type":"text", "text":"reduce number of nested loops"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[805, 7112, 3, 0, 0]}]}, {"name":"Feedback", "type":"resource", "data":[133, 158, 0, 0, 0], "details":[{"type":"brief", "text":"Loop-carried dependencies"}, {"type":"text", "text":"Resources for loop-carried dependencies. To reduce this area:", "details":[{"type":"text", "text":"reduce number and size of loop-carried variables"}]}], "children":[{"name":"hemm.cl:156", "type":"resource", "data":[1, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":156}]]}, {"name":"hemm.cl:158", "type":"resource", "data":[25, 18, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":158}]]}, {"name":"hemm.cl:159", "type":"resource", "data":[41, 59, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":159}]]}, {"name":"hemm.cl:160", "type":"resource", "data":[20, 12.5, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":160}]]}, {"name":"hemm.cl:161", "type":"resource", "data":[32, 58, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":161}]]}, {"name":"hemm.cl:162", "type":"resource", "data":[13, 10.5, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":162}]]}, {"name":"hemm.cl:165", "type":"resource", "data":[1, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":165}]]}]}, {"name":"Cluster logic", "type":"resource", "data":[9, 7, 3, 0, 0], "details":[{"type":"brief", "text":"Logic required to efficiently support sets of operations that do not stall"}, {"type":"text", "text":"Logic required to efficiently support sets of operations that do not stall. This area cannot be affected directly."}]}, {"name":"Computation", "type":"resource", "children":[{"name":"hemm.cl:160", "type":"resource", "data":[0.333333, 0.333333, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":160}]], "children":[{"name":"1-bit Or", "type":"resource", "count":1, "data":[0.333333, 0.333333, 0, 0, 0]}], "replace_name":"true"}, {"name":"hemm.cl:161", "type":"resource", "data":[22.8333, 1.83333, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":161}]], "children":[{"name":"1-bit And", "type":"resource", "count":3, "data":[2, 1, 0, 0, 0]}, {"name":"1-bit Or", "type":"resource", "count":4, "data":[1.83333, 0.833333, 0, 0, 0]}, {"name":"13-bit Integer Add", "type":"resource", "count":1, "data":[13, 0, 0, 0, 0]}, {"name":"13-bit Integer Compare", "type":"resource", "count":1, "data":[4, 0, 0, 0, 0]}, {"name":"2-bit Select", "type":"resource", "count":1, "data":[2, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"hemm.cl:162", "type":"resource", "data":[0.333333, 0.333333, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":162}]], "children":[{"name":"1-bit Or", "type":"resource", "count":1, "data":[0.333333, 0.333333, 0, 0, 0]}], "replace_name":"true"}, {"name":"hemm.cl:163", "type":"resource", "data":[5932.5, 2568.5, 15, 0, 0], "debug":[[{"filename":"hemm.cl", "line":163}]], "children":[{"name":"1-bit And", "type":"resource", "count":1, "data":[1, 0, 0, 0, 0]}, {"name":"1-bit Or", "type":"resource", "count":1, "data":[0.5, 0.5, 0, 0, 0]}, {"name":"32-bit Integer Remainder", "type":"resource", "count":1, "data":[4827, 96, 0, 0, 0], "details":[{"type":"text", "text":"Implemented using inlined soft-IP."}]}, {"name":"32-bit Select", "type":"resource", "count":16, "data":[416, 0, 0, 0, 0]}, {"name":"Channel Write", "type":"resource", "count":1, "data":[4, 2, 0, 0, 0]}, {"name":"Load", "type":"resource", "count":1, "data":[684, 2470, 15, 0, 0], "details":[{"type":"text", "text":"Load uses a Burst-coalesced LSU"}, {"type":"brief", "text":"Burst-coalesced LSU"}]}], "replace_name":"true"}, {"name":"hemm.cl:165", "type":"resource", "data":[32, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":165}]], "children":[{"name":"32-bit Integer Add", "type":"resource", "count":1, "data":[32, 0, 0, 0, 0]}], "replace_name":"true"}]}]}]}, {"name":"kernel_unloader", "compute_units":1, "type":"function", "total_percent":[0.736534, 0.447683, 0.326896, 0, 0], "total_kernel_resources":[2745, 5586, 0, 0, 54], "details":[{"type":"text", "text":"Number of compute units: 1"}, {"type":"text", "text":"Kernel attribute \'uses_global_work_offset\' not specified. Add \'__attribute__((uses_global_work_offset(0)))\' to reduce area utilization if the kernel will always be enqueued with a 0 or NULL global_work_offset argument in clEnqueueNDRangeKernel. Add \'__attribute__((uses_global_work_offset(1)))\' to hide this suggestion without affecting kernel functionality."}, {"type":"brief", "text":"1 compute unit.\\nKernel attribute \'uses_global_work_offset\' not specified. Add \'__attribute__((uses_global_work_offset(0)))\' to reduce area utilization if the kernel will always be enqueued with a 0 or NULL global_work_offset argument in clEnqueueNDRangeKernel. Add \'__attribute__((uses_global_work_offset(1)))\' to hide this suggestion without affecting kernel functionality."}], "children":[{"name":"Function overhead", "type":"resource", "data":[1338, 2411, 0, 0, 10], "details":[{"type":"text", "text":"Kernel dispatch logic."}, {"type":"brief", "text":"Kernel dispatch logic."}]}, {"name":"Private Variable: \\n - \'addr\' (hemm.cl:316)", "type":"resource", "data":[14, 72, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":316}]], "details":[{"type":"text", "text":"Type: Register"}, {"type":"text", "text":"2 registers of width 32 and depth 1"}, {"type":"brief", "text":"Register,\\n2 regs, 32 width by 1 depth"}]}, {"name":"Private Variable: \\n - \'i\' (hemm.cl:318)", "type":"resource", "data":[7, 37, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":318}]], "details":[{"type":"text", "text":"Type: Register"}, {"type":"text", "text":"1 register of width 33 and depth 1"}, {"type":"brief", "text":"Register,\\n1 reg, 33 width by 1 depth"}]}, {"name":"Private Variable: \\n - \'iii_ii_jj\' (hemm.cl:320)", "type":"resource", "data":[7, 19, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":320}]], "details":[{"type":"text", "text":"Type: Register"}, {"type":"text", "text":"1 register of width 15 and depth 1"}, {"type":"brief", "text":"Register,\\n1 reg, 15 width by 1 depth"}]}, {"name":"Private Variable: \\n - \'j\' (hemm.cl:319)", "type":"resource", "data":[7, 37, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":319}]], "details":[{"type":"text", "text":"Type: Register"}, {"type":"text", "text":"1 register of width 33 and depth 1"}, {"type":"brief", "text":"Register,\\n1 reg, 33 width by 1 depth"}]}, {"name":"kernel_unloader.B0", "type":"basicblock", "children":[{"name":"State", "type":"resource", "data":[7, 208, 0, 0, 0], "details":[{"type":"brief", "text":"Live values and control logic"}, {"type":"text", "text":"Resources for live values and control logic. To reduce this area:", "details":[{"type":"text", "text":"reduce size of local variables"}, {"type":"text", "text":"reduce scope of local variables, localizing them as much as possible"}, {"type":"text", "text":"reduce number of nested loops"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[7, 140, 0, 0, 0]}, {"name":"hemm.cl:318", "type":"resource", "data":[0, 67, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":318}]]}, {"name":"hemm.cl:319", "type":"resource", "data":[0, 1, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":319}]]}]}, {"name":"Feedback", "type":"resource", "data":[7, 2, 0, 0, 0], "details":[{"type":"brief", "text":"Loop-carried dependencies"}, {"type":"text", "text":"Resources for loop-carried dependencies. To reduce this area:", "details":[{"type":"text", "text":"reduce number and size of loop-carried variables"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[7, 2, 0, 0, 0]}]}, {"name":"Cluster logic", "type":"resource", "data":[7, 5, 0, 0, 1], "details":[{"type":"brief", "text":"Logic required to efficiently support sets of operations that do not stall"}, {"type":"text", "text":"Logic required to efficiently support sets of operations that do not stall. This area cannot be affected directly."}]}, {"name":"Computation", "type":"resource", "children":[{"name":"hemm.cl:318", "type":"resource", "data":[575, 58, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":318}]], "children":[{"name":"32-bit Integer Add", "type":"resource", "count":2, "data":[64, 0, 0, 0, 0]}, {"name":"32-bit Integer Compare", "type":"resource", "count":3, "data":[105, 3, 0, 0, 0]}, {"name":"32-bit Integer Divide", "type":"resource", "count":1, "data":[308, 55, 0, 0, 0]}, {"name":"32-bit Select", "type":"resource", "count":2, "data":[32, 0, 0, 0, 0]}, {"name":"33-bit Integer Add", "type":"resource", "count":2, "data":[66, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"hemm.cl:319", "type":"resource", "data":[36, 1, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":319}]], "children":[{"name":"1-bit And", "type":"resource", "count":1, "data":[1, 0, 0, 0, 0]}, {"name":"32-bit Integer Compare", "type":"resource", "count":1, "data":[35, 1, 0, 0, 0]}], "replace_name":"true"}]}]}, {"name":"kernel_unloader.B1", "type":"basicblock", "children":[{"name":"Feedback", "type":"resource", "data":[8, 7, 0, 0, 0], "details":[{"type":"brief", "text":"Loop-carried dependencies"}, {"type":"text", "text":"Resources for loop-carried dependencies. To reduce this area:", "details":[{"type":"text", "text":"reduce number and size of loop-carried variables"}]}], "children":[{"name":"hemm.cl:316", "type":"resource", "data":[1, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":316}]]}, {"name":"hemm.cl:318", "type":"resource", "data":[7, 7, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":318}]]}]}, {"name":"Cluster logic", "type":"resource", "data":[5, 3, 0, 0, 1], "details":[{"type":"brief", "text":"Logic required to efficiently support sets of operations that do not stall"}, {"type":"text", "text":"Logic required to efficiently support sets of operations that do not stall. This area cannot be affected directly."}]}, {"name":"Computation", "type":"resource", "children":[{"name":"hemm.cl:316", "type":"resource", "data":[27, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":316}]], "children":[{"name":"33-bit Select", "type":"resource", "count":1, "data":[27, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"hemm.cl:318", "type":"resource", "data":[45, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":318}]], "children":[{"name":"1-bit And", "type":"resource", "count":1, "data":[1, 0, 0, 0, 0]}, {"name":"33-bit Integer Add", "type":"resource", "count":1, "data":[33, 0, 0, 0, 0]}, {"name":"33-bit Integer Compare", "type":"resource", "count":1, "data":[11, 0, 0, 0, 0]}], "replace_name":"true"}]}]}, {"name":"kernel_unloader.B2", "type":"basicblock", "children":[{"name":"Feedback", "type":"resource", "data":[5, 8, 0, 0, 0], "details":[{"type":"brief", "text":"Loop-carried dependencies"}, {"type":"text", "text":"Resources for loop-carried dependencies. To reduce this area:", "details":[{"type":"text", "text":"reduce number and size of loop-carried variables"}]}], "children":[{"name":"hemm.cl:326", "type":"resource", "data":[5, 8, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":326}]]}]}]}, {"name":"kernel_unloader.B3", "type":"basicblock", "children":[{"name":"State", "type":"resource", "data":[0, 5, 0, 0, 0], "details":[{"type":"brief", "text":"Live values and control logic"}, {"type":"text", "text":"Resources for live values and control logic. To reduce this area:", "details":[{"type":"text", "text":"reduce size of local variables"}, {"type":"text", "text":"reduce scope of local variables, localizing them as much as possible"}, {"type":"text", "text":"reduce number of nested loops"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[0, 5, 0, 0, 0]}]}, {"name":"Feedback", "type":"resource", "data":[33, 22, 0, 0, 0], "details":[{"type":"brief", "text":"Loop-carried dependencies"}, {"type":"text", "text":"Resources for loop-carried dependencies. To reduce this area:", "details":[{"type":"text", "text":"reduce number and size of loop-carried variables"}]}], "children":[{"name":"hemm.cl:316", "type":"resource", "data":[2, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":316}]]}, {"name":"hemm.cl:318", "type":"resource", "data":[24, 15, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":318}]]}, {"name":"hemm.cl:319", "type":"resource", "data":[7, 7, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":319}]]}]}, {"name":"Cluster logic", "type":"resource", "data":[6, 4, 0, 0, 4], "details":[{"type":"brief", "text":"Logic required to efficiently support sets of operations that do not stall"}, {"type":"text", "text":"Logic required to efficiently support sets of operations that do not stall. This area cannot be affected directly."}]}, {"name":"Computation", "type":"resource", "children":[{"name":"No Source Line", "type":"resource", "data":[2, 0, 0, 0, 0], "debug":[[{"filename":"", "line":0}]], "children":[{"name":"1-bit And", "type":"resource", "count":1, "data":[1, 0, 0, 0, 0]}, {"name":"1-bit Or", "type":"resource", "count":1, "data":[1, 0, 0, 0, 0]}]}, {"name":"hemm.cl:316", "type":"resource", "data":[27, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":316}]], "children":[{"name":"33-bit Select", "type":"resource", "count":1, "data":[27, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"hemm.cl:319", "type":"resource", "data":[45, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":319}]], "children":[{"name":"1-bit And", "type":"resource", "count":1, "data":[1, 0, 0, 0, 0]}, {"name":"33-bit Integer Add", "type":"resource", "count":1, "data":[33, 0, 0, 0, 0]}, {"name":"33-bit Integer Compare", "type":"resource", "count":1, "data":[11, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"hemm.cl:320", "type":"resource", "data":[32, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":320}]], "children":[{"name":"32-bit Integer Add", "type":"resource", "count":1, "data":[32, 0, 0, 0, 0]}], "replace_name":"true"}]}]}, {"name":"kernel_unloader.B6", "type":"basicblock", "children":[{"name":"State", "type":"resource", "data":[19, 165, 0, 0, 0], "details":[{"type":"brief", "text":"Live values and control logic"}, {"type":"text", "text":"Resources for live values and control logic. To reduce this area:", "details":[{"type":"text", "text":"reduce size of local variables"}, {"type":"text", "text":"reduce scope of local variables, localizing them as much as possible"}, {"type":"text", "text":"reduce number of nested loops"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[19, 165, 0, 0, 0]}]}, {"name":"Feedback", "type":"resource", "data":[66, 78, 0, 0, 0], "details":[{"type":"brief", "text":"Loop-carried dependencies"}, {"type":"text", "text":"Resources for loop-carried dependencies. To reduce this area:", "details":[{"type":"text", "text":"reduce number and size of loop-carried variables"}]}], "children":[{"name":"hemm.cl:316", "type":"resource", "data":[1, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":316}]]}, {"name":"hemm.cl:318", "type":"resource", "data":[24, 15, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":318}]]}, {"name":"hemm.cl:319", "type":"resource", "data":[8, 5, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":319}]]}, {"name":"hemm.cl:320", "type":"resource", "data":[32, 58, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":320}]]}, {"name":"hemm.cl:322", "type":"resource", "data":[1, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":322}]]}]}, {"name":"Cluster logic", "type":"resource", "data":[12, 8, 0, 0, 7], "details":[{"type":"brief", "text":"Logic required to efficiently support sets of operations that do not stall"}, {"type":"text", "text":"Logic required to efficiently support sets of operations that do not stall. This area cannot be affected directly."}]}, {"name":"Computation", "type":"resource", "children":[{"name":"hemm.cl:319", "type":"resource", "data":[0.5, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":319}]], "children":[{"name":"1-bit Or", "type":"resource", "count":1, "data":[0.5, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"hemm.cl:320", "type":"resource", "data":[25.5, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":320}]], "children":[{"name":"1-bit And", "type":"resource", "count":3, "data":[2, 0, 0, 0, 0]}, {"name":"1-bit Or", "type":"resource", "count":3, "data":[1.5, 0, 0, 0, 0]}, {"name":"15-bit Integer Add", "type":"resource", "count":1, "data":[15, 0, 0, 0, 0]}, {"name":"15-bit Integer Compare", "type":"resource", "count":1, "data":[5, 0, 0, 0, 0]}, {"name":"2-bit Select", "type":"resource", "count":1, "data":[2, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"hemm.cl:321", "type":"resource", "data":[350, 2436, 0, 0, 31], "debug":[[{"filename":"hemm.cl", "line":321}]], "children":[{"name":"Channel Read", "type":"resource", "count":1, "data":[1, 0, 0, 0, 0]}, {"name":"Store", "type":"resource", "count":1, "data":[349, 2436, 0, 0, 31], "details":[{"type":"text", "text":"Store uses a Burst-coalesced LSU"}, {"type":"brief", "text":"Burst-coalesced LSU"}]}], "replace_name":"true"}, {"name":"hemm.cl:322", "type":"resource", "data":[32, 0, 0, 0, 0], "debug":[[{"filename":"hemm.cl", "line":322}]], "children":[{"name":"32-bit Integer Add", "type":"resource", "count":1, "data":[32, 0, 0, 0, 0]}], "replace_name":"true"}]}]}]}]}';
var area_srcJSON='{"children":[{"children":[{"data":[134500,172452,397,0,0],"details":[{"text":"Platform interface logic.","type":"text"}],"name":"Board interface","type":"resource"}],"name":"Static Partition","type":"partition"},{"data":[8779,12545,78,0,0],"details":[{"text":"Global interconnect for 2 global loads and 1 global store. Reduce number of global loads and stores to simplify global interconnect.","type":"text"},{"text":"For 2 global loads and 1 global store.","type":"brief"},{"links":[{"guide":"Best Practices Guide : Global Memory Interconnect","link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#hnj1476724450050"}],"text":"See %L for more information","type":"text"}],"name":"Global interconnect","type":"resource"},{"data":[0,67,2,0,0],"details":[{"text":"This read-only memory contains information for the host about the system and about each kernel in the system, including kernel names, arguments, and attributes. The system description ROM ensures that the binary image on the FPGA is compatible with the host program.","type":"text"},{"text":"Contains information for the host.","type":"brief"}],"name":"System description ROM","type":"resource"},{"children":[{"data":[11,1542,13,0,0],"debug":[[{"filename":"hemm.cl","line":73}]],"details":[{"text":"Channel is implemented 512 bits wide by 256 deep.","type":"text"},{"text":"512b wide by 256 deep.","type":"brief"},{"links":[{"guide":"Best Practices Guide : Channels","link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#qah1476410829821"}],"text":"See %L for more information","type":"text"}],"name":"hemm.cl:73 (aLoader_aFeeder_channel)","type":"resource"},{"data":[11,15366,128,0,0],"debug":[[{"filename":"hemm.cl","line":74}]],"details":[{"text":"Channel is implemented 5120 bits wide by 256 deep.","type":"text"},{"text":"5120b wide by 256 deep.","type":"brief"},{"links":[{"guide":"Best Practices Guide : Channels","link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#qah1476410829821"}],"text":"See %L for more information","type":"text"}],"name":"hemm.cl:74 (aFeeder_X_channel)","type":"resource"},{"data":[11,1542,13,0,0],"debug":[[{"filename":"hemm.cl","line":75}]],"details":[{"text":"Channel is implemented 512 bits wide by 256 deep.","type":"text"},{"text":"512b wide by 256 deep.","type":"brief"},{"links":[{"guide":"Best Practices Guide : Channels","link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#qah1476410829821"}],"text":"See %L for more information","type":"text"}],"name":"hemm.cl:75 (bLoader_bFeeder_channel)","type":"resource"},{"data":[11,6150,52,0,0],"debug":[[{"filename":"hemm.cl","line":76}]],"details":[{"text":"Channel is implemented 2048 bits wide by 256 deep.","type":"text"},{"text":"2048b wide by 256 deep.","type":"brief"},{"links":[{"guide":"Best Practices Guide : Channels","link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#qah1476410829821"}],"text":"See %L for more information","type":"text"}],"name":"hemm.cl:76 (bFeeder_Y_channel)","type":"resource"},{"data":[11,774,7,0,0],"debug":[[{"filename":"hemm.cl","line":77}]],"details":[{"text":"Channel is implemented 256 bits wide by 256 deep.","type":"text"},{"text":"256b wide by 256 deep.","type":"brief"},{"links":[{"guide":"Best Practices Guide : Channels","link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#qah1476410829821"}],"text":"See %L for more information","type":"text"}],"name":"hemm.cl:77 (Out_unloader_channel)","type":"resource"}],"data":[55,25374,213,0,0],"name":"Pipe and channel resources","type":"group"},{"children":[{"data":[0,0,0,0,0],"details":[{"text":"Feedback+Cluster logic","type":"brief"}],"name":"Data control overhead","type":"resource"},{"data":[1338,2411,0,0,10],"details":[{"text":"Kernel dispatch logic.","type":"text"},{"text":"Kernel dispatch logic.","type":"brief"}],"name":"Function overhead","type":"resource"}],"compute_units":1,"data":[1338,2411,0,0,10],"details":[{"text":"Number of compute units: 1","type":"text"},{"text":"Kernel attribute \'uses_global_work_offset\' not specified. Add \'__attribute__((uses_global_work_offset(0)))\' to reduce area utilization if the kernel will always be enqueued with a 0 or NULL global_work_offset argument in clEnqueueNDRangeKernel. Add \'__attribute__((uses_global_work_offset(1)))\' to hide this suggestion without affecting kernel functionality.","type":"text"},{"text":"1 compute unit.\\nKernel attribute \'uses_global_work_offset\' not specified. Add \'__attribute__((uses_global_work_offset(0)))\' to reduce area utilization if the kernel will always be enqueued with a 0 or NULL global_work_offset argument in clEnqueueNDRangeKernel. Add \'__attribute__((uses_global_work_offset(1)))\' to hide this suggestion without affecting kernel functionality.","type":"brief"}],"name":"Intel_Internal_Collect_Autorun_Profiling","total_kernel_resources":[1338,2411,0,0,10],"total_percent":[0.30677,0.180009,0.141093,0,0],"type":"function"},{"children":[{"data":[2385,1705,9,0,5],"details":[{"text":"Feedback+Cluster logic","type":"brief"}],"name":"Data control overhead","type":"resource"},{"data":[1338,2411,0,0,10],"details":[{"text":"Kernel dispatch logic.","type":"text"},{"text":"Kernel dispatch logic.","type":"brief"}],"name":"Function overhead","type":"resource"},{"data":[1171,5955,0,0,0],"details":[{"text":"Type: Shift Register (160 or fewer tap points)","type":"text"},{"text":"160 registers of width 32 and depth 1","type":"text"},{"text":"Shift Register,\\n160 regs, 32 width by 1 depth","type":"brief"}],"name":"Coalesced Private Variables: \\n - \'X_shreg\' (hemm.cl:229)\\n - \'aFeeder_X_channel_array\' (hemm.cl:231)","type":"resource"},{"data":[448,2304,0,0,0],"details":[{"text":"Type: Shift Register (64 or fewer tap points)","type":"text"},{"text":"64 registers of width 32 and depth 1","type":"text"},{"text":"Shift Register,\\n64 regs, 32 width by 1 depth","type":"brief"}],"name":"Coalesced Private Variables: \\n - \'Y_shreg\' (hemm.cl:227)\\n - \'bFeeder_Y_channel_array\' (hemm.cl:230)","type":"resource"},{"data":[7,15,0,0,0],"details":[{"text":"Type: Shift Register (1 or fewer tap point)","type":"text"},{"text":"1 register of width 11 and depth 1","type":"text"},{"text":"Shift Register,\\n1 reg, 11 width by 1 depth","type":"brief"}],"name":"Coalesced Private Variables: \\n - \'Z_shreg\' (hemm.cl:225)\\n - \'Z_pipe_shreg\' (hemm.cl:226)","type":"resource"},{"data":[7,36,0,0,0],"details":[{"text":"Type: Shift Register (1 or fewer tap point)","type":"text"},{"text":"1 register of width 32 and depth 1","type":"text"},{"text":"Shift Register,\\n1 reg, 32 width by 1 depth","type":"brief"}],"name":"Private Variable: \\n - \'Z_pipe_base\' (hemm.cl:234)","type":"resource"},{"data":[14,72,0,0,0],"details":[{"text":"Type: Register","type":"text"},{"text":"2 registers of width 32 and depth 1","type":"text"},{"text":"Register,\\n2 regs, 32 width by 1 depth","type":"brief"}],"name":"Private Variable: \\n - \'Z_pipe_iter\' (hemm.cl:233)","type":"resource"},{"data":[0,0,144,0,0],"details":[{"text":"Type: Shift Register (36 or fewer tap points)","type":"text"},{"text":"36 registers of width 64 and depth 1024","type":"text"},{"text":"Shift Register,\\n36 regs, 64 width by 1024 depth","type":"brief"}],"name":"Private Variable: \\n - \'Z_pipe_shreg\' (hemm.cl:226)","type":"resource"},{"data":[0,0,160,0,0],"details":[{"text":"Type: Shift Register (40 or fewer tap points)","type":"text"},{"text":"40 registers of width 64 and depth 1024","type":"text"},{"text":"Shift Register,\\n40 regs, 64 width by 1024 depth","type":"brief"}],"name":"Private Variable: \\n - \'Z_shreg\' (hemm.cl:225)","type":"resource"},{"data":[14,73,0,0,0],"details":[{"text":"Type: Register","type":"text"},{"text":"1 register of width 32 and depth 1","type":"text"},{"text":"1 register of width 33 and depth 1","type":"text"},{"text":"Register,\\n1 reg, 32 width by 1 depth,\\n1 reg, 33 width by 1 depth","type":"brief"}],"name":"Private Variable: \\n - \'i_j_k\' (hemm.cl:237)","type":"resource"},{"data":[14,56,0,0,0],"details":[{"text":"Type: Register","type":"text"},{"text":"1 register of width 16 and depth 1","type":"text"},{"text":"1 register of width 32 and depth 1","type":"text"},{"text":"Register,\\n1 reg, 16 width by 1 depth,\\n1 reg, 32 width by 1 depth","type":"brief"}],"name":"Private Variable: \\n - \'kk_ii_jj\' (hemm.cl:238)","type":"resource"},{"children":[{"count":3,"data":[6754,55206,2,0,699],"debug":[[{"filename":"","line":0}]],"name":"State","type":"resource"},{"count":1,"data":[1,0,0,0,0],"debug":[[{"filename":"","line":0}]],"name":"1-bit And","type":"resource"},{"count":1,"data":[1,0,0,0,0],"debug":[[{"filename":"","line":0}]],"name":"1-bit Or","type":"resource"},{"count":1,"data":[2.2,0,0,0,0],"debug":[[{"filename":"","line":0}]],"name":"11-bit Integer Subtract","type":"resource"},{"count":112,"data":[1109.33,0,0,0,0],"debug":[[{"filename":"","line":0}]],"name":"32-bit Select","type":"resource"}],"data":[7867.53,55206,2,0,699],"name":"No Source Line","type":"resource"},{"children":[{"count":1,"data":[0,98,0,0,0],"debug":[[{"filename":"hemm.cl","line":237}]],"name":"State","type":"resource"},{"count":2,"data":[35,1,0,0,0],"debug":[[{"filename":"hemm.cl","line":237}]],"name":"32-bit Integer Compare","type":"resource"},{"count":1,"data":[308,55,0,0,0],"debug":[[{"filename":"hemm.cl","line":237}]],"name":"32-bit Integer Divide","type":"resource"},{"count":2,"data":[64,0,0,3,0],"debug":[[{"filename":"hemm.cl","line":237}]],"name":"32-bit Integer Multiply","type":"resource"},{"count":1,"data":[16,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":237}]],"name":"32-bit Select","type":"resource"},{"count":2,"data":[66,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":237}]],"name":"33-bit Integer Add","type":"resource"},{"count":1,"data":[32,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":237}]],"name":"32-bit Integer Add","type":"resource"},{"count":1,"data":[11,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":237}]],"name":"33-bit Integer Compare","type":"resource"},{"count":4,"data":[1.66667,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":237}]],"name":"1-bit Or","type":"resource"}],"data":[533.66667,154,0,3,0],"debug":[[{"filename":"hemm.cl","line":237}]],"name":"hemm.cl:237","type":"resource"},{"children":[{"count":1,"data":[27,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":226}]],"name":"33-bit Select","type":"resource"},{"count":1,"data":[2.2,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":226}]],"name":"11-bit Integer Subtract","type":"resource"}],"data":[29.2,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":226}]],"name":"hemm.cl:226","replace_name":"true","type":"resource"},{"children":[{"count":2,"data":[64,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":238}]],"name":"32-bit Integer Add","type":"resource"},{"count":3,"data":[2,1,0,0,0],"debug":[[{"filename":"hemm.cl","line":238}]],"name":"1-bit And","type":"resource"},{"count":4,"data":[1.66667,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":238}]],"name":"1-bit Or","type":"resource"},{"count":1,"data":[16,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":238}]],"name":"16-bit Integer Add","type":"resource"},{"count":1,"data":[5,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":238}]],"name":"16-bit Integer Compare","type":"resource"},{"count":1,"data":[2,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":238}]],"name":"2-bit Select","type":"resource"}],"data":[90.66667,1,0,0,0],"debug":[[{"filename":"hemm.cl","line":238}]],"name":"hemm.cl:238","replace_name":"true","type":"resource"},{"children":[{"count":1,"data":[1,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":251}]],"name":"1-bit And","type":"resource"},{"count":2,"data":[0.833333,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":251}]],"name":"1-bit Or","type":"resource"},{"count":1,"data":[35,1,0,0,0],"debug":[[{"filename":"hemm.cl","line":251}]],"name":"32-bit Integer Compare","type":"resource"}],"data":[36.833333,1,0,0,0],"debug":[[{"filename":"hemm.cl","line":251}]],"name":"hemm.cl:251","replace_name":"true","type":"resource"},{"children":[{"count":1,"data":[2.2,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":225}]],"name":"11-bit Integer Subtract","type":"resource"}],"data":[2.2,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":225}]],"name":"hemm.cl:225","replace_name":"true","type":"resource"},{"children":[{"count":64,"data":[693.333,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":230}]],"name":"32-bit Select","type":"resource"}],"data":[693.333,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":230}]],"name":"hemm.cl:230","replace_name":"true","type":"resource"},{"children":[{"count":160,"data":[1881,48,0,0,0],"debug":[[{"filename":"hemm.cl","line":231}]],"name":"32-bit Select","type":"resource"}],"data":[1881,48,0,0,0],"debug":[[{"filename":"hemm.cl","line":231}]],"name":"hemm.cl:231","replace_name":"true","type":"resource"},{"children":[{"count":48,"data":[485.333,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":252}]],"name":"32-bit Select","type":"resource"},{"count":1,"data":[1,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":252}]],"name":"Channel Read","type":"resource"}],"data":[486.333,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":252}]],"name":"hemm.cl:252","replace_name":"true","type":"resource"},{"children":[{"count":144,"data":[1673,48,0,0,0],"debug":[[{"filename":"hemm.cl","line":253}]],"name":"32-bit Select","type":"resource"},{"count":1,"data":[1,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":253}]],"name":"Channel Read","type":"resource"}],"data":[1674,48,0,0,0],"debug":[[{"filename":"hemm.cl","line":253}]],"name":"hemm.cl:253","replace_name":"true","type":"resource"},{"children":[{"count":1,"data":[11,1,0,0,0],"debug":[[{"filename":"hemm.cl","line":263}]],"name":"32-bit Integer Compare","type":"resource"},{"count":1,"data":[4827,96,0,0,0],"debug":[[{"filename":"hemm.cl","line":263}]],"name":"32-bit Integer Remainder","type":"resource"},{"count":1,"data":[32,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":263}]],"name":"32-bit Or","type":"resource"},{"count":80,"data":[2560,2560,0,0,0],"debug":[[{"filename":"hemm.cl","line":263}]],"name":"32-bit Select","type":"resource"}],"data":[7430,2657,0,0,0],"debug":[[{"filename":"hemm.cl","line":263}]],"name":"hemm.cl:263","replace_name":"true","type":"resource"},{"children":[{"count":480,"data":[0,0,0,1280,0],"debug":[[{"filename":"hemm.cl","line":266}]],"name":"Hardened Dot Product of Size 8","type":"resource"}],"data":[0,0,0,1280,0],"debug":[[{"filename":"hemm.cl","line":266}]],"name":"hemm.cl:266","replace_name":"true","type":"resource"},{"children":[{"count":1,"data":[2.2,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":268}]],"name":"11-bit Integer Subtract","type":"resource"}],"data":[2.2,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":268}]],"name":"hemm.cl:268","replace_name":"true","type":"resource"},{"children":[{"count":1,"data":[1,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":274}]],"name":"1-bit And","type":"resource"},{"count":1,"data":[32,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":274}]],"name":"32-bit Integer Add","type":"resource"},{"count":2,"data":[18,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":274}]],"name":"32-bit Integer Compare","type":"resource"},{"count":80,"data":[2080,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":274}]],"name":"32-bit Select","type":"resource"}],"data":[2131,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":274}]],"name":"hemm.cl:274","replace_name":"true","type":"resource"},{"children":[{"count":1,"data":[1,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":280}]],"name":"1-bit And","type":"resource"},{"count":1,"data":[3,1,0,0,0],"debug":[[{"filename":"hemm.cl","line":280}]],"name":"32-bit Integer Compare","type":"resource"},{"count":1,"data":[26,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":280}]],"name":"32-bit Select","type":"resource"}],"data":[30,1,0,0,0],"debug":[[{"filename":"hemm.cl","line":280}]],"name":"hemm.cl:280","replace_name":"true","type":"resource"},{"children":[{"count":2,"data":[0.833333,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":292}]],"name":"1-bit Or","type":"resource"},{"count":1,"data":[32,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":292}]],"name":"32-bit Integer Add","type":"resource"},{"count":1,"data":[35,1,0,0,0],"debug":[[{"filename":"hemm.cl","line":292}]],"name":"32-bit Integer Compare","type":"resource"}],"data":[67.8333,1,0,0,0],"debug":[[{"filename":"hemm.cl","line":292}]],"name":"hemm.cl:292","replace_name":"true","type":"resource"},{"children":[{"count":1,"data":[3,2,0,0,0],"debug":[[{"filename":"hemm.cl","line":293}]],"name":"Channel Write","type":"resource"}],"data":[3,2,0,0,0],"debug":[[{"filename":"hemm.cl","line":293}]],"name":"hemm.cl:293","replace_name":"true","type":"resource"},{"children":[{"count":1,"data":[2.2,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":303}]],"name":"11-bit Integer Subtract","type":"resource"}],"data":[2.2,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":303}]],"name":"hemm.cl:303","replace_name":"true","type":"resource"},{"children":[{"count":1,"data":[32,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":306}]],"name":"32-bit Integer Add","type":"resource"}],"data":[32,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":306}]],"name":"hemm.cl:306","replace_name":"true","type":"resource"}],"compute_units":1,"data":[28390.995973,70746,315,1283,714],"debug":[[{"filename":"hemm.cl","line":225}]],"details":[{"text":"Number of compute units: 1","type":"text"},{"text":"Kernel attribute \'uses_global_work_offset\' not specified. Add \'__attribute__((uses_global_work_offset(0)))\' to reduce area utilization if the kernel will always be enqueued with a 0 or NULL global_work_offset argument in clEnqueueNDRangeKernel. Add \'__attribute__((uses_global_work_offset(1)))\' to hide this suggestion without affecting kernel functionality.","type":"text"},{"text":"1 compute unit.\\nKernel attribute \'uses_global_work_offset\' not specified. Add \'__attribute__((uses_global_work_offset(0)))\' to reduce area utilization if the kernel will always be enqueued with a 0 or NULL global_work_offset argument in clEnqueueNDRangeKernel. Add \'__attribute__((uses_global_work_offset(1)))\' to hide this suggestion without affecting kernel functionality.","type":"brief"}],"name":"kernel_Out","total_kernel_resources":[28391,70746,315,1283,714],"total_percent":[8.75928,4.99427,4.1401,11.6108,84.5191],"type":"function"},{"children":[{"data":[212,25,129,0,2],"details":[{"text":"Feedback+Cluster logic","type":"brief"}],"name":"Data control overhead","type":"resource"},{"data":[180,836,0,0,0],"details":[{"text":"Type: Register","type":"text"},{"text":"16 registers of width 32 and depth 1","type":"text"},{"text":"Register,\\n16 regs, 32 width by 1 depth","type":"brief"}],"name":"Coalesced Private Variables: \\n - \'aFeeder_value_shreg\' (hemm.cl:107)\\n - \'aFeeder_in_v\' (hemm.cl:109)","type":"resource"},{"data":[3466,14730,0,0,0],"details":[{"text":"Type: Register","type":"text"},{"text":"160 registers of width 32 and depth 1","type":"text"},{"text":"Register,\\n160 regs, 32 width by 1 depth","type":"brief"}],"name":"Private Variable: \\n - \'aFeeder_X_channel_array\' (hemm.cl:106)","type":"resource"},{"data":[7,36,0,0,0],"details":[{"text":"Type: Register","type":"text"},{"text":"1 register of width 32 and depth 1","type":"text"},{"text":"Register,\\n1 reg, 32 width by 1 depth","type":"brief"}],"name":"Private Variable: \\n - \'aFeeder_cycle\' (hemm.cl:110)","type":"resource"},{"data":[0,0,520,0,0],"details":[{"Additional information":[{"text":"Requested size 2097152 bytes, implemented size 2097152 bytes, stall-free, 10 reads and 10 writes. ","type":"text"},{"text":"Banked on bits 6, 7, 8, 9 into 16 separate banks.","type":"text"},{"text":"Reducing accesses to exactly one read and one write for all on-chip memory systems may increase overall system performance.","type":"text"},{"text":"Private memory implemented in on-chip block RAM.","type":"text"}],"Bank depth":"2048 words","Bank width":"512 bits","Implemented size":"2097152 bytes","Number of banks":"16 (banked on bits 6, 7, 8, 9)","Private memory":"Stall-Free","Reference":[{"links":[{"guide":"Best Practices Guide : Local Memory","link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#chn1469549457114"}],"text":"See %L for more information.","type":"text"}],"Requested size":"2097152 bytes","Total replication":1,"type":"table"},{"text":"Stall-Free,\\n2097152B requested,\\n2097152B implemented.","type":"brief"}],"name":"hemm.cl:111 (DB)","type":"resource"},{"children":[{"count":1,"data":[2501,12934,0,0,236],"debug":[[{"filename":"","line":0}]],"name":"State","type":"resource"},{"count":9,"data":[144,0,0,0,0],"debug":[[{"filename":"","line":0}]],"name":"16-bit Integer Add","type":"resource"},{"count":9,"data":[0,0,0,4.5,0],"debug":[[{"filename":"","line":0}]],"name":"llvm.fpga.dot.product","type":"resource"},{"count":160,"data":[4988,4416,0,0,0],"debug":[[{"filename":"","line":0}]],"name":"32-bit Select","type":"resource"}],"data":[7633,17350,0,4.5,236],"name":"No Source Line","type":"resource"},{"children":[{"count":16,"data":[440,128,0,0,0],"debug":[[{"filename":"hemm.cl","line":109}]],"name":"32-bit Select","type":"resource"}],"data":[440,128,0,0,0],"debug":[[{"filename":"hemm.cl","line":109}]],"name":"hemm.cl:109","replace_name":"true","type":"resource"},{"children":[{"count":1,"data":[35,1,0,0,0],"debug":[[{"filename":"hemm.cl","line":119}]],"name":"32-bit Integer Compare","type":"resource"}],"data":[35,1,0,0,0],"debug":[[{"filename":"hemm.cl","line":119}]],"name":"hemm.cl:119","replace_name":"true","type":"resource"},{"children":[{"count":1,"data":[1,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":120}]],"name":"Channel Read","type":"resource"}],"data":[1,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":120}]],"name":"hemm.cl:120","replace_name":"true","type":"resource"},{"children":[{"count":10,"data":[350,10,0,0,0],"debug":[[{"filename":"hemm.cl","line":134}]],"name":"32-bit Integer Compare","type":"resource"}],"data":[350,10,0,0,0],"debug":[[{"filename":"hemm.cl","line":134}]],"name":"hemm.cl:134","replace_name":"true","type":"resource"},{"children":[{"count":10,"data":[10,1,0,0,0],"debug":[[{"filename":"hemm.cl","line":135}]],"name":"1-bit Or","type":"resource"},{"count":11,"data":[167.5,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":135}]],"name":"16-bit Integer Add","type":"resource"},{"count":10,"data":[50,1,0,0,0],"debug":[[{"filename":"hemm.cl","line":135}]],"name":"16-bit Integer Compare","type":"resource"}],"data":[227.5,2,0,0,0],"debug":[[{"filename":"hemm.cl","line":135}]],"name":"hemm.cl:135","replace_name":"true","type":"resource"},{"children":[{"count":1,"data":[7.5,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":136}]],"name":"16-bit Integer Add","type":"resource"},{"count":20,"data":[940,300,0,0,0],"debug":[[{"filename":"hemm.cl","line":136}]],"name":"16-bit Integer Divide","type":"resource"},{"count":10,"data":[340,240,0,0,0],"debug":[[{"filename":"hemm.cl","line":136}]],"name":"Store","type":"resource"}],"data":[1287.5,540,0,0,0],"debug":[[{"filename":"hemm.cl","line":136}]],"name":"hemm.cl:136","replace_name":"true","type":"resource"},{"children":[{"count":10,"data":[350,10,0,0,0],"debug":[[{"filename":"hemm.cl","line":139}]],"name":"32-bit Integer Compare","type":"resource"}],"data":[350,10,0,0,0],"debug":[[{"filename":"hemm.cl","line":139}]],"name":"hemm.cl:139","replace_name":"true","type":"resource"},{"children":[{"count":10,"data":[2660,5210,0,0,0],"debug":[[{"filename":"hemm.cl","line":140}]],"name":"Load","type":"resource"}],"data":[2660,5210,0,0,0],"debug":[[{"filename":"hemm.cl","line":140}]],"name":"hemm.cl:140","replace_name":"true","type":"resource"},{"children":[{"count":1,"data":[3,2,0,0,0],"debug":[[{"filename":"hemm.cl","line":144}]],"name":"Channel Write","type":"resource"}],"data":[3,2,0,0,0],"debug":[[{"filename":"hemm.cl","line":144}]],"name":"hemm.cl:144","replace_name":"true","type":"resource"},{"children":[{"count":1,"data":[32,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":146}]],"name":"32-bit Integer Add","type":"resource"}],"data":[32,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":146}]],"name":"hemm.cl:146","replace_name":"true","type":"resource"}],"compute_units":1,"data":[16884,38880,649,4.5,238],"debug":[[{"filename":"hemm.cl","line":106}]],"details":[{"text":"Number of compute units: 1","type":"text"},{"text":"Max global work dimension: 0","type":"text"},{"text":"1 compute unit.\\nMax global work dimension: 0","type":"brief"}],"name":"kernel_aFeeder","total_kernel_resources":[16884,38880,649,4.5,238],"total_percent":[4.6358,2.53324,2.27528,23.9219,0.329381],"type":"function"},{"children":[{"data":[335,324,3,0,13],"details":[{"text":"Feedback+Cluster logic","type":"brief"}],"name":"Data control overhead","type":"resource"},{"data":[1338,2411,0,0,10],"details":[{"text":"Kernel dispatch logic.","type":"text"},{"text":"Kernel dispatch logic.","type":"brief"}],"name":"Function overhead","type":"resource"},{"data":[14,72,0,0,0],"details":[{"text":"Type: Register","type":"text"},{"text":"2 registers of width 32 and depth 1","type":"text"},{"text":"Register,\\n2 regs, 32 width by 1 depth","type":"brief"}],"name":"Private Variable: \\n - \'addr\' (hemm.cl:85)","type":"resource"},{"data":[14,73,0,0,0],"details":[{"text":"Type: Register","type":"text"},{"text":"1 register of width 32 and depth 1","type":"text"},{"text":"1 register of width 33 and depth 1","type":"text"},{"text":"Register,\\n1 reg, 32 width by 1 depth,\\n1 reg, 33 width by 1 depth","type":"brief"}],"name":"Private Variable: \\n - \'i\' (hemm.cl:87)","type":"resource"},{"data":[14,73,0,0,0],"details":[{"text":"Type: Register","type":"text"},{"text":"1 register of width 32 and depth 1","type":"text"},{"text":"1 register of width 33 and depth 1","type":"text"},{"text":"Register,\\n1 reg, 32 width by 1 depth,\\n1 reg, 33 width by 1 depth","type":"brief"}],"name":"Private Variable: \\n - \'j\' (hemm.cl:88)","type":"resource"},{"data":[14,73,0,0,0],"details":[{"text":"Type: Register","type":"text"},{"text":"1 register of width 32 and depth 1","type":"text"},{"text":"1 register of width 33 and depth 1","type":"text"},{"text":"Register,\\n1 reg, 32 width by 1 depth,\\n1 reg, 33 width by 1 depth","type":"brief"}],"name":"Private Variable: \\n - \'k\' (hemm.cl:89)","type":"resource"},{"data":[7,19,0,0,0],"details":[{"text":"Type: Register","type":"text"},{"text":"1 register of width 15 and depth 1","type":"text"},{"text":"Register,\\n1 reg, 15 width by 1 depth","type":"brief"}],"name":"Private Variable: \\n - \'kk_ii_iii\' (hemm.cl:90)","type":"resource"},{"children":[{"count":5,"data":[1023,7977,3,0,11],"debug":[[{"filename":"","line":0}]],"name":"State","type":"resource"},{"count":2,"data":[2,0,0,0,0],"debug":[[{"filename":"","line":0}]],"name":"1-bit And","type":"resource"},{"count":2,"data":[2,0,0,0,0],"debug":[[{"filename":"","line":0}]],"name":"1-bit Or","type":"resource"}],"data":[1027,7977,3,0,11],"name":"No Source Line","type":"resource"},{"children":[{"count":1,"data":[0,132,0,0,0],"debug":[[{"filename":"hemm.cl","line":87}]],"name":"State","type":"resource"},{"count":3,"data":[96,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":87}]],"name":"32-bit Integer Add","type":"resource"},{"count":4,"data":[140,4,0,0,0],"debug":[[{"filename":"hemm.cl","line":87}]],"name":"32-bit Integer Compare","type":"resource"},{"count":1,"data":[308,81,0,0,0],"debug":[[{"filename":"hemm.cl","line":87}]],"name":"32-bit Integer Divide","type":"resource"},{"count":3,"data":[48,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":87}]],"name":"32-bit Select","type":"resource"},{"count":4,"data":[132,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":87}]],"name":"33-bit Integer Add","type":"resource"},{"count":1,"data":[1,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":87}]],"name":"1-bit And","type":"resource"},{"count":1,"data":[11,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":87}]],"name":"33-bit Integer Compare","type":"resource"}],"data":[736,217,0,0,0],"debug":[[{"filename":"hemm.cl","line":87}]],"name":"hemm.cl:87","type":"resource"},{"children":[{"count":1,"data":[0,1,0,0,0],"debug":[[{"filename":"hemm.cl","line":88}]],"name":"State","type":"resource"},{"count":1,"data":[35,1,0,0,0],"debug":[[{"filename":"hemm.cl","line":88}]],"name":"32-bit Integer Compare","type":"resource"},{"count":2,"data":[2,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":88}]],"name":"1-bit And","type":"resource"},{"count":1,"data":[32,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":88}]],"name":"32-bit Integer Add","type":"resource"},{"count":1,"data":[33,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":88}]],"name":"33-bit Integer Add","type":"resource"},{"count":1,"data":[11,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":88}]],"name":"33-bit Integer Compare","type":"resource"}],"data":[113,2,0,0,0],"debug":[[{"filename":"hemm.cl","line":88}]],"name":"hemm.cl:88","type":"resource"},{"children":[{"count":1,"data":[0,11.5,0,0,0],"debug":[[{"filename":"hemm.cl","line":89}]],"name":"State","type":"resource"},{"count":2,"data":[42.5,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":89}]],"name":"32-bit Integer Add","type":"resource"},{"count":1,"data":[35,1,0,0,0],"debug":[[{"filename":"hemm.cl","line":89}]],"name":"32-bit Integer Compare","type":"resource"},{"count":3,"data":[2.5,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":89}]],"name":"1-bit And","type":"resource"},{"count":1,"data":[33,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":89}]],"name":"33-bit Integer Add","type":"resource"},{"count":1,"data":[11,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":89}]],"name":"33-bit Integer Compare","type":"resource"},{"count":1,"data":[0.333333,0.333333,0,0,0],"debug":[[{"filename":"hemm.cl","line":89}]],"name":"1-bit Or","type":"resource"}],"data":[124.333333,12.833333,0,0,0],"debug":[[{"filename":"hemm.cl","line":89}]],"name":"hemm.cl:89","type":"resource"},{"children":[{"count":1,"data":[0,31.5,0,0,0],"debug":[[{"filename":"hemm.cl","line":92}]],"name":"State","type":"resource"},{"count":2,"data":[42.5,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":92}]],"name":"32-bit Integer Add","type":"resource"},{"count":2,"data":[53,0,0,3,0],"debug":[[{"filename":"hemm.cl","line":92}]],"name":"32-bit Integer Multiply","type":"resource"},{"count":1,"data":[1,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":92}]],"name":"1-bit And","type":"resource"},{"count":1,"data":[0.5,0.5,0,0,0],"debug":[[{"filename":"hemm.cl","line":92}]],"name":"1-bit Or","type":"resource"},{"count":1,"data":[742,160,4,7,0],"debug":[[{"filename":"hemm.cl","line":92}]],"name":"32-bit Integer Divide","type":"resource"},{"count":1,"data":[4827,96,0,0,0],"debug":[[{"filename":"hemm.cl","line":92}]],"name":"32-bit Integer Remainder","type":"resource"},{"count":16,"data":[416,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":92}]],"name":"32-bit Select","type":"resource"},{"count":1,"data":[4,2,0,0,0],"debug":[[{"filename":"hemm.cl","line":92}]],"name":"Channel Write","type":"resource"},{"count":1,"data":[684,2470,15,0,0],"debug":[[{"filename":"hemm.cl","line":92}]],"name":"Load","type":"resource"}],"data":[6770,2760,19,10,0],"debug":[[{"filename":"hemm.cl","line":92}]],"name":"hemm.cl:92","type":"resource"},{"children":[{"count":3,"data":[67.5,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":85}]],"name":"33-bit Select","type":"resource"}],"data":[67.5,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":85}]],"name":"hemm.cl:85","replace_name":"true","type":"resource"},{"children":[{"count":2,"data":[46,1,0,0,0],"debug":[[{"filename":"hemm.cl","line":91}]],"name":"32-bit Integer Compare","type":"resource"},{"count":1,"data":[0.5,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":91}]],"name":"1-bit And","type":"resource"},{"count":2,"data":[1.333333,0.333333,0,0,0],"debug":[[{"filename":"hemm.cl","line":91}]],"name":"1-bit Or","type":"resource"},{"count":1,"data":[32,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":91}]],"name":"32-bit Or","type":"resource"}],"data":[79.833333,1.333333,0,0,0],"debug":[[{"filename":"hemm.cl","line":91}]],"name":"hemm.cl:91","replace_name":"true","type":"resource"},{"children":[{"count":1,"data":[32,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":90}]],"name":"32-bit Integer Add","type":"resource"},{"count":3,"data":[2,1,0,0,0],"debug":[[{"filename":"hemm.cl","line":90}]],"name":"1-bit And","type":"resource"},{"count":4,"data":[1.83333,0.833333,0,0,0],"debug":[[{"filename":"hemm.cl","line":90}]],"name":"1-bit Or","type":"resource"},{"count":1,"data":[15,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":90}]],"name":"15-bit Integer Add","type":"resource"},{"count":1,"data":[5,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":90}]],"name":"15-bit Integer Compare","type":"resource"},{"count":1,"data":[2,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":90}]],"name":"2-bit Select","type":"resource"}],"data":[57.83333,1.833333,0,0,0],"debug":[[{"filename":"hemm.cl","line":90}]],"name":"hemm.cl:90","replace_name":"true","type":"resource"},{"children":[{"count":1,"data":[13.5,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":94}]],"name":"33-bit Select","type":"resource"},{"count":1,"data":[32,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":94}]],"name":"32-bit Integer Add","type":"resource"}],"data":[45.5,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":94}]],"name":"hemm.cl:94","replace_name":"true","type":"resource"}],"compute_units":1,"data":[10756.999996,14016.999999,25,10,34],"debug":[[{"filename":"hemm.cl","line":85}]],"details":[{"text":"Number of compute units: 1","type":"text"},{"text":"Kernel attribute \'uses_global_work_offset\' not specified. Add \'__attribute__((uses_global_work_offset(0)))\' to reduce area utilization if the kernel will always be enqueued with a 0 or NULL global_work_offset argument in clEnqueueNDRangeKernel. Add \'__attribute__((uses_global_work_offset(1)))\' to hide this suggestion without affecting kernel functionality.","type":"text"},{"details":[{"links":[{"filename":"hemm.cl","line":90}],"text":"%L with depth 4","type":"text"}],"text":"The following loop is nested at depth greater than 3. Reducing the depth of this nested loop will save area:","type":"text"},{"text":"1 compute unit.\\nKernel attribute \'uses_global_work_offset\' not specified. Add \'__attribute__((uses_global_work_offset(0)))\' to reduce area utilization if the kernel will always be enqueued with a 0 or NULL global_work_offset argument in clEnqueueNDRangeKernel. Add \'__attribute__((uses_global_work_offset(1)))\' to hide this suggestion without affecting kernel functionality.\\n1 loop nested 3 levels deep or more.","type":"brief"}],"name":"kernel_aLoader","total_kernel_resources":[10757,14017,25,10,34],"total_percent":[2.02941,1.3386,0.820283,0.921489,0.658762],"type":"function"},{"children":[{"data":[120,27,0,0,106],"details":[{"text":"Feedback+Cluster logic","type":"brief"}],"name":"Data control overhead","type":"resource"},{"data":[180,836,0,0,0],"details":[{"text":"Type: Register","type":"text"},{"text":"16 registers of width 32 and depth 1","type":"text"},{"text":"Register,\\n16 regs, 32 width by 1 depth","type":"brief"}],"name":"Coalesced Private Variables: \\n - \'bFeeder_value_shreg\' (hemm.cl:178)\\n - \'bFeeder_in_v\' (hemm.cl:180)","type":"resource"},{"data":[1264,5424,0,0,0],"details":[{"text":"Type: Register","type":"text"},{"text":"64 registers of width 32 and depth 1","type":"text"},{"text":"Register,\\n64 regs, 32 width by 1 depth","type":"brief"}],"name":"Private Variable: \\n - \'bFeeder_Y_channel_array\' (hemm.cl:177)","type":"resource"},{"data":[7,36,0,0,0],"details":[{"text":"Type: Register","type":"text"},{"text":"1 register of width 32 and depth 1","type":"text"},{"text":"Register,\\n1 reg, 32 width by 1 depth","type":"brief"}],"name":"Private Variable: \\n - \'bFeeder_cycle\' (hemm.cl:181)","type":"resource"},{"data":[0,0,208,0,0],"details":[{"Additional information":[{"text":"Requested size 524288 bytes, implemented size 524288 bytes, stall-free, 4 reads and 4 writes. ","type":"text"},{"text":"Banked on bits 6, 7 into 4 separate banks.","type":"text"},{"text":"Reducing accesses to exactly one read and one write for all on-chip memory systems may increase overall system performance.","type":"text"},{"text":"Private memory implemented in on-chip block RAM.","type":"text"}],"Bank depth":"2048 words","Bank width":"512 bits","Implemented size":"524288 bytes","Number of banks":"4 (banked on bits 6, 7)","Private memory":"Stall-Free","Reference":[{"links":[{"guide":"Best Practices Guide : Local Memory","link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#chn1469549457114"}],"text":"See %L for more information.","type":"text"}],"Requested size":"524288 bytes","Total replication":1,"type":"table"},{"text":"Stall-Free,\\n524288B requested,\\n524288B implemented.","type":"brief"}],"name":"hemm.cl:182 (DB)","type":"resource"},{"children":[{"count":1,"data":[441,4494,0,0,64],"debug":[[{"filename":"","line":0}]],"name":"State","type":"resource"},{"count":64,"data":[1952,1536,0,0,0],"debug":[[{"filename":"","line":0}]],"name":"32-bit Select","type":"resource"}],"data":[2393,6030,0,0,64],"name":"No Source Line","type":"resource"},{"children":[{"count":16,"data":[440,128,0,0,0],"debug":[[{"filename":"hemm.cl","line":180}]],"name":"32-bit Select","type":"resource"}],"data":[440,128,0,0,0],"debug":[[{"filename":"hemm.cl","line":180}]],"name":"hemm.cl:180","replace_name":"true","type":"resource"},{"children":[{"count":1,"data":[1,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":190}]],"name":"32-bit Integer Compare","type":"resource"}],"data":[1,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":190}]],"name":"hemm.cl:190","replace_name":"true","type":"resource"},{"children":[{"count":1,"data":[1,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":191}]],"name":"Channel Read","type":"resource"}],"data":[1,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":191}]],"name":"hemm.cl:191","replace_name":"true","type":"resource"},{"children":[{"count":4,"data":[140,4,0,0,0],"debug":[[{"filename":"hemm.cl","line":205}]],"name":"32-bit Integer Compare","type":"resource"}],"data":[140,4,0,0,0],"debug":[[{"filename":"hemm.cl","line":205}]],"name":"hemm.cl:205","replace_name":"true","type":"resource"},{"children":[{"count":4,"data":[4,4,0,0,0],"debug":[[{"filename":"hemm.cl","line":206}]],"name":"1-bit Or","type":"resource"},{"count":4,"data":[128,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":206}]],"name":"32-bit Integer Add","type":"resource"},{"count":4,"data":[4,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":206}]],"name":"32-bit Integer Compare","type":"resource"}],"data":[136,4,0,0,0],"debug":[[{"filename":"hemm.cl","line":206}]],"name":"hemm.cl:206","replace_name":"true","type":"resource"},{"children":[{"count":4,"data":[4,1,0,0,0],"debug":[[{"filename":"hemm.cl","line":207}]],"name":"1-bit And","type":"resource"},{"count":4,"data":[128,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":207}]],"name":"32-bit Integer Add","type":"resource"},{"count":8,"data":[12,4,0,0,0],"debug":[[{"filename":"hemm.cl","line":207}]],"name":"32-bit Integer Compare","type":"resource"},{"count":4,"data":[136,96,0,0,0],"debug":[[{"filename":"hemm.cl","line":207}]],"name":"Store","type":"resource"}],"data":[280,101,0,0,0],"debug":[[{"filename":"hemm.cl","line":207}]],"name":"hemm.cl:207","replace_name":"true","type":"resource"},{"children":[{"count":4,"data":[140,4,0,0,0],"debug":[[{"filename":"hemm.cl","line":210}]],"name":"32-bit Integer Compare","type":"resource"}],"data":[140,4,0,0,0],"debug":[[{"filename":"hemm.cl","line":210}]],"name":"hemm.cl:210","replace_name":"true","type":"resource"},{"children":[{"count":4,"data":[1064,2084,0,0,0],"debug":[[{"filename":"hemm.cl","line":211}]],"name":"Load","type":"resource"}],"data":[1064,2084,0,0,0],"debug":[[{"filename":"hemm.cl","line":211}]],"name":"hemm.cl:211","replace_name":"true","type":"resource"},{"children":[{"count":1,"data":[3,2,0,0,0],"debug":[[{"filename":"hemm.cl","line":215}]],"name":"Channel Write","type":"resource"}],"data":[3,2,0,0,0],"debug":[[{"filename":"hemm.cl","line":215}]],"name":"hemm.cl:215","replace_name":"true","type":"resource"},{"children":[{"count":1,"data":[32,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":217}]],"name":"32-bit Integer Add","type":"resource"}],"data":[32,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":217}]],"name":"hemm.cl:217","replace_name":"true","type":"resource"}],"compute_units":1,"data":[6201,14680,208,0,170],"debug":[[{"filename":"hemm.cl","line":177}]],"details":[{"text":"Number of compute units: 1","type":"text"},{"text":"Max global work dimension: 0","type":"text"},{"text":"1 compute unit.\\nMax global work dimension: 0","type":"brief"}],"name":"kernel_bFeeder","total_kernel_resources":[6201,14680,208,0,170],"total_percent":[1.89116,1.12371,0.859082,7.66679,0],"type":"function"},{"children":[{"data":[335,324,3,0,13],"details":[{"text":"Feedback+Cluster logic","type":"brief"}],"name":"Data control overhead","type":"resource"},{"data":[1338,2411,0,0,10],"details":[{"text":"Kernel dispatch logic.","type":"text"},{"text":"Kernel dispatch logic.","type":"brief"}],"name":"Function overhead","type":"resource"},{"data":[14,72,0,0,0],"details":[{"text":"Type: Register","type":"text"},{"text":"2 registers of width 32 and depth 1","type":"text"},{"text":"Register,\\n2 regs, 32 width by 1 depth","type":"brief"}],"name":"Private Variable: \\n - \'addr\' (hemm.cl:156)","type":"resource"},{"data":[14,73,0,0,0],"details":[{"text":"Type: Register","type":"text"},{"text":"1 register of width 32 and depth 1","type":"text"},{"text":"1 register of width 33 and depth 1","type":"text"},{"text":"Register,\\n1 reg, 32 width by 1 depth,\\n1 reg, 33 width by 1 depth","type":"brief"}],"name":"Private Variable: \\n - \'i\' (hemm.cl:158)","type":"resource"},{"data":[14,73,0,0,0],"details":[{"text":"Type: Register","type":"text"},{"text":"1 register of width 32 and depth 1","type":"text"},{"text":"1 register of width 33 and depth 1","type":"text"},{"text":"Register,\\n1 reg, 32 width by 1 depth,\\n1 reg, 33 width by 1 depth","type":"brief"}],"name":"Private Variable: \\n - \'j\' (hemm.cl:159)","type":"resource"},{"data":[14,73,0,0,0],"details":[{"text":"Type: Register","type":"text"},{"text":"1 register of width 32 and depth 1","type":"text"},{"text":"1 register of width 33 and depth 1","type":"text"},{"text":"Register,\\n1 reg, 32 width by 1 depth,\\n1 reg, 33 width by 1 depth","type":"brief"}],"name":"Private Variable: \\n - \'k\' (hemm.cl:160)","type":"resource"},{"data":[7,17,0,0,0],"details":[{"text":"Type: Register","type":"text"},{"text":"1 register of width 13 and depth 1","type":"text"},{"text":"Register,\\n1 reg, 13 width by 1 depth","type":"brief"}],"name":"Private Variable: \\n - \'kk_jj_jjj\' (hemm.cl:161)","type":"resource"},{"children":[{"count":5,"data":[838,7372,3,0,0],"debug":[[{"filename":"","line":0}]],"name":"State","type":"resource"},{"count":2,"data":[2,0,0,0,0],"debug":[[{"filename":"","line":0}]],"name":"1-bit And","type":"resource"},{"count":2,"data":[2,0,0,0,0],"debug":[[{"filename":"","line":0}]],"name":"1-bit Or","type":"resource"}],"data":[842,7372,3,0,0],"name":"No Source Line","type":"resource"},{"children":[{"count":1,"data":[0,132,0,0,0],"debug":[[{"filename":"hemm.cl","line":158}]],"name":"State","type":"resource"},{"count":3,"data":[96,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":158}]],"name":"32-bit Integer Add","type":"resource"},{"count":4,"data":[140,4,0,0,0],"debug":[[{"filename":"hemm.cl","line":158}]],"name":"32-bit Integer Compare","type":"resource"},{"count":1,"data":[308,81,0,0,0],"debug":[[{"filename":"hemm.cl","line":158}]],"name":"32-bit Integer Divide","type":"resource"},{"count":3,"data":[48,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":158}]],"name":"32-bit Select","type":"resource"},{"count":4,"data":[132,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":158}]],"name":"33-bit Integer Add","type":"resource"},{"count":1,"data":[1,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":158}]],"name":"1-bit And","type":"resource"},{"count":1,"data":[11,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":158}]],"name":"33-bit Integer Compare","type":"resource"}],"data":[736,217,0,0,0],"debug":[[{"filename":"hemm.cl","line":158}]],"name":"hemm.cl:158","type":"resource"},{"children":[{"count":1,"data":[0,1,0,0,0],"debug":[[{"filename":"hemm.cl","line":159}]],"name":"State","type":"resource"},{"count":1,"data":[35,1,0,0,0],"debug":[[{"filename":"hemm.cl","line":159}]],"name":"32-bit Integer Compare","type":"resource"},{"count":2,"data":[2,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":159}]],"name":"1-bit And","type":"resource"},{"count":1,"data":[32,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":159}]],"name":"32-bit Integer Add","type":"resource"},{"count":1,"data":[33,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":159}]],"name":"33-bit Integer Add","type":"resource"},{"count":1,"data":[11,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":159}]],"name":"33-bit Integer Compare","type":"resource"}],"data":[113,2,0,0,0],"debug":[[{"filename":"hemm.cl","line":159}]],"name":"hemm.cl:159","type":"resource"},{"children":[{"count":1,"data":[0,1,0,0,0],"debug":[[{"filename":"hemm.cl","line":160}]],"name":"State","type":"resource"},{"count":1,"data":[35,1,0,0,0],"debug":[[{"filename":"hemm.cl","line":160}]],"name":"32-bit Integer Compare","type":"resource"},{"count":3,"data":[2.5,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":160}]],"name":"1-bit And","type":"resource"},{"count":1,"data":[32,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":160}]],"name":"32-bit Integer Add","type":"resource"},{"count":1,"data":[33,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":160}]],"name":"33-bit Integer Add","type":"resource"},{"count":1,"data":[11,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":160}]],"name":"33-bit Integer Compare","type":"resource"},{"count":1,"data":[0.333333,0.333333,0,0,0],"debug":[[{"filename":"hemm.cl","line":160}]],"name":"1-bit Or","type":"resource"}],"data":[113.833333,2.333333,0,0,0],"debug":[[{"filename":"hemm.cl","line":160}]],"name":"hemm.cl:160","type":"resource"},{"children":[{"count":1,"data":[0,20,0,0,0],"debug":[[{"filename":"hemm.cl","line":163}]],"name":"State","type":"resource"},{"count":1,"data":[20,0,0,1.5,0],"debug":[[{"filename":"hemm.cl","line":163}]],"name":"32-bit Integer Multiply","type":"resource"},{"count":1,"data":[1,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":163}]],"name":"1-bit And","type":"resource"},{"count":1,"data":[0.5,0.5,0,0,0],"debug":[[{"filename":"hemm.cl","line":163}]],"name":"1-bit Or","type":"resource"},{"count":1,"data":[4827,96,0,0,0],"debug":[[{"filename":"hemm.cl","line":163}]],"name":"32-bit Integer Remainder","type":"resource"},{"count":16,"data":[416,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":163}]],"name":"32-bit Select","type":"resource"},{"count":1,"data":[4,2,0,0,0],"debug":[[{"filename":"hemm.cl","line":163}]],"name":"Channel Write","type":"resource"},{"count":1,"data":[684,2470,15,0,0],"debug":[[{"filename":"hemm.cl","line":163}]],"name":"Load","type":"resource"}],"data":[5952.5,2588.5,15,1.5,0],"debug":[[{"filename":"hemm.cl","line":163}]],"name":"hemm.cl:163","type":"resource"},{"children":[{"count":3,"data":[67.5,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":156}]],"name":"33-bit Select","type":"resource"}],"data":[67.5,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":156}]],"name":"hemm.cl:156","replace_name":"true","type":"resource"},{"children":[{"count":2,"data":[46,1,0,0,0],"debug":[[{"filename":"hemm.cl","line":162}]],"name":"32-bit Integer Compare","type":"resource"},{"count":1,"data":[0.5,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":162}]],"name":"1-bit And","type":"resource"},{"count":2,"data":[1.333333,0.333333,0,0,0],"debug":[[{"filename":"hemm.cl","line":162}]],"name":"1-bit Or","type":"resource"},{"count":1,"data":[32,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":162}]],"name":"32-bit Or","type":"resource"}],"data":[79.833333,1.333333,0,0,0],"debug":[[{"filename":"hemm.cl","line":162}]],"name":"hemm.cl:162","replace_name":"true","type":"resource"},{"children":[{"count":1,"data":[32,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":161}]],"name":"32-bit Integer Add","type":"resource"},{"count":3,"data":[2,1,0,0,0],"debug":[[{"filename":"hemm.cl","line":161}]],"name":"1-bit And","type":"resource"},{"count":4,"data":[1.83333,0.833333,0,0,0],"debug":[[{"filename":"hemm.cl","line":161}]],"name":"1-bit Or","type":"resource"},{"count":1,"data":[13,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":161}]],"name":"13-bit Integer Add","type":"resource"},{"count":1,"data":[4,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":161}]],"name":"13-bit Integer Compare","type":"resource"},{"count":1,"data":[2,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":161}]],"name":"2-bit Select","type":"resource"}],"data":[54.83333,1.833333,0,0,0],"debug":[[{"filename":"hemm.cl","line":161}]],"name":"hemm.cl:161","replace_name":"true","type":"resource"},{"children":[{"count":1,"data":[13.5,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":165}]],"name":"33-bit Select","type":"resource"},{"count":1,"data":[32,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":165}]],"name":"32-bit Integer Add","type":"resource"}],"data":[45.5,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":165}]],"name":"hemm.cl:165","replace_name":"true","type":"resource"}],"compute_units":1,"data":[9740.999996,13227.999999,21,1.5,23],"debug":[[{"filename":"hemm.cl","line":156}]],"details":[{"text":"Number of compute units: 1","type":"text"},{"text":"Kernel attribute \'uses_global_work_offset\' not specified. Add \'__attribute__((uses_global_work_offset(0)))\' to reduce area utilization if the kernel will always be enqueued with a 0 or NULL global_work_offset argument in clEnqueueNDRangeKernel. Add \'__attribute__((uses_global_work_offset(1)))\' to hide this suggestion without affecting kernel functionality.","type":"text"},{"details":[{"links":[{"filename":"hemm.cl","line":161}],"text":"%L with depth 4","type":"text"}],"text":"The following loop is nested at depth greater than 3. Reducing the depth of this nested loop will save area:","type":"text"},{"text":"1 compute unit.\\nKernel attribute \'uses_global_work_offset\' not specified. Add \'__attribute__((uses_global_work_offset(0)))\' to reduce area utilization if the kernel will always be enqueued with a 0 or NULL global_work_offset argument in clEnqueueNDRangeKernel. Add \'__attribute__((uses_global_work_offset(1)))\' to hide this suggestion without affecting kernel functionality.\\n1 loop nested 3 levels deep or more.","type":"brief"}],"name":"kernel_bLoader","total_kernel_resources":[9741,13228,21,1.5,23],"total_percent":[1.85682,1.19394,0.77411,0.774051,0.131752],"type":"function"},{"children":[{"data":[149,137,0,0,13],"details":[{"text":"Feedback+Cluster logic","type":"brief"}],"name":"Data control overhead","type":"resource"},{"data":[1338,2411,0,0,10],"details":[{"text":"Kernel dispatch logic.","type":"text"},{"text":"Kernel dispatch logic.","type":"brief"}],"name":"Function overhead","type":"resource"},{"data":[14,72,0,0,0],"details":[{"text":"Type: Register","type":"text"},{"text":"2 registers of width 32 and depth 1","type":"text"},{"text":"Register,\\n2 regs, 32 width by 1 depth","type":"brief"}],"name":"Private Variable: \\n - \'addr\' (hemm.cl:316)","type":"resource"},{"data":[7,37,0,0,0],"details":[{"text":"Type: Register","type":"text"},{"text":"1 register of width 33 and depth 1","type":"text"},{"text":"Register,\\n1 reg, 33 width by 1 depth","type":"brief"}],"name":"Private Variable: \\n - \'i\' (hemm.cl:318)","type":"resource"},{"data":[7,19,0,0,0],"details":[{"text":"Type: Register","type":"text"},{"text":"1 register of width 15 and depth 1","type":"text"},{"text":"Register,\\n1 reg, 15 width by 1 depth","type":"brief"}],"name":"Private Variable: \\n - \'iii_ii_jj\' (hemm.cl:320)","type":"resource"},{"data":[7,37,0,0,0],"details":[{"text":"Type: Register","type":"text"},{"text":"1 register of width 33 and depth 1","type":"text"},{"text":"Register,\\n1 reg, 33 width by 1 depth","type":"brief"}],"name":"Private Variable: \\n - \'j\' (hemm.cl:319)","type":"resource"},{"children":[{"count":3,"data":[26,310,0,0,0],"debug":[[{"filename":"","line":0}]],"name":"State","type":"resource"},{"count":1,"data":[1,0,0,0,0],"debug":[[{"filename":"","line":0}]],"name":"1-bit And","type":"resource"},{"count":1,"data":[1,0,0,0,0],"debug":[[{"filename":"","line":0}]],"name":"1-bit Or","type":"resource"}],"data":[28,310,0,0,0],"name":"No Source Line","type":"resource"},{"children":[{"count":1,"data":[0,67,0,0,0],"debug":[[{"filename":"hemm.cl","line":318}]],"name":"State","type":"resource"},{"count":2,"data":[64,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":318}]],"name":"32-bit Integer Add","type":"resource"},{"count":3,"data":[105,3,0,0,0],"debug":[[{"filename":"hemm.cl","line":318}]],"name":"32-bit Integer Compare","type":"resource"},{"count":1,"data":[308,55,0,0,0],"debug":[[{"filename":"hemm.cl","line":318}]],"name":"32-bit Integer Divide","type":"resource"},{"count":2,"data":[32,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":318}]],"name":"32-bit Select","type":"resource"},{"count":3,"data":[99,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":318}]],"name":"33-bit Integer Add","type":"resource"},{"count":1,"data":[1,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":318}]],"name":"1-bit And","type":"resource"},{"count":1,"data":[11,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":318}]],"name":"33-bit Integer Compare","type":"resource"}],"data":[620,125,0,0,0],"debug":[[{"filename":"hemm.cl","line":318}]],"name":"hemm.cl:318","type":"resource"},{"children":[{"count":1,"data":[0,1,0,0,0],"debug":[[{"filename":"hemm.cl","line":319}]],"name":"State","type":"resource"},{"count":2,"data":[2,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":319}]],"name":"1-bit And","type":"resource"},{"count":1,"data":[35,1,0,0,0],"debug":[[{"filename":"hemm.cl","line":319}]],"name":"32-bit Integer Compare","type":"resource"},{"count":1,"data":[33,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":319}]],"name":"33-bit Integer Add","type":"resource"},{"count":1,"data":[11,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":319}]],"name":"33-bit Integer Compare","type":"resource"},{"count":1,"data":[0.5,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":319}]],"name":"1-bit Or","type":"resource"}],"data":[81.5,2,0,0,0],"debug":[[{"filename":"hemm.cl","line":319}]],"name":"hemm.cl:319","type":"resource"},{"children":[{"count":2,"data":[54,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":316}]],"name":"33-bit Select","type":"resource"}],"data":[54,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":316}]],"name":"hemm.cl:316","replace_name":"true","type":"resource"},{"children":[{"count":1,"data":[32,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":320}]],"name":"32-bit Integer Add","type":"resource"},{"count":3,"data":[2,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":320}]],"name":"1-bit And","type":"resource"},{"count":3,"data":[1.5,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":320}]],"name":"1-bit Or","type":"resource"},{"count":1,"data":[15,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":320}]],"name":"15-bit Integer Add","type":"resource"},{"count":1,"data":[5,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":320}]],"name":"15-bit Integer Compare","type":"resource"},{"count":1,"data":[2,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":320}]],"name":"2-bit Select","type":"resource"}],"data":[57.5,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":320}]],"name":"hemm.cl:320","replace_name":"true","type":"resource"},{"children":[{"count":1,"data":[1,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":321}]],"name":"Channel Read","type":"resource"},{"count":1,"data":[349,2436,0,0,31],"debug":[[{"filename":"hemm.cl","line":321}]],"name":"Store","type":"resource"}],"data":[350,2436,0,0,31],"debug":[[{"filename":"hemm.cl","line":321}]],"name":"hemm.cl:321","replace_name":"true","type":"resource"},{"children":[{"count":1,"data":[32,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":322}]],"name":"32-bit Integer Add","type":"resource"}],"data":[32,0,0,0,0],"debug":[[{"filename":"hemm.cl","line":322}]],"name":"hemm.cl:322","replace_name":"true","type":"resource"}],"compute_units":1,"data":[2745,5586,0,0,54],"debug":[[{"filename":"hemm.cl","line":316}]],"details":[{"text":"Number of compute units: 1","type":"text"},{"text":"Kernel attribute \'uses_global_work_offset\' not specified. Add \'__attribute__((uses_global_work_offset(0)))\' to reduce area utilization if the kernel will always be enqueued with a 0 or NULL global_work_offset argument in clEnqueueNDRangeKernel. Add \'__attribute__((uses_global_work_offset(1)))\' to hide this suggestion without affecting kernel functionality.","type":"text"},{"text":"1 compute unit.\\nKernel attribute \'uses_global_work_offset\' not specified. Add \'__attribute__((uses_global_work_offset(0)))\' to reduce area utilization if the kernel will always be enqueued with a 0 or NULL global_work_offset argument in clEnqueueNDRangeKernel. Add \'__attribute__((uses_global_work_offset(1)))\' to hide this suggestion without affecting kernel functionality.","type":"brief"}],"name":"kernel_unloader","total_kernel_resources":[2745,5586,0,0,54],"total_percent":[0.736534,0.447683,0.326896,0,0],"type":"function"}],"columns":["","ALUTs","FFs","RAMs","DSPs","MLABs","Details"],"data":[84890.995965,197533.999998,1511,1299,1243],"debug_enabled":"true","max_resources":[854400,1708800,2713,1518,42720],"name":"Kernel System","total":[219391,369986,1908,1299,1243],"total_percent":[47.8876,28.5874,21.6518,70.328,85.5731],"type":"module"}';
var mavJSON='{"nodes":[{"type":"kernel", "id":2, "name":"kernel_aFeeder", "children":[{"type":"bb", "id":3, "name":"kernel_aFeeder.B0", "details":[{"type":"table", "Latency":"2"}]}, {"type":"bb", "id":4, "name":"kernel_aFeeder.B1", "children":[{"type":"inst", "id":5, "name":"Channel Read", "debug":[[{"filename":"hemm.cl", "line":120}]], "details":[{"type":"table", "Width":"512 bits", "Depth":"256", "Stall-free":"No", "Start Cycle":"5", "Latency":"0", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Channels", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#qah1476410829821"}]}]}]}, {"type":"inst", "id":7, "name":"Store", "debug":[[{"filename":"hemm.cl", "line":136}]], "details":[{"type":"table", "Width":"512 bits", "Type":"Pipelined never-stall", "Stall-free":"Yes", "Stores to":"DB", "Start Cycle":"11", "Latency":"1", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":8, "name":"Load", "debug":[[{"filename":"hemm.cl", "line":140}]], "details":[{"type":"table", "Width":"512 bits", "Type":"Pipelined never-stall", "Stall-free":"Yes", "Loads from":"DB", "Start Cycle":"12", "Latency":"3", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":9, "name":"Store", "debug":[[{"filename":"hemm.cl", "line":136}]], "details":[{"type":"table", "Width":"512 bits", "Type":"Pipelined never-stall", "Stall-free":"Yes", "Stores to":"DB", "Start Cycle":"13", "Latency":"1", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":10, "name":"Load", "debug":[[{"filename":"hemm.cl", "line":140}]], "details":[{"type":"table", "Width":"512 bits", "Type":"Pipelined never-stall", "Stall-free":"Yes", "Loads from":"DB", "Start Cycle":"14", "Latency":"3", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":11, "name":"Store", "debug":[[{"filename":"hemm.cl", "line":136}]], "details":[{"type":"table", "Width":"512 bits", "Type":"Pipelined never-stall", "Stall-free":"Yes", "Stores to":"DB", "Start Cycle":"15", "Latency":"1", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":12, "name":"Load", "debug":[[{"filename":"hemm.cl", "line":140}]], "details":[{"type":"table", "Width":"512 bits", "Type":"Pipelined never-stall", "Stall-free":"Yes", "Loads from":"DB", "Start Cycle":"16", "Latency":"3", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":13, "name":"Store", "debug":[[{"filename":"hemm.cl", "line":136}]], "details":[{"type":"table", "Width":"512 bits", "Type":"Pipelined never-stall", "Stall-free":"Yes", "Stores to":"DB", "Start Cycle":"17", "Latency":"1", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":14, "name":"Load", "debug":[[{"filename":"hemm.cl", "line":140}]], "details":[{"type":"table", "Width":"512 bits", "Type":"Pipelined never-stall", "Stall-free":"Yes", "Loads from":"DB", "Start Cycle":"18", "Latency":"3", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":15, "name":"Store", "debug":[[{"filename":"hemm.cl", "line":136}]], "details":[{"type":"table", "Width":"512 bits", "Type":"Pipelined never-stall", "Stall-free":"Yes", "Stores to":"DB", "Start Cycle":"19", "Latency":"1", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":16, "name":"Load", "debug":[[{"filename":"hemm.cl", "line":140}]], "details":[{"type":"table", "Width":"512 bits", "Type":"Pipelined never-stall", "Stall-free":"Yes", "Loads from":"DB", "Start Cycle":"20", "Latency":"3", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":17, "name":"Store", "debug":[[{"filename":"hemm.cl", "line":136}]], "details":[{"type":"table", "Width":"512 bits", "Type":"Pipelined never-stall", "Stall-free":"Yes", "Stores to":"DB", "Start Cycle":"21", "Latency":"1", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":18, "name":"Load", "debug":[[{"filename":"hemm.cl", "line":140}]], "details":[{"type":"table", "Width":"512 bits", "Type":"Pipelined never-stall", "Stall-free":"Yes", "Loads from":"DB", "Start Cycle":"22", "Latency":"3", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":19, "name":"Store", "debug":[[{"filename":"hemm.cl", "line":136}]], "details":[{"type":"table", "Width":"512 bits", "Type":"Pipelined never-stall", "Stall-free":"Yes", "Stores to":"DB", "Start Cycle":"23", "Latency":"1", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":20, "name":"Load", "debug":[[{"filename":"hemm.cl", "line":140}]], "details":[{"type":"table", "Width":"512 bits", "Type":"Pipelined never-stall", "Stall-free":"Yes", "Loads from":"DB", "Start Cycle":"24", "Latency":"3", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":21, "name":"Store", "debug":[[{"filename":"hemm.cl", "line":136}]], "details":[{"type":"table", "Width":"512 bits", "Type":"Pipelined never-stall", "Stall-free":"Yes", "Stores to":"DB", "Start Cycle":"25", "Latency":"1", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":22, "name":"Load", "debug":[[{"filename":"hemm.cl", "line":140}]], "details":[{"type":"table", "Width":"512 bits", "Type":"Pipelined never-stall", "Stall-free":"Yes", "Loads from":"DB", "Start Cycle":"26", "Latency":"3", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":23, "name":"Store", "debug":[[{"filename":"hemm.cl", "line":136}]], "details":[{"type":"table", "Width":"512 bits", "Type":"Pipelined never-stall", "Stall-free":"Yes", "Stores to":"DB", "Start Cycle":"27", "Latency":"1", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":24, "name":"Load", "debug":[[{"filename":"hemm.cl", "line":140}]], "details":[{"type":"table", "Width":"512 bits", "Type":"Pipelined never-stall", "Stall-free":"Yes", "Loads from":"DB", "Start Cycle":"28", "Latency":"3", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":25, "name":"Store", "debug":[[{"filename":"hemm.cl", "line":136}]], "details":[{"type":"table", "Width":"512 bits", "Type":"Pipelined never-stall", "Stall-free":"Yes", "Stores to":"DB", "Start Cycle":"29", "Latency":"1", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":26, "name":"Load", "debug":[[{"filename":"hemm.cl", "line":140}]], "details":[{"type":"table", "Width":"512 bits", "Type":"Pipelined never-stall", "Stall-free":"Yes", "Loads from":"DB", "Start Cycle":"30", "Latency":"3", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":27, "name":"Channel Write", "debug":[[{"filename":"hemm.cl", "line":144}]], "details":[{"type":"table", "Width":"5120 bits", "Depth":"256", "Stall-free":"No", "Start Cycle":"37", "Latency":"0", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Channels", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#qah1476410829821"}]}]}]}, {"type":"inst", "id":29, "name":"Loop Input", "debug":[[{"filename":"hemm.cl", "line":118}]], "details":[{"type":"table", "Start Cycle":"0", "Latency":"1", "Loops To":"30"}]}, {"type":"inst", "id":30, "name":"Loop End", "details":[{"type":"table", "Start Cycle":"37", "Latency":"1"}]}], "details":[{"type":"table", "Latency":"37", "II":"1", "Subloops":"No", "Pipelined":"Yes", "Fmax Bottlenecks":"No", "Loop Info":""}]}, {"type":"memtype", "id":31, "name":"Local Memory", "children":[{"type":"memsys", "id":32, "name":"DB", "debug":[[{"filename":"hemm.cl", "line":111}]], "details":[{"type":"table", "details":[{"type":"brief", "text":"2097152B requested\\n2097152B implemented"}], "Requested size":"2097152 bytes", "Implemented size":"2097152 bytes", "Number of banks":"16", "Bank width":"512 bits", "Bank depth":"2048 words", "Total replication":"1", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Local Memory", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#chn1469549457114"}]}]}]}]}]}, {"type":"kernel", "id":69, "name":"kernel_bFeeder", "children":[{"type":"bb", "id":70, "name":"kernel_bFeeder.B0", "details":[{"type":"table", "Latency":"2"}]}, {"type":"bb", "id":71, "name":"kernel_bFeeder.B1", "children":[{"type":"inst", "id":72, "name":"Channel Read", "debug":[[{"filename":"hemm.cl", "line":191}]], "details":[{"type":"table", "Width":"512 bits", "Depth":"256", "Stall-free":"No", "Start Cycle":"8", "Latency":"0", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Channels", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#qah1476410829821"}]}]}]}, {"type":"inst", "id":74, "name":"Store", "debug":[[{"filename":"hemm.cl", "line":207}]], "details":[{"type":"table", "Width":"512 bits", "Type":"Pipelined never-stall", "Stall-free":"Yes", "Stores to":"DB", "Start Cycle":"13", "Latency":"1", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":75, "name":"Load", "debug":[[{"filename":"hemm.cl", "line":211}]], "details":[{"type":"table", "Width":"512 bits", "Type":"Pipelined never-stall", "Stall-free":"Yes", "Loads from":"DB", "Start Cycle":"14", "Latency":"3", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":76, "name":"Store", "debug":[[{"filename":"hemm.cl", "line":207}]], "details":[{"type":"table", "Width":"512 bits", "Type":"Pipelined never-stall", "Stall-free":"Yes", "Stores to":"DB", "Start Cycle":"15", "Latency":"1", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":77, "name":"Load", "debug":[[{"filename":"hemm.cl", "line":211}]], "details":[{"type":"table", "Width":"512 bits", "Type":"Pipelined never-stall", "Stall-free":"Yes", "Loads from":"DB", "Start Cycle":"16", "Latency":"3", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":78, "name":"Store", "debug":[[{"filename":"hemm.cl", "line":207}]], "details":[{"type":"table", "Width":"512 bits", "Type":"Pipelined never-stall", "Stall-free":"Yes", "Stores to":"DB", "Start Cycle":"17", "Latency":"1", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":79, "name":"Load", "debug":[[{"filename":"hemm.cl", "line":211}]], "details":[{"type":"table", "Width":"512 bits", "Type":"Pipelined never-stall", "Stall-free":"Yes", "Loads from":"DB", "Start Cycle":"18", "Latency":"3", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":80, "name":"Store", "debug":[[{"filename":"hemm.cl", "line":207}]], "details":[{"type":"table", "Width":"512 bits", "Type":"Pipelined never-stall", "Stall-free":"Yes", "Stores to":"DB", "Start Cycle":"19", "Latency":"1", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":81, "name":"Load", "debug":[[{"filename":"hemm.cl", "line":211}]], "details":[{"type":"table", "Width":"512 bits", "Type":"Pipelined never-stall", "Stall-free":"Yes", "Loads from":"DB", "Start Cycle":"20", "Latency":"3", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":82, "name":"Channel Write", "debug":[[{"filename":"hemm.cl", "line":215}]], "details":[{"type":"table", "Width":"2048 bits", "Depth":"256", "Stall-free":"No", "Start Cycle":"27", "Latency":"0", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Channels", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#qah1476410829821"}]}]}]}, {"type":"inst", "id":84, "name":"Loop Input", "debug":[[{"filename":"hemm.cl", "line":189}]], "details":[{"type":"table", "Start Cycle":"0", "Latency":"1", "Loops To":"85"}]}, {"type":"inst", "id":85, "name":"Loop End", "details":[{"type":"table", "Start Cycle":"27", "Latency":"1"}]}], "details":[{"type":"table", "Latency":"27", "II":"1", "Subloops":"No", "Pipelined":"Yes", "Fmax Bottlenecks":"No", "Loop Info":""}]}, {"type":"memtype", "id":86, "name":"Local Memory", "children":[{"type":"memsys", "id":87, "name":"DB", "debug":[[{"filename":"hemm.cl", "line":182}]], "details":[{"type":"table", "details":[{"type":"brief", "text":"524288B requested\\n524288B implemented"}], "Requested size":"524288 bytes", "Implemented size":"524288 bytes", "Number of banks":"4", "Bank width":"512 bits", "Bank depth":"2048 words", "Total replication":"1", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Local Memory", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#chn1469549457114"}]}]}]}]}]}, {"type":"kernel", "id":100, "name":"kernel_Out", "children":[{"type":"bb", "id":101, "name":"kernel_Out.B0", "details":[{"type":"table", "Latency":"15"}]}, {"type":"bb", "id":102, "name":"kernel_Out.B1", "details":[{"type":"table", "Latency":"5", "II":"1", "Subloops":"Yes", "Pipelined":"Yes", "Fmax Bottlenecks":"No", "Loop Info":"Entry to loop. ", "Loops To":"105"}]}, {"type":"bb", "id":103, "name":"kernel_Out.B2", "details":[{"type":"table", "Latency":"0"}]}, {"type":"bb", "id":104, "name":"kernel_Out.B3", "children":[{"type":"inst", "id":106, "name":"Channel Read", "debug":[[{"filename":"hemm.cl", "line":252}]], "details":[{"type":"table", "Width":"2048 bits", "Depth":"256", "Stall-free":"No", "Start Cycle":"56", "Latency":"0", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Channels", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#qah1476410829821"}]}]}]}, {"type":"inst", "id":107, "name":"Channel Read", "debug":[[{"filename":"hemm.cl", "line":253}]], "details":[{"type":"table", "Width":"5120 bits", "Depth":"256", "Stall-free":"No", "Start Cycle":"56", "Latency":"0", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Channels", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#qah1476410829821"}]}]}]}, {"type":"inst", "id":108, "name":"Channel Write", "debug":[[{"filename":"hemm.cl", "line":293}]], "details":[{"type":"table", "Width":"256 bits", "Depth":"256", "Stall-free":"No", "Start Cycle":"99", "Latency":"0", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Channels", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#qah1476410829821"}]}]}]}, {"type":"inst", "id":110, "name":"Loop Input", "debug":[[{"filename":"hemm.cl", "line":238}]], "details":[{"type":"table", "Start Cycle":"0", "Latency":"1", "Loops To":"111"}]}, {"type":"inst", "id":111, "name":"Loop End", "details":[{"type":"table", "Start Cycle":"99", "Latency":"1"}]}], "details":[{"type":"table", "Latency":"99", "II":"1", "Subloops":"No", "Pipelined":"Yes", "Fmax Bottlenecks":"No", "Loop Info":""}]}, {"type":"bb", "id":105, "name":"kernel_Out.B4", "details":[{"type":"table", "Latency":"0", "II":"1", "Subloops":"Yes", "Pipelined":"Yes", "Fmax Bottlenecks":"No", "Loop Info":"Exit which branches back to loop. "}]}]}, {"type":"kernel", "id":112, "name":"kernel_aLoader", "children":[{"type":"bb", "id":113, "name":"kernel_aLoader.B0", "details":[{"type":"table", "Latency":"9"}]}, {"type":"bb", "id":114, "name":"kernel_aLoader.B1", "details":[{"type":"table", "Latency":"5", "II":"1", "Subloops":"Yes", "Pipelined":"Yes", "Fmax Bottlenecks":"No", "Loop Info":"Entry to loop. ", "Loops To":"117"}]}, {"type":"bb", "id":115, "name":"kernel_aLoader.B2", "details":[{"type":"table", "Latency":"0"}]}, {"type":"bb", "id":116, "name":"kernel_aLoader.B3", "details":[{"type":"table", "Latency":"5", "II":"1", "Subloops":"Yes", "Pipelined":"Yes", "Fmax Bottlenecks":"No", "Loop Info":"Entry to loop. ", "Loops To":"119"}]}, {"type":"bb", "id":117, "name":"kernel_aLoader.B4", "details":[{"type":"table", "Latency":"0", "II":"1", "Subloops":"Yes", "Pipelined":"Yes", "Fmax Bottlenecks":"No", "Loop Info":"Exit which branches back to loop. "}]}, {"type":"bb", "id":118, "name":"kernel_aLoader.B5", "details":[{"type":"table", "Latency":"6", "II":"1", "Subloops":"Yes", "Pipelined":"Yes", "Fmax Bottlenecks":"No", "Loop Info":"Entry to loop. ", "Loops To":"120"}]}, {"type":"bb", "id":119, "name":"kernel_aLoader.B6", "details":[{"type":"table", "Latency":"0", "II":"1", "Subloops":"Yes", "Pipelined":"Yes", "Fmax Bottlenecks":"No", "Loop Info":"Exit which branches back to loop. "}]}, {"type":"bb", "id":120, "name":"kernel_aLoader.B7", "details":[{"type":"table", "Latency":"0", "II":"1", "Subloops":"Yes", "Pipelined":"Yes", "Fmax Bottlenecks":"No", "Loop Info":"Exit which branches back to loop. "}]}, {"type":"bb", "id":121, "name":"kernel_aLoader.B8", "children":[{"type":"inst", "id":122, "name":"Load", "debug":[[{"filename":"hemm.cl", "line":92}]], "details":[{"type":"table", "Width":"512 bits", "Type":"Burst-coalesced", "Stall-free":"No", "Start Cycle":"56", "Latency":"127", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":123, "name":"Channel Write", "debug":[[{"filename":"hemm.cl", "line":92}]], "details":[{"type":"table", "Width":"512 bits", "Depth":"256", "Stall-free":"No", "Start Cycle":"184", "Latency":"0", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Channels", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#qah1476410829821"}]}]}]}, {"type":"inst", "id":124, "name":"Loop Input", "debug":[[{"filename":"hemm.cl", "line":90}]], "details":[{"type":"table", "Start Cycle":"0", "Latency":"1", "Loops To":"125"}]}, {"type":"inst", "id":125, "name":"Loop End", "details":[{"type":"table", "Start Cycle":"184", "Latency":"1"}]}], "details":[{"type":"table", "Latency":"184", "II":"1", "Subloops":"No", "Pipelined":"Yes", "Fmax Bottlenecks":"No", "Loop Info":""}]}]}, {"type":"kernel", "id":127, "name":"kernel_bLoader", "children":[{"type":"bb", "id":128, "name":"kernel_bLoader.B0", "details":[{"type":"table", "Latency":"9"}]}, {"type":"bb", "id":129, "name":"kernel_bLoader.B1", "details":[{"type":"table", "Latency":"5", "II":"1", "Subloops":"Yes", "Pipelined":"Yes", "Fmax Bottlenecks":"No", "Loop Info":"Entry to loop. ", "Loops To":"132"}]}, {"type":"bb", "id":130, "name":"kernel_bLoader.B2", "details":[{"type":"table", "Latency":"0"}]}, {"type":"bb", "id":131, "name":"kernel_bLoader.B3", "details":[{"type":"table", "Latency":"5", "II":"1", "Subloops":"Yes", "Pipelined":"Yes", "Fmax Bottlenecks":"No", "Loop Info":"Entry to loop. ", "Loops To":"134"}]}, {"type":"bb", "id":132, "name":"kernel_bLoader.B4", "details":[{"type":"table", "Latency":"0", "II":"1", "Subloops":"Yes", "Pipelined":"Yes", "Fmax Bottlenecks":"No", "Loop Info":"Exit which branches back to loop. "}]}, {"type":"bb", "id":133, "name":"kernel_bLoader.B5", "details":[{"type":"table", "Latency":"6", "II":"1", "Subloops":"Yes", "Pipelined":"Yes", "Fmax Bottlenecks":"No", "Loop Info":"Entry to loop. ", "Loops To":"135"}]}, {"type":"bb", "id":134, "name":"kernel_bLoader.B6", "details":[{"type":"table", "Latency":"0", "II":"1", "Subloops":"Yes", "Pipelined":"Yes", "Fmax Bottlenecks":"No", "Loop Info":"Exit which branches back to loop. "}]}, {"type":"bb", "id":135, "name":"kernel_bLoader.B7", "details":[{"type":"table", "Latency":"0", "II":"1", "Subloops":"Yes", "Pipelined":"Yes", "Fmax Bottlenecks":"No", "Loop Info":"Exit which branches back to loop. "}]}, {"type":"bb", "id":136, "name":"kernel_bLoader.B8", "children":[{"type":"inst", "id":137, "name":"Load", "debug":[[{"filename":"hemm.cl", "line":163}]], "details":[{"type":"table", "Width":"512 bits", "Type":"Burst-coalesced", "Stall-free":"No", "Start Cycle":"55", "Latency":"127", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":138, "name":"Channel Write", "debug":[[{"filename":"hemm.cl", "line":163}]], "details":[{"type":"table", "Width":"512 bits", "Depth":"256", "Stall-free":"No", "Start Cycle":"183", "Latency":"0", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Channels", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#qah1476410829821"}]}]}]}, {"type":"inst", "id":139, "name":"Loop Input", "debug":[[{"filename":"hemm.cl", "line":161}]], "details":[{"type":"table", "Start Cycle":"0", "Latency":"1", "Loops To":"140"}]}, {"type":"inst", "id":140, "name":"Loop End", "details":[{"type":"table", "Start Cycle":"183", "Latency":"1"}]}], "details":[{"type":"table", "Latency":"183", "II":"1", "Subloops":"No", "Pipelined":"Yes", "Fmax Bottlenecks":"No", "Loop Info":""}]}]}, {"type":"kernel", "id":141, "name":"kernel_unloader", "children":[{"type":"bb", "id":142, "name":"kernel_unloader.B0", "details":[{"type":"table", "Latency":"9"}]}, {"type":"bb", "id":143, "name":"kernel_unloader.B1", "details":[{"type":"table", "Latency":"4", "II":"1", "Subloops":"Yes", "Pipelined":"Yes", "Fmax Bottlenecks":"No", "Loop Info":"Entry to loop. ", "Loops To":"146"}]}, {"type":"bb", "id":144, "name":"kernel_unloader.B2", "details":[{"type":"table", "Latency":"0"}]}, {"type":"bb", "id":145, "name":"kernel_unloader.B3", "details":[{"type":"table", "Latency":"5", "II":"1", "Subloops":"Yes", "Pipelined":"Yes", "Fmax Bottlenecks":"No", "Loop Info":"Entry to loop. ", "Loops To":"147"}]}, {"type":"bb", "id":146, "name":"kernel_unloader.B4", "details":[{"type":"table", "Latency":"0", "II":"1", "Subloops":"Yes", "Pipelined":"Yes", "Fmax Bottlenecks":"No", "Loop Info":"Exit which branches back to loop. "}]}, {"type":"bb", "id":147, "name":"kernel_unloader.B5", "details":[{"type":"table", "Latency":"0", "II":"1", "Subloops":"Yes", "Pipelined":"Yes", "Fmax Bottlenecks":"No", "Loop Info":"Exit which branches back to loop. "}]}, {"type":"bb", "id":148, "name":"kernel_unloader.B6", "children":[{"type":"inst", "id":149, "name":"Channel Read", "debug":[[{"filename":"hemm.cl", "line":321}]], "details":[{"type":"table", "Width":"256 bits", "Depth":"256", "Stall-free":"No", "Start Cycle":"10", "Latency":"0", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Channels", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#qah1476410829821"}]}]}]}, {"type":"inst", "id":150, "name":"Store", "debug":[[{"filename":"hemm.cl", "line":321}]], "details":[{"type":"table", "Width":"256 bits", "Type":"Burst-coalesced", "Stall-free":"No", "Start Cycle":"10", "Latency":"2", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":151, "name":"Loop Input", "debug":[[{"filename":"hemm.cl", "line":320}]], "details":[{"type":"table", "Start Cycle":"0", "Latency":"1", "Loops To":"152"}]}, {"type":"inst", "id":152, "name":"Loop End", "details":[{"type":"table", "Start Cycle":"12", "Latency":"1"}]}], "details":[{"type":"table", "Latency":"12", "II":"1", "Subloops":"No", "Pipelined":"Yes", "Fmax Bottlenecks":"No", "Loop Info":""}]}]}, {"type":"kernel", "id":153, "name":"Intel_Internal_Collect_Autorun_Profiling", "children":[{"type":"bb", "id":154, "name":"Intel_Internal_Collect_Autorun_Profiling.B0", "details":[{"type":"table", "Latency":"1"}]}]}, {"type":"memtype", "id":1, "name":"Global Memory", "children":[{"type":"memsys", "id":126, "name":"DDR", "details":[{"type":"table", "Number of banks":"2"}]}]}, {"type":"channel", "id":109, "name":"Out_unloader_channel", "debug":[[{"filename":"hemm.cl", "line":221}]], "details":[{"type":"table", "Width":"256 bits", "Depth":"256"}]}, {"type":"channel", "id":28, "name":"aFeeder_X_channel", "debug":[[{"filename":"hemm.cl", "line":104}]], "details":[{"type":"table", "Width":"5120 bits", "Depth":"256"}]}, {"type":"channel", "id":6, "name":"aLoader_aFeeder_channel", "debug":[[{"filename":"hemm.cl", "line":104}]], "details":[{"type":"table", "Width":"512 bits", "Depth":"256"}]}, {"type":"channel", "id":83, "name":"bFeeder_Y_channel", "debug":[[{"filename":"hemm.cl", "line":175}]], "details":[{"type":"table", "Width":"2048 bits", "Depth":"256"}]}, {"type":"channel", "id":73, "name":"bLoader_bFeeder_channel", "debug":[[{"filename":"hemm.cl", "line":175}]], "details":[{"type":"table", "Width":"512 bits", "Depth":"256"}]}], "links":[{"from":6, "to":5}, {"from":27, "to":28}, {"from":32, "to":8}, {"from":32, "to":10}, {"from":32, "to":12}, {"from":32, "to":14}, {"from":32, "to":16}, {"from":32, "to":18}, {"from":32, "to":20}, {"from":32, "to":22}, {"from":32, "to":24}, {"from":32, "to":26}, {"from":7, "to":32}, {"from":9, "to":32}, {"from":11, "to":32}, {"from":13, "to":32}, {"from":15, "to":32}, {"from":17, "to":32}, {"from":19, "to":32}, {"from":21, "to":32}, {"from":23, "to":32}, {"from":25, "to":32}, {"from":30, "to":29}, {"from":3, "to":29}, {"from":5, "to":30}, {"from":7, "to":30}, {"from":8, "to":30}, {"from":9, "to":30}, {"from":10, "to":30}, {"from":11, "to":30}, {"from":12, "to":30}, {"from":13, "to":30}, {"from":14, "to":30}, {"from":15, "to":30}, {"from":16, "to":30}, {"from":17, "to":30}, {"from":18, "to":30}, {"from":19, "to":30}, {"from":20, "to":30}, {"from":21, "to":30}, {"from":22, "to":30}, {"from":23, "to":30}, {"from":24, "to":30}, {"from":25, "to":30}, {"from":26, "to":30}, {"from":27, "to":30}, {"from":29, "to":5}, {"from":5, "to":7}, {"from":5, "to":8}, {"from":5, "to":9}, {"from":5, "to":10}, {"from":5, "to":11}, {"from":5, "to":12}, {"from":5, "to":13}, {"from":5, "to":14}, {"from":5, "to":15}, {"from":5, "to":16}, {"from":5, "to":17}, {"from":5, "to":18}, {"from":5, "to":19}, {"from":5, "to":20}, {"from":5, "to":21}, {"from":5, "to":22}, {"from":5, "to":23}, {"from":5, "to":24}, {"from":5, "to":25}, {"from":5, "to":26}, {"from":7, "to":27}, {"from":8, "to":27}, {"from":9, "to":27}, {"from":10, "to":27}, {"from":11, "to":27}, {"from":12, "to":27}, {"from":13, "to":27}, {"from":14, "to":27}, {"from":15, "to":27}, {"from":16, "to":27}, {"from":17, "to":27}, {"from":18, "to":27}, {"from":19, "to":27}, {"from":20, "to":27}, {"from":21, "to":27}, {"from":22, "to":27}, {"from":23, "to":27}, {"from":24, "to":27}, {"from":25, "to":27}, {"from":26, "to":27}, {"from":73, "to":72}, {"from":82, "to":83}, {"from":87, "to":75}, {"from":87, "to":77}, {"from":87, "to":79}, {"from":87, "to":81}, {"from":74, "to":87}, {"from":76, "to":87}, {"from":78, "to":87}, {"from":80, "to":87}, {"from":85, "to":84}, {"from":70, "to":84}, {"from":72, "to":85}, {"from":74, "to":85}, {"from":75, "to":85}, {"from":76, "to":85}, {"from":77, "to":85}, {"from":78, "to":85}, {"from":79, "to":85}, {"from":80, "to":85}, {"from":81, "to":85}, {"from":82, "to":85}, {"from":84, "to":72}, {"from":72, "to":74}, {"from":72, "to":75}, {"from":72, "to":76}, {"from":72, "to":77}, {"from":72, "to":78}, {"from":72, "to":79}, {"from":72, "to":80}, {"from":72, "to":81}, {"from":74, "to":82}, {"from":75, "to":82}, {"from":76, "to":82}, {"from":77, "to":82}, {"from":78, "to":82}, {"from":79, "to":82}, {"from":80, "to":82}, {"from":81, "to":82}, {"from":83, "to":106}, {"from":28, "to":107}, {"from":108, "to":109}, {"from":105, "to":102}, {"from":101, "to":102}, {"from":105, "to":103}, {"from":111, "to":110}, {"from":102, "to":110}, {"from":106, "to":111}, {"from":107, "to":111}, {"from":108, "to":111}, {"from":111, "to":105}, {"from":110, "to":106}, {"from":110, "to":107}, {"from":106, "to":108}, {"from":107, "to":108}, {"from":123, "to":6}, {"from":117, "to":114}, {"from":113, "to":114}, {"from":117, "to":115}, {"from":119, "to":116}, {"from":114, "to":116}, {"from":119, "to":117}, {"from":120, "to":118}, {"from":116, "to":118}, {"from":120, "to":119}, {"from":125, "to":120}, {"from":125, "to":124}, {"from":118, "to":124}, {"from":122, "to":125}, {"from":123, "to":125}, {"from":124, "to":122}, {"from":122, "to":123}, {"from":126, "to":122}, {"from":138, "to":73}, {"from":132, "to":129}, {"from":128, "to":129}, {"from":132, "to":130}, {"from":134, "to":131}, {"from":129, "to":131}, {"from":134, "to":132}, {"from":135, "to":133}, {"from":131, "to":133}, {"from":135, "to":134}, {"from":140, "to":135}, {"from":140, "to":139}, {"from":133, "to":139}, {"from":137, "to":140}, {"from":138, "to":140}, {"from":139, "to":137}, {"from":137, "to":138}, {"from":126, "to":137}, {"from":109, "to":149}, {"from":146, "to":143}, {"from":142, "to":143}, {"from":146, "to":144}, {"from":147, "to":145}, {"from":143, "to":145}, {"from":147, "to":146}, {"from":152, "to":147}, {"from":152, "to":151}, {"from":145, "to":151}, {"from":149, "to":152}, {"from":150, "to":152}, {"from":151, "to":149}, {"from":149, "to":150}, {"from":150, "to":126}]}';
var loopsJSON='{"columns":["", "Pipelined", "II", "Speculated iterations", "Details"], "children":[{"name":"Kernel: kernel_aFeeder", "data":["", "", ""], "debug":[[{"filename":"hemm.cl", "line":104}]], "details":[{"type":"brief", "text":"Single work-item execution"}, {"type":"text", "text":"Single work-item execution"}, {"type":"text", "text":"Fmax bottlenck block: None"}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Kernels", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#ipp1476408832230"}]}], "children":[{"name":"kernel_aFeeder.B1", "data":["Yes", "~1", "0"], "debug":[[{"filename":"hemm.cl", "line":118}]], "details":[{"type":"brief", "text":" "}, {"type":"text", "text":"Hyper-Optimized loop structure: n/a"}, {"type":"text", "text":"II is an approximation due to the following stallable instructions:", "details":[{"type":"text", "text":"Channel Read Operation (%L)", "links":[{"filename":"hemm.cl", "line":"120"}]}, {"type":"text", "text":"Channel Write Operation (%L)", "links":[{"filename":"hemm.cl", "line":"144"}]}]}, {"type":"text", "text":"Maximum concurrent iterations: Capacity of loop", "details":[{"type":"text", "text":"Use the %L viewer to estimate capacity", "links":[{"view":"Fmax II Report"}]}]}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Loops in a Single Work-Item Kernel", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#wfa1476380079940"}]}], "children":[{"name":"Fully unrolled loop", "data":["n/a", "n/a", "n/a"], "debug":[[{"filename":"hemm.cl", "line":123}]], "details":[{"type":"brief", "text":"Unrolled by #pragma unroll"}, {"type":"text", "text":"Unrolled by #pragma unroll"}], "children":[]}]}]}, {"name":"Kernel: kernel_bFeeder", "data":["", "", ""], "debug":[[{"filename":"hemm.cl", "line":175}]], "details":[{"type":"brief", "text":"Single work-item execution"}, {"type":"text", "text":"Single work-item execution"}, {"type":"text", "text":"Fmax bottlenck block: None"}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Kernels", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#ipp1476408832230"}]}], "children":[{"name":"kernel_bFeeder.B1", "data":["Yes", "~1", "0"], "debug":[[{"filename":"hemm.cl", "line":189}]], "details":[{"type":"brief", "text":" "}, {"type":"text", "text":"Hyper-Optimized loop structure: n/a"}, {"type":"text", "text":"II is an approximation due to the following stallable instructions:", "details":[{"type":"text", "text":"Channel Read Operation (%L)", "links":[{"filename":"hemm.cl", "line":"191"}]}, {"type":"text", "text":"Channel Write Operation (%L)", "links":[{"filename":"hemm.cl", "line":"215"}]}]}, {"type":"text", "text":"Maximum concurrent iterations: Capacity of loop", "details":[{"type":"text", "text":"Use the %L viewer to estimate capacity", "links":[{"view":"Fmax II Report"}]}]}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Loops in a Single Work-Item Kernel", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#wfa1476380079940"}]}], "children":[{"name":"Fully unrolled loop", "data":["n/a", "n/a", "n/a"], "debug":[[{"filename":"hemm.cl", "line":194}]], "details":[{"type":"brief", "text":"Unrolled by #pragma unroll"}, {"type":"text", "text":"Unrolled by #pragma unroll"}], "children":[]}]}]}, {"name":"Kernel: kernel_Out", "data":["", "", ""], "debug":[[{"filename":"hemm.cl", "line":221}]], "details":[{"type":"brief", "text":"Single work-item execution"}, {"type":"text", "text":"Single work-item execution"}, {"type":"text", "text":"Fmax bottlenck block: None"}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Kernels", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#ipp1476408832230"}]}], "children":[{"name":"kernel_Out.B1", "data":["Yes", ">=1", "0"], "debug":[[{"filename":"hemm.cl", "line":237}]], "details":[{"type":"brief", "text":" "}, {"type":"text", "text":"Hyper-Optimized loop structure: n/a"}, {"type":"text", "text":"Stallable instruction: n/a"}, {"type":"text", "text":"Maximum concurrent iterations: Capacity of loop", "details":[{"type":"text", "text":"Use the %L viewer to estimate capacity", "links":[{"view":"Fmax II Report"}]}]}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Nested Loops", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#rfr1469543500580"}]}], "children":[{"name":"kernel_Out.B3", "data":["Yes", "~1", "1"], "debug":[[{"filename":"hemm.cl", "line":238}]], "details":[{"type":"brief", "text":" "}, {"type":"text", "text":"Hyper-Optimized loop structure: n/a"}, {"type":"text", "text":"II is an approximation due to the following stallable instructions:", "details":[{"type":"text", "text":"Channel Read Operation (%L)", "links":[{"filename":"hemm.cl", "line":"252"}]}, {"type":"text", "text":"Channel Read Operation (%L)", "links":[{"filename":"hemm.cl", "line":"253"}]}, {"type":"text", "text":"Channel Write Operation (%L)", "links":[{"filename":"hemm.cl", "line":"293"}]}]}, {"type":"text", "text":"Maximum concurrent iterations: Capacity of loop", "details":[{"type":"text", "text":"Use the %L viewer to estimate capacity", "links":[{"view":"Fmax II Report"}]}]}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Loops in a Single Work-Item Kernel", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#wfa1476380079940"}]}], "children":[{"name":"Fully unrolled loop", "data":["n/a", "n/a", "n/a"], "debug":[[{"filename":"hemm.cl", "line":240}]], "details":[{"type":"brief", "text":"Unrolled by #pragma unroll"}, {"type":"text", "text":"Unrolled by #pragma unroll"}], "children":[{"name":"Fully unrolled loop", "data":["n/a", "n/a", "n/a"], "debug":[[{"filename":"hemm.cl", "line":242}]], "details":[{"type":"brief", "text":"Unrolled by #pragma unroll"}, {"type":"text", "text":"Unrolled by #pragma unroll"}], "children":[{"name":"Fully unrolled loop", "data":["n/a", "n/a", "n/a"], "debug":[[{"filename":"hemm.cl", "line":245}]], "details":[{"type":"brief", "text":"Unrolled by #pragma unroll"}, {"type":"text", "text":"Unrolled by #pragma unroll"}], "children":[]}]}]}, {"name":"Fully unrolled loop", "data":["n/a", "n/a", "n/a"], "debug":[[{"filename":"hemm.cl", "line":256}]], "details":[{"type":"brief", "text":"Unrolled by #pragma unroll"}, {"type":"text", "text":"Unrolled by #pragma unroll"}], "children":[{"name":"Fully unrolled loop", "data":["n/a", "n/a", "n/a"], "debug":[[{"filename":"hemm.cl", "line":258}]], "details":[{"type":"brief", "text":"Unrolled by #pragma unroll"}, {"type":"text", "text":"Unrolled by #pragma unroll"}], "children":[{"name":"Fully unrolled loop", "data":["n/a", "n/a", "n/a"], "debug":[[{"filename":"hemm.cl", "line":265}]], "details":[{"type":"brief", "text":"Unrolled by #pragma unroll"}, {"type":"text", "text":"Unrolled by #pragma unroll"}], "children":[]}, {"name":"Fully unrolled loop", "data":["n/a", "n/a", "n/a"], "debug":[[{"filename":"hemm.cl", "line":273}]], "details":[{"type":"brief", "text":"Unrolled by #pragma unroll"}, {"type":"text", "text":"Unrolled by #pragma unroll"}], "children":[]}]}]}, {"name":"Fully unrolled loop", "data":["n/a", "n/a", "n/a"], "debug":[[{"filename":"hemm.cl", "line":285}]], "details":[{"type":"brief", "text":"Unrolled by #pragma unroll"}, {"type":"text", "text":"Unrolled by #pragma unroll"}], "children":[{"name":"Fully unrolled loop", "data":["n/a", "n/a", "n/a"], "debug":[[{"filename":"hemm.cl", "line":288}]], "details":[{"type":"brief", "text":"Unrolled by #pragma unroll"}, {"type":"text", "text":"Unrolled by #pragma unroll"}], "children":[]}]}, {"name":"Fully unrolled loop", "data":["n/a", "n/a", "n/a"], "debug":[[{"filename":"hemm.cl", "line":296}]], "details":[{"type":"brief", "text":"Unrolled by #pragma unroll"}, {"type":"text", "text":"Unrolled by #pragma unroll"}], "children":[{"name":"Fully unrolled loop", "data":["n/a", "n/a", "n/a"], "debug":[[{"filename":"hemm.cl", "line":298}]], "details":[{"type":"brief", "text":"Unrolled by #pragma unroll"}, {"type":"text", "text":"Unrolled by #pragma unroll"}], "children":[{"name":"Fully unrolled loop", "data":["n/a", "n/a", "n/a"], "debug":[[{"filename":"hemm.cl", "line":300}]], "details":[{"type":"brief", "text":"Unrolled by #pragma unroll"}, {"type":"text", "text":"Unrolled by #pragma unroll"}], "children":[]}]}]}]}]}]}, {"name":"Kernel: kernel_aLoader", "data":["", "", ""], "debug":[[{"filename":"hemm.cl", "line":80}]], "details":[{"type":"brief", "text":"Single work-item execution"}, {"type":"text", "text":"Single work-item execution"}, {"type":"text", "text":"Fmax bottlenck block: None"}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Kernels", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#ipp1476408832230"}]}], "children":[{"name":"kernel_aLoader.B1", "data":["Yes", ">=1", "0"], "debug":[[{"filename":"hemm.cl", "line":87}]], "details":[{"type":"brief", "text":" "}, {"type":"text", "text":"Hyper-Optimized loop structure: n/a"}, {"type":"text", "text":"Stallable instruction: n/a"}, {"type":"text", "text":"Maximum concurrent iterations: Capacity of loop", "details":[{"type":"text", "text":"Use the %L viewer to estimate capacity", "links":[{"view":"Fmax II Report"}]}]}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Nested Loops", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#rfr1469543500580"}]}], "children":[{"name":"kernel_aLoader.B3", "data":["Yes", ">=1", "0"], "debug":[[{"filename":"hemm.cl", "line":88}]], "details":[{"type":"brief", "text":" "}, {"type":"text", "text":"Hyper-Optimized loop structure: n/a"}, {"type":"text", "text":"Stallable instruction: n/a"}, {"type":"text", "text":"Maximum concurrent iterations: Capacity of loop", "details":[{"type":"text", "text":"Use the %L viewer to estimate capacity", "links":[{"view":"Fmax II Report"}]}]}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Nested Loops", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#rfr1469543500580"}]}], "children":[{"name":"kernel_aLoader.B5", "data":["Yes", ">=1", "0"], "debug":[[{"filename":"hemm.cl", "line":89}]], "details":[{"type":"brief", "text":" "}, {"type":"text", "text":"Hyper-Optimized loop structure: n/a"}, {"type":"text", "text":"Stallable instruction: n/a"}, {"type":"text", "text":"Maximum concurrent iterations: Capacity of loop", "details":[{"type":"text", "text":"Use the %L viewer to estimate capacity", "links":[{"view":"Fmax II Report"}]}]}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Nested Loops", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#rfr1469543500580"}]}], "children":[{"name":"kernel_aLoader.B8", "data":["Yes", "~1", "1"], "debug":[[{"filename":"hemm.cl", "line":90}]], "details":[{"type":"brief", "text":" "}, {"type":"text", "text":"Hyper-Optimized loop structure: n/a"}, {"type":"text", "text":"II is an approximation due to the following stallable instructions:", "details":[{"type":"text", "text":"Load Operation (%L)", "links":[{"filename":"hemm.cl", "line":"92"}]}, {"type":"text", "text":"Channel Write Operation (%L)", "links":[{"filename":"hemm.cl", "line":"92"}]}]}, {"type":"text", "text":"Maximum concurrent iterations: Capacity of loop", "details":[{"type":"text", "text":"Use the %L viewer to estimate capacity", "links":[{"view":"Fmax II Report"}]}]}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Loops in a Single Work-Item Kernel", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#wfa1476380079940"}]}], "children":[]}]}]}]}]}, {"name":"Kernel: kernel_bLoader", "data":["", "", ""], "debug":[[{"filename":"hemm.cl", "line":151}]], "details":[{"type":"brief", "text":"Single work-item execution"}, {"type":"text", "text":"Single work-item execution"}, {"type":"text", "text":"Fmax bottlenck block: None"}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Kernels", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#ipp1476408832230"}]}], "children":[{"name":"kernel_bLoader.B1", "data":["Yes", ">=1", "0"], "debug":[[{"filename":"hemm.cl", "line":158}]], "details":[{"type":"brief", "text":" "}, {"type":"text", "text":"Hyper-Optimized loop structure: n/a"}, {"type":"text", "text":"Stallable instruction: n/a"}, {"type":"text", "text":"Maximum concurrent iterations: Capacity of loop", "details":[{"type":"text", "text":"Use the %L viewer to estimate capacity", "links":[{"view":"Fmax II Report"}]}]}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Nested Loops", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#rfr1469543500580"}]}], "children":[{"name":"kernel_bLoader.B3", "data":["Yes", ">=1", "0"], "debug":[[{"filename":"hemm.cl", "line":159}]], "details":[{"type":"brief", "text":" "}, {"type":"text", "text":"Hyper-Optimized loop structure: n/a"}, {"type":"text", "text":"Stallable instruction: n/a"}, {"type":"text", "text":"Maximum concurrent iterations: Capacity of loop", "details":[{"type":"text", "text":"Use the %L viewer to estimate capacity", "links":[{"view":"Fmax II Report"}]}]}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Nested Loops", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#rfr1469543500580"}]}], "children":[{"name":"kernel_bLoader.B5", "data":["Yes", ">=1", "0"], "debug":[[{"filename":"hemm.cl", "line":160}]], "details":[{"type":"brief", "text":" "}, {"type":"text", "text":"Hyper-Optimized loop structure: n/a"}, {"type":"text", "text":"Stallable instruction: n/a"}, {"type":"text", "text":"Maximum concurrent iterations: Capacity of loop", "details":[{"type":"text", "text":"Use the %L viewer to estimate capacity", "links":[{"view":"Fmax II Report"}]}]}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Nested Loops", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#rfr1469543500580"}]}], "children":[{"name":"kernel_bLoader.B8", "data":["Yes", "~1", "1"], "debug":[[{"filename":"hemm.cl", "line":161}]], "details":[{"type":"brief", "text":" "}, {"type":"text", "text":"Hyper-Optimized loop structure: n/a"}, {"type":"text", "text":"II is an approximation due to the following stallable instructions:", "details":[{"type":"text", "text":"Load Operation (%L)", "links":[{"filename":"hemm.cl", "line":"163"}]}, {"type":"text", "text":"Channel Write Operation (%L)", "links":[{"filename":"hemm.cl", "line":"163"}]}]}, {"type":"text", "text":"Maximum concurrent iterations: Capacity of loop", "details":[{"type":"text", "text":"Use the %L viewer to estimate capacity", "links":[{"view":"Fmax II Report"}]}]}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Loops in a Single Work-Item Kernel", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#wfa1476380079940"}]}], "children":[]}]}]}]}]}, {"name":"Kernel: kernel_unloader", "data":["", "", ""], "debug":[[{"filename":"hemm.cl", "line":312}]], "details":[{"type":"brief", "text":"Single work-item execution"}, {"type":"text", "text":"Single work-item execution"}, {"type":"text", "text":"Fmax bottlenck block: None"}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Kernels", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#ipp1476408832230"}]}], "children":[{"name":"kernel_unloader.B1", "data":["Yes", ">=1", "0"], "debug":[[{"filename":"hemm.cl", "line":318}]], "details":[{"type":"brief", "text":" "}, {"type":"text", "text":"Hyper-Optimized loop structure: n/a"}, {"type":"text", "text":"Stallable instruction: n/a"}, {"type":"text", "text":"Maximum concurrent iterations: Capacity of loop", "details":[{"type":"text", "text":"Use the %L viewer to estimate capacity", "links":[{"view":"Fmax II Report"}]}]}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Nested Loops", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#rfr1469543500580"}]}], "children":[{"name":"kernel_unloader.B3", "data":["Yes", ">=1", "0"], "debug":[[{"filename":"hemm.cl", "line":319}]], "details":[{"type":"brief", "text":" "}, {"type":"text", "text":"Hyper-Optimized loop structure: n/a"}, {"type":"text", "text":"Stallable instruction: n/a"}, {"type":"text", "text":"Maximum concurrent iterations: Capacity of loop", "details":[{"type":"text", "text":"Use the %L viewer to estimate capacity", "links":[{"view":"Fmax II Report"}]}]}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Nested Loops", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#rfr1469543500580"}]}], "children":[{"name":"kernel_unloader.B6", "data":["Yes", "~1", "1"], "debug":[[{"filename":"hemm.cl", "line":320}]], "details":[{"type":"brief", "text":" "}, {"type":"text", "text":"Hyper-Optimized loop structure: n/a"}, {"type":"text", "text":"II is an approximation due to the following stallable instructions:", "details":[{"type":"text", "text":"Channel Read Operation (%L)", "links":[{"filename":"hemm.cl", "line":"321"}]}, {"type":"text", "text":"Store Operation (%L)", "links":[{"filename":"hemm.cl", "line":"321"}]}]}, {"type":"text", "text":"Maximum concurrent iterations: Capacity of loop", "details":[{"type":"text", "text":"Use the %L viewer to estimate capacity", "links":[{"view":"Fmax II Report"}]}]}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Loops in a Single Work-Item Kernel", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#wfa1476380079940"}]}], "children":[]}]}]}]}, {"name":"Kernel: Intel_Internal_Collect_Autorun_Profiling", "data":["", "", ""], "debug":[[{"filename":"Unknown location", "line":0}]], "details":[{"type":"brief", "text":"ND-Range"}, {"type":"text", "text":"ND-Range"}, {"type":"text", "text":"Fmax bottlenck block: None"}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Kernels", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#ipp1476408832230"}]}]}]}';
var fmax_iiJSON='{"basicblocks":{"kernel_aFeeder.B0":{"name":"kernel_aFeeder.B0", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"240.0", "achieved_ii":1, "latency":2, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"No", "is_single_block_loop":"No", "loop_layer":0, "loop_location":{}}, "kernel_aFeeder.B1":{"name":"kernel_aFeeder.B1", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"240.0", "achieved_ii":1, "latency":37, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"Yes", "is_single_block_loop":"Yes", "loop_layer":1, "loop_location":{"details":[{"type":"text", "text":"Loop:  (%L)", "links":[{"filename":"hemm.cl", "line":"118"}]}]}}, "kernel_bFeeder.B0":{"name":"kernel_bFeeder.B0", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"240.0", "achieved_ii":1, "latency":2, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"No", "is_single_block_loop":"No", "loop_layer":0, "loop_location":{}}, "kernel_bFeeder.B1":{"name":"kernel_bFeeder.B1", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"240.0", "achieved_ii":1, "latency":27, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"Yes", "is_single_block_loop":"Yes", "loop_layer":1, "loop_location":{"details":[{"type":"text", "text":"Loop:  (%L)", "links":[{"filename":"hemm.cl", "line":"189"}]}]}}, "kernel_Out.B0":{"name":"kernel_Out.B0", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"240.0", "achieved_ii":1, "latency":15, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"No", "is_single_block_loop":"No", "loop_layer":0, "loop_location":{}}, "kernel_Out.B1":{"name":"kernel_Out.B1", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"240.0", "achieved_ii":1, "latency":5, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"Yes", "is_single_block_loop":"No", "loop_layer":1, "loop_location":{"details":[{"type":"text", "text":"Loop:  (%L)", "links":[{"filename":"hemm.cl", "line":"237"}]}]}}, "kernel_Out.B2":{"name":"kernel_Out.B2", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"240.0", "achieved_ii":1, "latency":0, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"No", "is_single_block_loop":"No", "loop_layer":0, "loop_location":{}}, "kernel_Out.B3":{"name":"kernel_Out.B3", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"240.0", "achieved_ii":1, "latency":99, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"Yes", "is_single_block_loop":"Yes", "loop_layer":2, "loop_location":{"details":[{"type":"text", "text":"Loop:  (%L)", "links":[{"filename":"hemm.cl", "line":"238"}]}]}}, "kernel_Out.B4":{"name":"kernel_Out.B4", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"240.0", "achieved_ii":1, "latency":0, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"No", "is_single_block_loop":"No", "loop_layer":1, "loop_location":{}}, "kernel_aLoader.B0":{"name":"kernel_aLoader.B0", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"240.0", "achieved_ii":1, "latency":9, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"No", "is_single_block_loop":"No", "loop_layer":0, "loop_location":{}}, "kernel_aLoader.B1":{"name":"kernel_aLoader.B1", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"240.0", "achieved_ii":1, "latency":5, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"Yes", "is_single_block_loop":"No", "loop_layer":1, "loop_location":{"details":[{"type":"text", "text":"Loop:  (%L)", "links":[{"filename":"hemm.cl", "line":"87"}]}]}}, "kernel_aLoader.B2":{"name":"kernel_aLoader.B2", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"240.0", "achieved_ii":1, "latency":0, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"No", "is_single_block_loop":"No", "loop_layer":0, "loop_location":{}}, "kernel_aLoader.B3":{"name":"kernel_aLoader.B3", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"240.0", "achieved_ii":1, "latency":5, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"Yes", "is_single_block_loop":"No", "loop_layer":2, "loop_location":{"details":[{"type":"text", "text":"Loop:  (%L)", "links":[{"filename":"hemm.cl", "line":"88"}]}]}}, "kernel_aLoader.B4":{"name":"kernel_aLoader.B4", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"240.0", "achieved_ii":1, "latency":0, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"No", "is_single_block_loop":"No", "loop_layer":1, "loop_location":{}}, "kernel_aLoader.B5":{"name":"kernel_aLoader.B5", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"240.0", "achieved_ii":1, "latency":6, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"Yes", "is_single_block_loop":"No", "loop_layer":3, "loop_location":{"details":[{"type":"text", "text":"Loop:  (%L)", "links":[{"filename":"hemm.cl", "line":"89"}]}]}}, "kernel_aLoader.B6":{"name":"kernel_aLoader.B6", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"240.0", "achieved_ii":1, "latency":0, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"No", "is_single_block_loop":"No", "loop_layer":2, "loop_location":{}}, "kernel_aLoader.B7":{"name":"kernel_aLoader.B7", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"240.0", "achieved_ii":1, "latency":0, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"No", "is_single_block_loop":"No", "loop_layer":3, "loop_location":{}}, "kernel_aLoader.B8":{"name":"kernel_aLoader.B8", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"240.0", "achieved_ii":1, "latency":184, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"Yes", "is_single_block_loop":"Yes", "loop_layer":4, "loop_location":{"details":[{"type":"text", "text":"Loop:  (%L)", "links":[{"filename":"hemm.cl", "line":"90"}]}]}}, "kernel_bLoader.B0":{"name":"kernel_bLoader.B0", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"240.0", "achieved_ii":1, "latency":9, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"No", "is_single_block_loop":"No", "loop_layer":0, "loop_location":{}}, "kernel_bLoader.B1":{"name":"kernel_bLoader.B1", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"240.0", "achieved_ii":1, "latency":5, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"Yes", "is_single_block_loop":"No", "loop_layer":1, "loop_location":{"details":[{"type":"text", "text":"Loop:  (%L)", "links":[{"filename":"hemm.cl", "line":"158"}]}]}}, "kernel_bLoader.B2":{"name":"kernel_bLoader.B2", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"240.0", "achieved_ii":1, "latency":0, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"No", "is_single_block_loop":"No", "loop_layer":0, "loop_location":{}}, "kernel_bLoader.B3":{"name":"kernel_bLoader.B3", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"240.0", "achieved_ii":1, "latency":5, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"Yes", "is_single_block_loop":"No", "loop_layer":2, "loop_location":{"details":[{"type":"text", "text":"Loop:  (%L)", "links":[{"filename":"hemm.cl", "line":"159"}]}]}}, "kernel_bLoader.B4":{"name":"kernel_bLoader.B4", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"240.0", "achieved_ii":1, "latency":0, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"No", "is_single_block_loop":"No", "loop_layer":1, "loop_location":{}}, "kernel_bLoader.B5":{"name":"kernel_bLoader.B5", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"240.0", "achieved_ii":1, "latency":6, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"Yes", "is_single_block_loop":"No", "loop_layer":3, "loop_location":{"details":[{"type":"text", "text":"Loop:  (%L)", "links":[{"filename":"hemm.cl", "line":"160"}]}]}}, "kernel_bLoader.B6":{"name":"kernel_bLoader.B6", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"240.0", "achieved_ii":1, "latency":0, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"No", "is_single_block_loop":"No", "loop_layer":2, "loop_location":{}}, "kernel_bLoader.B7":{"name":"kernel_bLoader.B7", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"240.0", "achieved_ii":1, "latency":0, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"No", "is_single_block_loop":"No", "loop_layer":3, "loop_location":{}}, "kernel_bLoader.B8":{"name":"kernel_bLoader.B8", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"240.0", "achieved_ii":1, "latency":183, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"Yes", "is_single_block_loop":"Yes", "loop_layer":4, "loop_location":{"details":[{"type":"text", "text":"Loop:  (%L)", "links":[{"filename":"hemm.cl", "line":"161"}]}]}}, "kernel_unloader.B0":{"name":"kernel_unloader.B0", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"240.0", "achieved_ii":1, "latency":9, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"No", "is_single_block_loop":"No", "loop_layer":0, "loop_location":{}}, "kernel_unloader.B1":{"name":"kernel_unloader.B1", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"240.0", "achieved_ii":1, "latency":4, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"Yes", "is_single_block_loop":"No", "loop_layer":1, "loop_location":{"details":[{"type":"text", "text":"Loop:  (%L)", "links":[{"filename":"hemm.cl", "line":"318"}]}]}}, "kernel_unloader.B2":{"name":"kernel_unloader.B2", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"240.0", "achieved_ii":1, "latency":0, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"No", "is_single_block_loop":"No", "loop_layer":0, "loop_location":{}}, "kernel_unloader.B3":{"name":"kernel_unloader.B3", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"240.0", "achieved_ii":1, "latency":5, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"Yes", "is_single_block_loop":"No", "loop_layer":2, "loop_location":{"details":[{"type":"text", "text":"Loop:  (%L)", "links":[{"filename":"hemm.cl", "line":"319"}]}]}}, "kernel_unloader.B4":{"name":"kernel_unloader.B4", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"240.0", "achieved_ii":1, "latency":0, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"No", "is_single_block_loop":"No", "loop_layer":1, "loop_location":{}}, "kernel_unloader.B5":{"name":"kernel_unloader.B5", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"240.0", "achieved_ii":1, "latency":0, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"No", "is_single_block_loop":"No", "loop_layer":2, "loop_location":{}}, "kernel_unloader.B6":{"name":"kernel_unloader.B6", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"240.0", "achieved_ii":1, "latency":12, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"Yes", "is_single_block_loop":"Yes", "loop_layer":3, "loop_location":{"details":[{"type":"text", "text":"Loop:  (%L)", "links":[{"filename":"hemm.cl", "line":"320"}]}]}}, "Intel_Internal_Collect_Autorun_Profiling.B0":{"name":"Intel_Internal_Collect_Autorun_Profiling.B0", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"240.0", "achieved_ii":1, "latency":1, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"No", "is_single_block_loop":"No", "loop_layer":0, "loop_location":{}}}, "functions":{"kernel_aFeeder":{"debug":[{"filename":"hemm.cl", "line":104}], "loop_hierachy":{"kernel_aFeeder__no_loop":["kernel_aFeeder.B0"], "kernel_aFeeder.B1":["kernel_aFeeder.B1"]}}, "kernel_bFeeder":{"debug":[{"filename":"hemm.cl", "line":175}], "loop_hierachy":{"kernel_bFeeder__no_loop":["kernel_bFeeder.B0"], "kernel_bFeeder.B1":["kernel_bFeeder.B1"]}}, "kernel_Out":{"debug":[{"filename":"hemm.cl", "line":221}], "loop_hierachy":{"kernel_Out__no_loop":["kernel_Out.B0", "kernel_Out.B2"], "kernel_Out.B1":["kernel_Out.B1", "kernel_Out.B3", "kernel_Out.B4"], "kernel_Out.B3":["kernel_Out.B3"]}}, "kernel_aLoader":{"debug":[{"filename":"hemm.cl", "line":80}], "loop_hierachy":{"kernel_aLoader__no_loop":["kernel_aLoader.B0", "kernel_aLoader.B2"], "kernel_aLoader.B1":["kernel_aLoader.B1", "kernel_aLoader.B3", "kernel_aLoader.B4"], "kernel_aLoader.B3":["kernel_aLoader.B3", "kernel_aLoader.B5", "kernel_aLoader.B6"], "kernel_aLoader.B5":["kernel_aLoader.B5", "kernel_aLoader.B8", "kernel_aLoader.B7"], "kernel_aLoader.B8":["kernel_aLoader.B8"]}}, "kernel_bLoader":{"debug":[{"filename":"hemm.cl", "line":151}], "loop_hierachy":{"kernel_bLoader__no_loop":["kernel_bLoader.B0", "kernel_bLoader.B2"], "kernel_bLoader.B1":["kernel_bLoader.B1", "kernel_bLoader.B3", "kernel_bLoader.B4"], "kernel_bLoader.B3":["kernel_bLoader.B3", "kernel_bLoader.B5", "kernel_bLoader.B6"], "kernel_bLoader.B5":["kernel_bLoader.B5", "kernel_bLoader.B8", "kernel_bLoader.B7"], "kernel_bLoader.B8":["kernel_bLoader.B8"]}}, "kernel_unloader":{"debug":[{"filename":"hemm.cl", "line":312}], "loop_hierachy":{"kernel_unloader__no_loop":["kernel_unloader.B0", "kernel_unloader.B2"], "kernel_unloader.B1":["kernel_unloader.B1", "kernel_unloader.B3", "kernel_unloader.B4"], "kernel_unloader.B3":["kernel_unloader.B3", "kernel_unloader.B6", "kernel_unloader.B5"], "kernel_unloader.B6":["kernel_unloader.B6"]}}, "Intel_Internal_Collect_Autorun_Profiling":{"debug":[{"filename":"Unknown location", "line":0}], "loop_hierachy":{"Intel_Internal_Collect_Autorun_Profiling__no_loop":["Intel_Internal_Collect_Autorun_Profiling.B0"]}}}}';
var summaryJSON='{"performanceSummary":{"name":"Kernel Summary", "columns":["Kernel Name", "Kernel Type", "Autorun", "Workgroup Size", "# Compute Units"], "children":[{"name":"Intel_Internal_Collect_Autorun_Profiling", "data":["NDRange", "No", "n/a", 1], "details":[{"type":"text", "text":"Kernel type: NDRange"}, {"type":"text", "text":"The kernel does not use any work-group information (such as get_local_id() or get_group_id()).Local work-group size will be automatically modified to match global work-group size on launch.This is a hardware optimization."}], "debug":[[{"filename":"", "line":0}]]}, {"name":"kernel_Out", "data":["Single work-item", "No", [1, 1, 1], 1], "details":[{"type":"text", "text":"Kernel type: Single work-item"}, {"type":"text", "text":"Required workgroup size: (1, 1, 1)"}, {"type":"text", "text":"Maximum workgroup size: 1"}], "debug":[[{"filename":"hemm.cl", "line":221}]]}, {"name":"kernel_aFeeder", "data":["Single work-item", "Yes", [1, 1, 1], 1], "details":[{"type":"text", "text":"Kernel type: Single work-item"}, {"type":"text", "text":"Autorun Kernel: This kernel will start running before any other kernel is explicitly launched by the host.  The kernel will be automatically restarted as soon as it finishes."}, {"type":"text", "text":"Max global work dimension: 0"}, {"type":"text", "text":"Required workgroup size: (1, 1, 1)"}, {"type":"text", "text":"Maximum workgroup size: 1"}], "debug":[[{"filename":"hemm.cl", "line":104}]]}, {"name":"kernel_aLoader", "data":["Single work-item", "No", [1, 1, 1], 1], "details":[{"type":"text", "text":"Kernel type: Single work-item"}, {"type":"text", "text":"Required workgroup size: (1, 1, 1)"}, {"type":"text", "text":"Maximum workgroup size: 1"}], "debug":[[{"filename":"hemm.cl", "line":80}]]}, {"name":"kernel_bFeeder", "data":["Single work-item", "Yes", [1, 1, 1], 1], "details":[{"type":"text", "text":"Kernel type: Single work-item"}, {"type":"text", "text":"Autorun Kernel: This kernel will start running before any other kernel is explicitly launched by the host.  The kernel will be automatically restarted as soon as it finishes."}, {"type":"text", "text":"Max global work dimension: 0"}, {"type":"text", "text":"Required workgroup size: (1, 1, 1)"}, {"type":"text", "text":"Maximum workgroup size: 1"}], "debug":[[{"filename":"hemm.cl", "line":175}]]}, {"name":"kernel_bLoader", "data":["Single work-item", "No", [1, 1, 1], 1], "details":[{"type":"text", "text":"Kernel type: Single work-item"}, {"type":"text", "text":"Required workgroup size: (1, 1, 1)"}, {"type":"text", "text":"Maximum workgroup size: 1"}], "debug":[[{"filename":"hemm.cl", "line":151}]]}, {"name":"kernel_unloader", "data":["Single work-item", "No", [1, 1, 1], 1], "details":[{"type":"text", "text":"Kernel type: Single work-item"}, {"type":"text", "text":"Required workgroup size: (1, 1, 1)"}, {"type":"text", "text":"Maximum workgroup size: 1"}], "debug":[[{"filename":"hemm.cl", "line":312}]]}]}, "estimatedResources":{"name":"Estimated Resource Usage", "columns":["Kernel Name", "ALUTs ", "FFs  ", "RAMs ", "DSPs ", "MLABs"], "children":[{"name":"Intel_Internal_Collect_Autorun_Profiling", "data":[1338, 2411, 0, 0, 10], "debug":[[{"filename":"", "line":0}]]}, {"name":"kernel_Out", "data":[28391, 70746, 315, 1283, 714], "debug":[[{"filename":"hemm.cl", "line":221}]]}, {"name":"kernel_aFeeder", "data":[16884, 38880, 649, 4.5, 238], "debug":[[{"filename":"hemm.cl", "line":104}]]}, {"name":"kernel_aLoader", "data":[10757, 14017, 25, 10, 34], "debug":[[{"filename":"hemm.cl", "line":80}]]}, {"name":"kernel_bFeeder", "data":[6201, 14680, 208, 0, 170], "debug":[[{"filename":"hemm.cl", "line":175}]]}, {"name":"kernel_bLoader", "data":[9741, 13228, 21, 1.5, 23], "debug":[[{"filename":"hemm.cl", "line":151}]]}, {"name":"kernel_unloader", "data":[2745, 5586, 0, 0, 54], "debug":[[{"filename":"hemm.cl", "line":312}]]}, {"name":"Kernel Subtotal", "classes":["summary-highlight", "nohover"], "data":[76057, 159548, 1218, 1298, 1243]}, {"name":"Global Interconnect", "classes":["summary-highlight", "nohover"], "data":[8779, 12545, 78, 0, 0]}, {"name":"Board Interface", "classes":["summary-highlight", "nohover"], "data":[134500, 172452, 397, 0, 0]}, {"name":"System description ROM", "classes":["summary-highlight", "nohover"], "data":[0, 67, 2, 0, 0]}, {"name":"Pipe and channel resources", "classes":["summary-highlight", "nohover"], "data":[55, 25374, 213, 0, 0]}, {"name":"Total", "classes":["summary-highlight", "nohover"], "data":[219391, 369986, 1908, 1298, 1243], "data_percent":[25.6778, 21.6518, 70.328, 85.5731]}, {"name":"Available", "classes":["summary-highlight", "nohover"], "data":[854400, 1708800, 2713, 1518, 0]}]}, "compileWarnings":{"name":"Compile Warnings", "children":[]}}';
var infoJSON='{"name":"Info","rows":[{"classes":["info-table"],"data":["hemm"],"name":"Project Name"},{"data":["Arria 10, 10AX115S2F45I2SGES, dcp_bsp:pac_a10"],"name":"Target Family, Device, Board"},{"data":["19.4.0 Build 64"],"name":"AOC Version"},{"data":["19.2.0 Build 57 Pro"],"name":"Quartus Version"},{"data":["aoc -v -profile -fpc -fp-relaxed -high-effort -board=pac_a10 hemm.cl -o hemm.aocx"],"name":"Command"},{"data":["Mon Apr 24 07:08:36 2023"],"name":"Reports Generated At"}]}';
var warningsJSON='{"rows":[{"debug":[[{"filename":"/home/u166759/t2sp/t2s/tests/lasa/hemm/hemm.cl","line":91}]],"details":["/home/u166759/t2sp/t2s/tests/lasa/hemm/hemm.cl:91:17: warning: \'&&\' within \'||\'"],"name":"\'&&\' within \'||\'"}]}';
var quartusJSON='{"quartusFitClockSummary":{  "name":"Quartus Fit Clock Summary"  ,"columns":["", "Kernel fmax", "2x clock fmax"]  ,"children":[  {    "name":"Frequency (MHz)","data":[219.00 ,438.00]  }]},"quartusFitResourceUsageSummary":{  "name":"Quartus Fit Resource Utilization Summary"  ,"columns":["", "ALMs", "FFs", "RAMs", "DSPs", "MLABs"]  ,"children":[  {"name":"Full design (all kernels)","data":[95825.4 ,265553 ,1210 ,1309 ,1189  ]  },  {"name":"Intel_Internal_Collect_Autorun_Profiling","data":[66.8 ,145 ,0 ,0 ,0]  },  {"name":"kernel_Out","data":[57883.6 ,173342 ,315 ,1284 ,704]  },  {"name":"kernel_aFeeder","data":[17830.4 ,49265 ,649 ,9 ,238]  },  {"name":"kernel_aLoader","data":[5209.2 ,9791 ,21 ,14 ,26]  },  {"name":"kernel_bFeeder","data":[8043.6 ,19679 ,208 ,0 ,170]  },  {"name":"kernel_bLoader","data":[4442.9 ,8775 ,17 ,2 ,13]  },  {"name":"kernel_unloader","data":[2348.9 ,4556 ,0 ,0 ,38]  }]}}';
var fileJSON=[{"path":"/home/u166759/t2sp/t2s/tests/lasa/hemm/hemm.cl", "name":"hemm.cl", "has_active_debug_locs":false, "absName":"/home/u166759/t2sp/t2s/tests/lasa/hemm/hemm.cl", "content":"/*OpenCL C x86-64-linux-avx-avx2-avx512-avx512_skylake-enable_synthesis-f16c-fma-intel_fpga-opencl-sse41*/\012#pragma OPENCL FP_CONTRACT ON\012#define float_from_bits(x) as_float(x)\012inline float nan_f32() { return NAN; }\012inline float neg_inf_f32() { return -INFINITY; }\012inline float inf_f32() { return INFINITY; }\012inline bool is_nan_f32(float x) {return isnan(x); }\012inline bool is_inf_f32(float x) {return isinf(x); }\012inline bool is_finite_f32(float x) {return isfinite(x); }\012#define sqrt_f32 sqrt \012#define sin_f32 sin \012#define cos_f32 cos \012#define exp_f32 exp \012#define log_f32 log \012#define abs_f32 fabs \012#define floor_f32 floor \012#define ceil_f32 ceil \012#define round_f32 round \012#define trunc_f32 trunc \012#define pow_f32 pow\012#define asin_f32 asin \012#define acos_f32 acos \012#define tan_f32 tan \012#define atan_f32 atan \012#define atan2_f32 atan2\012#define sinh_f32 sinh \012#define asinh_f32 asinh \012#define cosh_f32 cosh \012#define acosh_f32 acosh \012#define tanh_f32 tanh \012#define atanh_f32 atanh \012#define fast_inverse_f32 native_recip \012#define fast_inverse_sqrt_f32 native_rsqrt \012typedef float2 complex;\012typedef union { float4 t; float2 s[2]; } complex2;\012typedef union { float8 t; float2 s[4]; } complex4;\012typedef union { float16 t; float2 s[8]; } complex8;\012inline float2 conjugate_c32(float2 x) {return (float2)(x.s0, -x.s1); }\012inline float2 sqrt_c32(float2 x) {return (float2)(sqrt_f32(x.s0), 0.0f); }\012inline float2 fast_inverse_c32(float2 x) {return (float2)(fast_inverse_f32(x.s0), 0.0f); }\012inline float2 fast_inverse_sqrt_c32(float2 x) {return (float2)(fast_inverse_sqrt_f32(x.s0), 0.0f); }\012typedef double2 complexd;\012typedef union { double4 t; double2 s[2]; } complexd2;\012typedef union { double8 t; double2 s[4]; } complexd4;\012typedef union { double16 t; double2 s[8]; } complexd8;\012inline double2 conjugate_c64(double2 x) {return (double2)(x.s0, -x.s1); }\012#define __address_space___shared __local\012\012\012// ll suffix in OpenCL is reserved for 128-bit integers.\012#if defined __OPENCL_VERSION__\012#define ADD_INT64_T_SUFFIX(x) x##l\012#define ADD_UINT64_T_SUFFIX(x) x##ul\012// HLSL doesn't have any suffixes.\012#elif defined HLSL_VERSION\012#define ADD_INT64_T_SUFFIX(x) x\012#define ADD_UINT64_T_SUFFIX(x) x\012#else\012#define ADD_INT64_T_SUFFIX(x) x##ll\012#define ADD_UINT64_T_SUFFIX(x) x##ull\012#endif\012#pragma OPENCL EXTENSION cl_intel_channels : enable\012typedef union {\012bool __attribute__ ((aligned(8))) s[8];\012struct {bool s0,  s1,  s2,  s3,  s4,  s5,  s6,  s7;};\012} bool8;\012typedef union {\012bool __attribute__ ((aligned(4))) s[4];\012struct {bool s0,  s1,  s2,  s3;};\012} bool4;\012typedef struct { complex8 s[10]; } cga;\012typedef struct { complex8 s[4]; } cga_1;\012channel complex8 aLoader_aFeeder_channel __attribute__((depth(256))) ;\012channel cga aFeeder_X_channel __attribute__((depth(256))) ;\012channel complex8 bLoader_bFeeder_channel __attribute__((depth(256))) ;\012channel cga_1 bFeeder_Y_channel __attribute__((depth(256))) ;\012channel complex4 Out_unloader_channel __attribute__((depth(256))) ;\012\012#define __address_space_A_serializer_mem_channel __global\012__kernel void kernel_aLoader(\012 const int A_extent_0,\012 const int A_extent_1,\012 const int B_extent_0,\012 __address_space_A_serializer_mem_channel const complex *restrict A_serializer_mem_channel) {\012 int addr;\012 addr = 0;\012 for (int i = 0; i < A_extent_1 / 320 + 1; i++)  {\012  for (int j = 0; j < B_extent_0 >> 7; j++)   {\012   for (int k = 0; k < A_extent_0 >> 8; k++)    {\012    for (int kk_ii_iii = 0; kk_ii_iii < 10240; kk_ii_iii++)     {\012     if (j == 0 && k == 0 || i < A_extent_1 / 320)      {\012      write_channel_intel(aLoader_aFeeder_channel, i < A_extent_1 / 320 ? (complex8){vload16(0, (__address_space_A_serializer_mem_channel float*)(A_serializer_mem_channel + (addr / ((B_extent_0 >> 7) * (A_extent_0 >> 8) * 10240) * (A_extent_0 >> 8) * 10240 + addr % ((A_extent_0 >> 8) * 10240)) * 8))} : (complex8)(float16){(complex)(ADD_UINT64_T_SUFFIX(0)), (complex)(ADD_UINT64_T_SUFFIX(0)), (complex)(ADD_UINT64_T_SUFFIX(0)), (complex)(ADD_UINT64_T_SUFFIX(0)), (complex)(ADD_UINT64_T_SUFFIX(0)), (complex)(ADD_UINT64_T_SUFFIX(0)), (complex)(ADD_UINT64_T_SUFFIX(0)), (complex)(ADD_UINT64_T_SUFFIX(0))});\012     }\012     addr = addr + 1;\012    }\012   }\012  }\012 }\012}\012#undef __address_space_A_serializer_mem_channel\012\012__attribute__((max_global_work_dim(0)))\012__attribute__((autorun))\012__kernel void kernel_aFeeder(\012) {\012 cga aFeeder_X_channel_array;\012 complex8 aFeeder_value_shreg;\012 uint aFeeder_time_stamp_shreg;\012 complex8 aFeeder_in_v;\012 uint aFeeder_cycle;\012 complex8 __attribute__((memory, numbanks(16), singlepump)) DB[2][32][32][16];\012 #pragma unroll\012 for (int jjj_init = 0; jjj_init < 4; jjj_init++)  {\012  if (jjj_init == 0)   {\012   aFeeder_cycle = (uint)(ADD_UINT64_T_SUFFIX(22528));\012  }\012 }\012 while(1)  {\012  if ((uint)(ADD_UINT64_T_SUFFIX(22528)) <= aFeeder_cycle % (uint)(ADD_UINT64_T_SUFFIX(32768)))   {\012   aFeeder_in_v = read_channel_intel(aLoader_aFeeder_channel);\012  }\012  #pragma unroll\012  for (int buf = 0; buf < 10; buf++)   {\012   if (buf == 0)    {\012    aFeeder_value_shreg = aFeeder_in_v;\012    aFeeder_time_stamp_shreg = aFeeder_cycle;\012   }\012   else    {\012    aFeeder_value_shreg = aFeeder_value_shreg;\012    aFeeder_time_stamp_shreg = aFeeder_time_stamp_shreg;\012   }\012   aFeeder_value_shreg = __fpga_reg(__fpga_reg(aFeeder_value_shreg));\012   aFeeder_time_stamp_shreg = __fpga_reg(__fpga_reg(aFeeder_time_stamp_shreg));\012   if ((uint)(ADD_UINT64_T_SUFFIX(22528)) <= aFeeder_time_stamp_shreg % (uint)(ADD_UINT64_T_SUFFIX(32768)))    {\012    if (buf == (int)((aFeeder_time_stamp_shreg % (uint)(ADD_UINT64_T_SUFFIX(32768)) - (uint)(ADD_UINT64_T_SUFFIX(22528))) % (uint)(ADD_UINT64_T_SUFFIX(10))))     {\012     DB[(bool)(aFeeder_time_stamp_shreg / (uint)(ADD_UINT64_T_SUFFIX(32768)) % (uint)(ADD_UINT64_T_SUFFIX(2)))][(int)(aFeeder_time_stamp_shreg % (uint)(ADD_UINT64_T_SUFFIX(32768)) - (uint)(ADD_UINT64_T_SUFFIX(22528))) / 320][(int)(aFeeder_time_stamp_shreg % (uint)(ADD_UINT64_T_SUFFIX(32768)) - (uint)(ADD_UINT64_T_SUFFIX(22528))) / 10 % 32][buf] = aFeeder_value_shreg;\012    }\012   }\012   if ((uint)(ADD_UINT64_T_SUFFIX(0)) < aFeeder_time_stamp_shreg / (uint)(ADD_UINT64_T_SUFFIX(32768)))    {\012    aFeeder_X_channel_array.s[buf] = DB[!(bool)(aFeeder_time_stamp_shreg / (uint)(ADD_UINT64_T_SUFFIX(32768)) % (uint)(ADD_UINT64_T_SUFFIX(2)))][(int)(aFeeder_time_stamp_shreg % (uint)(ADD_UINT64_T_SUFFIX(32768))) / 1024][(int)(aFeeder_time_stamp_shreg % (uint)(ADD_UINT64_T_SUFFIX(32768))) / 32 % 32][buf];\012   }\012  }\012  if ((uint)(ADD_UINT64_T_SUFFIX(0)) < aFeeder_time_stamp_shreg / (uint)(ADD_UINT64_T_SUFFIX(32768)))   {\012   write_channel_intel(aFeeder_X_channel, aFeeder_X_channel_array);\012  }\012  aFeeder_cycle = aFeeder_cycle + (uint)(ADD_UINT64_T_SUFFIX(1));\012 }\012}\012\012#define __address_space_B_serializer_mem_channel __global\012__kernel void kernel_bLoader(\012 const int A_extent_0,\012 const int A_extent_1,\012 const int B_extent_0,\012 __address_space_B_serializer_mem_channel const complex *restrict B_serializer_mem_channel) {\012 int addr;\012 addr = 0;\012 for (int i = 0; i < A_extent_1 / 320 + 1; i++)  {\012  for (int j = 0; j < B_extent_0 >> 7; j++)   {\012   for (int k = 0; k < A_extent_0 >> 8; k++)    {\012    for (int kk_jj_jjj = 0; kk_jj_jjj < 4096; kk_jj_jjj++)     {\012     if (j == 0 && k == 0 || i < A_extent_1 / 320)      {\012      write_channel_intel(bLoader_bFeeder_channel, i < A_extent_1 / 320 ? (complex8){vload16(0, (__address_space_B_serializer_mem_channel float*)(B_serializer_mem_channel + addr % ((B_extent_0 >> 7) * (A_extent_0 >> 8) * 4096) * 8))} : (complex8)(float16){(complex)(ADD_UINT64_T_SUFFIX(0)), (complex)(ADD_UINT64_T_SUFFIX(0)), (complex)(ADD_UINT64_T_SUFFIX(0)), (complex)(ADD_UINT64_T_SUFFIX(0)), (complex)(ADD_UINT64_T_SUFFIX(0)), (complex)(ADD_UINT64_T_SUFFIX(0)), (complex)(ADD_UINT64_T_SUFFIX(0)), (complex)(ADD_UINT64_T_SUFFIX(0))});\012     }\012     addr = addr + 1;\012    }\012   }\012  }\012 }\012}\012#undef __address_space_B_serializer_mem_channel\012\012__attribute__((max_global_work_dim(0)))\012__attribute__((autorun))\012__kernel void kernel_bFeeder(\012) {\012 cga_1 bFeeder_Y_channel_array;\012 complex8 bFeeder_value_shreg;\012 uint bFeeder_time_stamp_shreg;\012 complex8 bFeeder_in_v;\012 uint bFeeder_cycle;\012 complex8 __attribute__((memory, numbanks(4), singlepump)) DB[2][32][32][4];\012 #pragma unroll\012 for (int iii_init = 0; iii_init < 10; iii_init++)  {\012  if (iii_init == 0)   {\012   bFeeder_cycle = (uint)(ADD_UINT64_T_SUFFIX(28672));\012  }\012 }\012 while(1)  {\012  if ((uint)(ADD_UINT64_T_SUFFIX(28672)) <= bFeeder_cycle % (uint)(ADD_UINT64_T_SUFFIX(32768)))   {\012   bFeeder_in_v = read_channel_intel(bLoader_bFeeder_channel);\012  }\012  #pragma unroll\012  for (int buf = 0; buf < 4; buf++)   {\012   if (buf == 0)    {\012    bFeeder_value_shreg = bFeeder_in_v;\012    bFeeder_time_stamp_shreg = bFeeder_cycle;\012   }\012   else    {\012    bFeeder_value_shreg = bFeeder_value_shreg;\012    bFeeder_time_stamp_shreg = bFeeder_time_stamp_shreg;\012   }\012   bFeeder_value_shreg = __fpga_reg(__fpga_reg(bFeeder_value_shreg));\012   bFeeder_time_stamp_shreg = __fpga_reg(__fpga_reg(bFeeder_time_stamp_shreg));\012   if ((uint)(ADD_UINT64_T_SUFFIX(28672)) <= bFeeder_time_stamp_shreg % (uint)(ADD_UINT64_T_SUFFIX(32768)))    {\012    if (buf == (int)((bFeeder_time_stamp_shreg % (uint)(ADD_UINT64_T_SUFFIX(32768)) - (uint)(ADD_UINT64_T_SUFFIX(28672))) % (uint)(ADD_UINT64_T_SUFFIX(4))))     {\012     DB[(bool)(bFeeder_time_stamp_shreg / (uint)(ADD_UINT64_T_SUFFIX(32768)) % (uint)(ADD_UINT64_T_SUFFIX(2)))][(int)(bFeeder_time_stamp_shreg % (uint)(ADD_UINT64_T_SUFFIX(32768)) - (uint)(ADD_UINT64_T_SUFFIX(28672))) / 128][(int)(bFeeder_time_stamp_shreg % (uint)(ADD_UINT64_T_SUFFIX(32768)) - (uint)(ADD_UINT64_T_SUFFIX(28672))) / 4 % 32][buf] = bFeeder_value_shreg;\012    }\012   }\012   if ((uint)(ADD_UINT64_T_SUFFIX(0)) < bFeeder_time_stamp_shreg / (uint)(ADD_UINT64_T_SUFFIX(32768)))    {\012    bFeeder_Y_channel_array.s[buf] = DB[!(bool)(bFeeder_time_stamp_shreg / (uint)(ADD_UINT64_T_SUFFIX(32768)) % (uint)(ADD_UINT64_T_SUFFIX(2)))][(int)(bFeeder_time_stamp_shreg % (uint)(ADD_UINT64_T_SUFFIX(32768))) / 1024][(int)(bFeeder_time_stamp_shreg % (uint)(ADD_UINT64_T_SUFFIX(32768))) % 32][buf];\012   }\012  }\012  if ((uint)(ADD_UINT64_T_SUFFIX(0)) < bFeeder_time_stamp_shreg / (uint)(ADD_UINT64_T_SUFFIX(32768)))   {\012   write_channel_intel(bFeeder_Y_channel, bFeeder_Y_channel_array);\012  }\012  bFeeder_cycle = bFeeder_cycle + (uint)(ADD_UINT64_T_SUFFIX(1));\012 }\012}\012\012__kernel void kernel_Out(\012 const int A_extent_0,\012 const int A_extent_1,\012 const int B_extent_0) {\012  complex Z_shreg[1024][4][10];\012 complex Z_pipe_shreg[4][9217];\012  complex8 Y_shreg[4];\012 complex Z[4][10];\012  complex8 X_shreg[10];\012 cga_1 bFeeder_Y_channel_array;\012 cga aFeeder_X_channel_array;\012 complex Z_shreg_;\012 int Z_pipe_iter;\012 int Z_pipe_base;\012 Z_pipe_iter = 10240;\012 Z_pipe_base = 0;\012 for (int i_j_k = 0; i_j_k < (A_extent_0 >> 8) * (A_extent_1 / 320 * (B_extent_0 >> 7)) + 1; i_j_k++)  {\012  for (int kk_ii_jj = 0; kk_ii_jj < 32768; kk_ii_jj++)   {\012   #pragma unroll\012   for (int iii = 0; iii < 10; iii++)    {\012    #pragma unroll\012    for (int jjj = 0; jjj < 4; jjj++)     {\012     Z[jjj][iii] = Z_shreg[1023][jjj][iii];\012     #pragma unroll\012     for (int l1 = 0; l1 < 1023; l1++)      {\012      Z_shreg[1023 - l1][jjj][iii] = Z_shreg[1022 - l1][jjj][iii];\012     }\012     Z_shreg[0][jjj][iii] = Z[jjj][iii];\012    }\012   }\012   if (i_j_k < (A_extent_0 >> 8) * (A_extent_1 / 320 * (B_extent_0 >> 7)))    {\012    bFeeder_Y_channel_array = read_channel_intel(bFeeder_Y_channel);\012    aFeeder_X_channel_array = read_channel_intel(aFeeder_X_channel);\012   }\012   #pragma unroll\012   for (int iii = 0; iii < 10; iii++)    {\012    #pragma unroll\012    for (int jjj = 0; jjj < 4; jjj++)     {\012     X_shreg[iii] = jjj == 0 ? aFeeder_X_channel_array.s[iii] : X_shreg[iii];\012     X_shreg[iii] = __fpga_reg(__fpga_reg(X_shreg[iii]));\012     Y_shreg[jjj] = iii == 0 ? bFeeder_Y_channel_array.s[jjj] : Y_shreg[jjj];\012     Y_shreg[jjj] = __fpga_reg(__fpga_reg(Y_shreg[jjj]));\012     Z_shreg_ = i_j_k % (A_extent_0 >> 8) == 0 && kk_ii_jj >> 10 == 0 ? (complex)(ADD_UINT64_T_SUFFIX(0)) : __fpga_reg(Z_shreg[0][jjj][iii]);\012     #pragma unroll\012     for (int kkk = 0; kkk < 8; kkk++)      {\012      Z_shreg_ = Z_shreg_ + (complex) {X_shreg[iii].s[kkk].s0 * Y_shreg[jjj].s[kkk].s0 - X_shreg[iii].s[kkk].s1 * Y_shreg[jjj].s[kkk].s1, X_shreg[iii].s[kkk].s0 * Y_shreg[jjj].s[kkk].s1 + X_shreg[iii].s[kkk].s1 * Y_shreg[jjj].s[kkk].s0};\012      if ((kkk & 3) == 3)       {\012       Z_shreg_ = __fpga_reg(Z_shreg_);\012      }\012     }\012     Z_shreg[0][jjj][iii] = Z_shreg_;\012     #pragma unroll\012     for (int kkk = 0; kkk < 8; kkk++)      {\012      if (kkk == 7 && kk_ii_jj >> 10 == 31 && i_j_k % (A_extent_0 >> 8) == (A_extent_0 >> 8) - 1)       {\012       Z_pipe_shreg[jjj][iii * 1024] = Z_shreg[0][jjj][iii];\012      }\012     }\012    }\012   }\012   if ((kk_ii_jj & 31) == 0 && (kk_ii_jj & 1023) >> 5 == 0 && i_j_k % (A_extent_0 >> 8) == (A_extent_0 >> 8) - 1 && kk_ii_jj >> 10 == 31)    {\012    Z_pipe_base = Z_pipe_iter;\012   }\012   complex4 Out_unloader_channel_;\012   #pragma unroll\012   for (int b_6 = 0; b_6 < 4; b_6++)    {\012    Out_unloader_channel_.s[b_6] = Z_pipe_shreg[b_6][0];\012    #pragma unroll\012    for (int b_6_dummy = 0; b_6_dummy < 4; b_6_dummy++)     {\012     Out_unloader_channel_.s[b_6_dummy] = __fpga_reg(__fpga_reg(Out_unloader_channel_.s[b_6_dummy]));\012    }\012   }\012   if (Z_pipe_iter < Z_pipe_base + 10240)    {\012    write_channel_intel(Out_unloader_channel, Out_unloader_channel_);\012   }\012   #pragma unroll\012   for (int b_7 = 0; b_7 < 4; b_7++)    {\012    #pragma unroll\012    for (int p_3 = 0; p_3 < 9; p_3++)     {\012     #pragma unroll\012     for (int l_3 = 0; l_3 < 1023; l_3++)      {\012      Z_pipe_shreg[b_7][p_3 * 1024 + l_3] = Z_pipe_shreg[b_7][p_3 * 1024 + l_3 + 1];\012     }\012     Z_pipe_shreg[b_7][p_3 * 1024 + 1023] = __fpga_reg(__fpga_reg(Z_pipe_shreg[b_7][p_3 * 1024 + 1024]));\012    }\012   }\012   Z_pipe_iter = Z_pipe_iter + 1;\012  }\012 }\012}\012\012#define __address_space_unloader_mem_channel __global\012__kernel void kernel_unloader(\012 const int A_extent_1,\012 const int B_extent_0,\012 __address_space_unloader_mem_channel complex *restrict unloader_mem_channel) {\012 int addr;\012 addr = 0;\012 for (int i = 0; i < A_extent_1 / 320; i++)  {\012  for (int j = 0; j < B_extent_0 >> 7; j++)   {\012   for (int iii_ii_jj = 0; iii_ii_jj < 10240; iii_ii_jj++)    {\012    vstore8(read_channel_intel(Out_unloader_channel).t, 0, (__address_space_unloader_mem_channel float*)(unloader_mem_channel + addr * 4));\012    addr = addr + 1;\012   }\012  }\012 }\012}\012#undef __address_space_unloader_mem_channel\012\012"}];
